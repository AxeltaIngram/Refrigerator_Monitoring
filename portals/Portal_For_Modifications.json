{
    "config": {
        "cols": {
            "lg": 12,
            "md": 10,
            "sm": 6,
            "xs": 4,
            "xxs": 2
        },
        "currentBreakpointForFlyoutWidgets": "lg",
        "currentBreakpointForPanes": "lg",
        "currentBreakpointsForWidgets": {
            "02cce293-bb02-42ff-97d8-d1ef6a49fc7b": "lg",
            "082f2116-423a-4045-876e-d3a759f0d0fc": "lg",
            "0a016572-3d0d-4d49-8d24-3980b705bf90": "md",
            "0ac666b9-a143-41b2-9b68-d88541618988": "lg",
            "0b67126f-3abc-4ae5-8743-d6e532f4174c": "xs",
            "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b": "xs",
            "2331744e-21a8-41af-898e-11d7ef074411": "lg",
            "2560592c-10df-4175-b26f-c9e3a2b1a89c": "md",
            "264bc588-bf8a-4daa-ba95-5f8b617808c1": "md",
            "28b2df06-0971-47e4-b4e0-86bea5364d50": "sm",
            "2c4e19ad-405b-434d-a7cf-86daf7af9a5d": "xs",
            "2cb20973-9524-43cc-86ef-dd3c9c1678ae": "md",
            "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77": "xs",
            "4edd96aa-390c-4655-b192-6bf4adb47bfa": "lg",
            "53d33460-9251-45c1-8776-e7859bb1b6f2": "xs",
            "631a5484-2676-4858-8677-521d87366860": "xs",
            "6540ae2b-4521-4969-93f0-1aa46fda23b7": "xs",
            "6ecf5506-8176-46d7-8329-1b33698a5985": "xs",
            "72fdad00-7d66-4b05-8d76-5caa9d1df5fb": "xs",
            "78c74ae2-55f8-48b5-96fc-2dc5c825b208": "xs",
            "7fc74fc8-6696-46c4-8bf1-38f93366a0d4": "xs",
            "8f542f68-c324-4665-bce3-7f4d26d443ae": "xxs",
            "8f8afc61-d521-4244-b84e-6de6cd008433": "sm",
            "90c50b68-ea13-44fa-ae03-530a2a02a0d8": "md",
            "9e61758a-f253-4e49-b8ee-47fd670c7217": "lg",
            "a087a95a-239f-421c-9652-da2540def439": "lg",
            "b233d829-acc4-46db-bf8a-adc0582d4f17": "xs",
            "b3491df0-a905-4d4c-934a-90e455e4332a": "md",
            "b782f872-9afb-4d2a-ac3e-c0520c5e2b82": "xs",
            "bd2c6ee7-140b-4a67-93c8-f86d05d4708c": "lg",
            "c4528821-0ff7-4b64-9d6c-c5cba15d57bc": "lg",
            "c787eeae-8aa0-4a9a-9c66-1e21dbf445c1": "md",
            "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2": "xs",
            "d77a16c7-22b1-40e7-b263-879e5e951ab4": "md",
            "d911bf06-7c9d-4028-94d1-fb2e28525a90": "lg",
            "e28b4275-d81d-4b77-a339-6ab6d9de0eec": "xs",
            "ede2bdbc-f4ce-4e66-816a-06057704cb74": "lg",
            "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135": "lg",
            "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8": "lg",
            "ff8f563a-5de6-4aa3-86a2-710787850d2d": "xxs",
            "fffcbc96-baf7-44bb-9b72-e499e67c92d5": "xs"
        },
        "datasources": {
            "00b239c1-2401-41f6-96dc-172a3614415c": {
                "id": "00b239c1-2401-41f6-96dc-172a3614415c",
                "name": "currentGatewayId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "026b14e0-6619-4328-918d-81d40a327c21": {
                "id": "026b14e0-6619-4328-918d-81d40a327c21",
                "name": "currentZoneAssetsList",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "03394db2-5e50-47b0-ac8d-42b370c9f626": {
                "id": "03394db2-5e50-47b0-ac8d-42b370c9f626",
                "name": "getAssetTypes",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAssetTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "03bb8292-ce36-4319-b076-bb5d10bcc1bd": {
                "id": "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                "name": "getSensors",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "052c2449-1a89-4386-8034-48f2b7e6b74b": {
                "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                "name": "aggCustomersLocationsSensorsTestTypesTests",
                "settings": {
                    "datasources": [
                        "d9cf7395-c521-4d7a-a77e-eb0d0c3c08e4",
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                        "260de435-075d-40da-9200-0827e7256d9b",
                        "6dab6256-4b14-4af8-bac4-728a6488a14b"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "0606ca05-2044-49c0-b957-9f45077eb828": {
                "id": "0606ca05-2044-49c0-b957-9f45077eb828",
                "name": "assetTypeAgg",
                "settings": {
                    "datasources": [
                        "03394db2-5e50-47b0-ac8d-42b370c9f626",
                        "f1460a74-207c-430d-8fb1-23cd549ab1a0",
                        "d946be20-bf5f-4bb7-adf3-d8e4cac350b7",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "09001cfc-4c8a-46f1-b8c9-c71d4b988a09": {
                "id": "09001cfc-4c8a-46f1-b8c9-c71d4b988a09",
                "name": "currentAssetId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "0a08bf0f-a26c-4bf8-bfbe-547c39055dea": {
                "id": "0a08bf0f-a26c-4bf8-bfbe-547c39055dea",
                "name": "deleteAsset",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteAsset",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "0a4a0e8e-b82e-44a7-ab6e-913b53db865d": {
                "id": "0a4a0e8e-b82e-44a7-ab6e-913b53db865d",
                "name": "currentSensorTypeId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "10a9da0c-4373-4e54-9c5e-891e5982f0f3": {
                "id": "10a9da0c-4373-4e54-9c5e-891e5982f0f3",
                "name": "ZonesListDatasource",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                        "03394db2-5e50-47b0-ac8d-42b370c9f626",
                        "f9c66289-875a-4589-9284-0521099773bf",
                        "600fc287-8478-4f5c-a8cf-4a8f12614670",
                        "7967e50a-0854-410b-8ac5-eb4655335572"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "111b87a3-68ca-4daf-b81d-f83f24edb1c3": {
                "id": "111b87a3-68ca-4daf-b81d-f83f24edb1c3",
                "name": "Sensors",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "Sensors",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "116ece37-507c-4419-944b-db6228224e28": {
                "id": "116ece37-507c-4419-944b-db6228224e28",
                "name": "MessagesHistory",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getMessagesHistory",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "189b1d21-e04a-4e66-b7d8-91913bd03f57": {
                "id": "189b1d21-e04a-4e66-b7d8-91913bd03f57",
                "name": "Tests",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "Tests",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "1fcee2f8-77ae-46fe-bd85-bb878b004378": {
                "id": "1fcee2f8-77ae-46fe-bd85-bb878b004378",
                "name": "createAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "25cf7ae8-39e3-4c1a-9eca-298289d56beb": {
                "id": "25cf7ae8-39e3-4c1a-9eca-298289d56beb",
                "name": "FoodTestTypes",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "FoodTestTypes",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "260de435-075d-40da-9200-0827e7256d9b": {
                "id": "260de435-075d-40da-9200-0827e7256d9b",
                "name": "getTests",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getTests",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "288123fb-9434-4b9a-a38c-2a03ba5ef522": {
                "id": "288123fb-9434-4b9a-a38c-2a03ba5ef522",
                "name": "sensorHistoryTimeRange",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "291cf2e0-f0b7-4a1b-8fbb-cd15d0982fd7": {
                "id": "291cf2e0-f0b7-4a1b-8fbb-cd15d0982fd7",
                "name": "updateAlert",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAlert",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "2a9ed067-8ae6-4459-b0e3-1465194c168f": {
                "id": "2a9ed067-8ae6-4459-b0e3-1465194c168f",
                "name": "latestSensorData",
                "settings": {
                    "defaultValue": "{}"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "2b4bbb52-d922-435a-b084-35c0993287de": {
                "id": "2b4bbb52-d922-435a-b084-35c0993287de",
                "name": "getSensorByGatewayId",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "2b7bfd23-44f4-462c-9438-654a10c8bc81": {
                "id": "2b7bfd23-44f4-462c-9438-654a10c8bc81",
                "name": "currentSensor",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "2bc9f5ea-0749-473b-b956-3f769ac2c65b": {
                "id": "2bc9f5ea-0749-473b-b956-3f769ac2c65b",
                "name": "getLocationById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getLocations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "2d0bb3bd-46cf-4edd-9a29-d4da346933b2": {
                "id": "2d0bb3bd-46cf-4edd-9a29-d4da346933b2",
                "name": "currentGateway",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "2d2829af-2147-4282-a178-4bf699ac2056": {
                "id": "2d2829af-2147-4282-a178-4bf699ac2056",
                "name": "updateZone",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateZone",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "2e1db52a-ec67-412b-a704-abc0fc865224": {
                "id": "2e1db52a-ec67-412b-a704-abc0fc865224",
                "name": "gatewayAgg",
                "settings": {
                    "datasources": [
                        "ba4d9aee-1c4c-4257-b0ed-5baeedc7deeb",
                        "00b239c1-2401-41f6-96dc-172a3614415c",
                        "600fc287-8478-4f5c-a8cf-4a8f12614670",
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "d946be20-bf5f-4bb7-adf3-d8e4cac350b7"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "2ef16576-6a46-4c13-83e4-7f6ecde41489": {
                "id": "2ef16576-6a46-4c13-83e4-7f6ecde41489",
                "name": "foodTestTypeAgg",
                "settings": {
                    "datasources": [
                        "f505a446-21a3-43d4-ab69-d2a71d50beee",
                        "6dab6256-4b14-4af8-bac4-728a6488a14b"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "2fa7c1b0-c2c1-42c5-98f3-02e6bf7eb19b": {
                "id": "2fa7c1b0-c2c1-42c5-98f3-02e6bf7eb19b",
                "name": "deleteGateway",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteGateway",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "302b01f4-527d-4f5d-85c7-c85055731477": {
                "id": "302b01f4-527d-4f5d-85c7-c85055731477",
                "name": "deleteFoodTestType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteFoodTestType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "34373d1e-5b26-45a1-8445-2bc19fec787e": {
                "id": "34373d1e-5b26-45a1-8445-2bc19fec787e",
                "name": "TestTypes",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "TestTypes",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "3522667a-db0a-488e-b0bf-0f1f28c0e958": {
                "id": "3522667a-db0a-488e-b0bf-0f1f28c0e958",
                "name": "deleteSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "354e2ba9-5aa6-4dd8-86c3-2276e9c4186b": {
                "id": "354e2ba9-5aa6-4dd8-86c3-2276e9c4186b",
                "name": "assetAgg",
                "settings": {
                    "datasources": [
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                        "09001cfc-4c8a-46f1-b8c9-c71d4b988a09"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "3e3c2114-68b5-40d8-bafc-f8343c25618d": {
                "id": "3e3c2114-68b5-40d8-bafc-f8343c25618d",
                "name": "currentZoneCurrentAsset",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "4017c6dd-533e-41df-9396-7fcf7b4fe9c3": {
                "id": "4017c6dd-533e-41df-9396-7fcf7b4fe9c3",
                "name": "gatewayRfmUpDlt",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getImAuthKey",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "40854ca9-c5d0-4594-8fa5-55e972d668d1": {
                "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                "name": "sensorTypeAgg",
                "settings": {
                    "datasources": [
                        "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a",
                        "0a4a0e8e-b82e-44a7-ab6e-913b53db865d"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "4592a60c-0d95-4221-a020-caa0a9e57c58": {
                "id": "4592a60c-0d95-4221-a020-caa0a9e57c58",
                "name": "assetDetails",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "4a2a1809-5168-4d46-9bf7-2b1df08d57cd": {
                "id": "4a2a1809-5168-4d46-9bf7-2b1df08d57cd",
                "name": "currentEmployeeAdminPage",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "4f1c4180-5095-456b-bb55-dac596bdc964": {
                "id": "4f1c4180-5095-456b-bb55-dac596bdc964",
                "name": "getHistoryForDoorSensor",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getHistoryForSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "4fba2796-31ed-47a3-986f-4d1454551a80": {
                "id": "4fba2796-31ed-47a3-986f-4d1454551a80",
                "name": "updateAssetType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAssetType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "5285d62d-e53f-4731-bfa5-51daa58d0897": {
                "id": "5285d62d-e53f-4731-bfa5-51daa58d0897",
                "name": "getEmployeeById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getEmployees",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "55d05226-c94d-41ac-979b-b2ff92dd5ffe": {
                "id": "55d05226-c94d-41ac-979b-b2ff92dd5ffe",
                "name": "currentLocation",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "5979d929-dc05-4edd-b1b7-1099a6fbec17": {
                "id": "5979d929-dc05-4edd-b1b7-1099a6fbec17",
                "name": "getTestById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getTests",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "5ab20b1b-d4cf-4c0a-a193-63ec6492eb68": {
                "id": "5ab20b1b-d4cf-4c0a-a193-63ec6492eb68",
                "name": "currentAsset",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "5ab6335e-cd4a-45b0-90f7-523765ba6134": {
                "id": "5ab6335e-cd4a-45b0-90f7-523765ba6134",
                "name": "userMessaging",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "TOPIC_NAME": "messaging/b4d8a2bb0bf48e98dacbd78e9e50"
                },
                "type": "CB_MESSAGE_TOPIC"
            },
            "5abb9cf7-f220-44aa-86b0-ae224a59e43d": {
                "id": "5abb9cf7-f220-44aa-86b0-ae224a59e43d",
                "name": "updateAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "5b101569-dfcf-46a5-a150-18cbe0da8271": {
                "id": "5b101569-dfcf-46a5-a150-18cbe0da8271",
                "name": "GetGatewayMACandHBandType",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "GetGatewayMACandHBandGT",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "5b813a78-7376-4831-b791-a1c52a4c9659": {
                "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                "name": "aggregatorncruid",
                "settings": {
                    "datasources": [
                        "6da489e2-067c-4bbb-8482-00cecb5f7020",
                        "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "5c415bd6-f0b5-43ec-b066-166346c2374e": {
                "id": "5c415bd6-f0b5-43ec-b066-166346c2374e",
                "name": "zoneAndassetInfo",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "600fc287-8478-4f5c-a8cf-4a8f12614670": {
                "id": "600fc287-8478-4f5c-a8cf-4a8f12614670",
                "name": "getGateways",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getGateways",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "622e16d8-1315-4133-8ce3-52740c15acca": {
                "id": "622e16d8-1315-4133-8ce3-52740c15acca",
                "name": "updateLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "62b15f31-c1b7-46e6-a0a0-8406696787ad": {
                "id": "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                "name": "getLocations",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getLocations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "62eefd77-9519-43a3-9eb9-718ad9d7b01d": {
                "id": "62eefd77-9519-43a3-9eb9-718ad9d7b01d",
                "name": "deleteSensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "680e90d6-fd56-42a2-950b-6f16a048bdcf": {
                "id": "680e90d6-fd56-42a2-950b-6f16a048bdcf",
                "name": "userMessage",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "TOPIC_NAME": "messaging/ee8fa2ba0b80e8c8cce1c2ded0ae01"
                },
                "type": "CB_MESSAGE_TOPIC"
            },
            "6d6f9aa5-f3ec-4bab-8ad4-79e270a6e14b": {
                "id": "6d6f9aa5-f3ec-4bab-8ad4-79e270a6e14b",
                "name": "getEmployeeName",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "refresh_interval": 0
                },
                "type": "CB_USER_LIST"
            },
            "6da489e2-067c-4bbb-8482-00cecb5f7020": {
                "id": "6da489e2-067c-4bbb-8482-00cecb5f7020",
                "name": "LoCuSenFootestTest",
                "settings": {
                    "datasources": [
                        "d9cf7395-c521-4d7a-a77e-eb0d0c3c08e4",
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                        "260de435-075d-40da-9200-0827e7256d9b",
                        "6dab6256-4b14-4af8-bac4-728a6488a14b",
                        "94af7001-e957-4de5-9174-981f2ed6366e"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "6dab6256-4b14-4af8-bac4-728a6488a14b": {
                "id": "6dab6256-4b14-4af8-bac4-728a6488a14b",
                "name": "getFoodTestTypes",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getFoodTestTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "72722df6-3ed6-4c91-8a33-e187a6f7113e": {
                "id": "72722df6-3ed6-4c91-8a33-e187a6f7113e",
                "name": "gatewayListDatasource",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                        "03394db2-5e50-47b0-ac8d-42b370c9f626",
                        "f9c66289-875a-4589-9284-0521099773bf",
                        "600fc287-8478-4f5c-a8cf-4a8f12614670"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "73c144a8-e6ed-4936-a6eb-087ba4cd3d1c": {
                "id": "73c144a8-e6ed-4936-a6eb-087ba4cd3d1c",
                "name": "getSensorsBySensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "79102778-9108-4a66-b5b3-370443655c9b": {
                "id": "79102778-9108-4a66-b5b3-370443655c9b",
                "name": "sendMessage",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "sendMessage",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "7967e50a-0854-410b-8ac5-eb4655335572": {
                "id": "7967e50a-0854-410b-8ac5-eb4655335572",
                "name": "getZones",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getZones",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "79e5b700-b68a-409d-8c7d-652644fbb9d8": {
                "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                "name": "locationAgg",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "55d05226-c94d-41ac-979b-b2ff92dd5ffe"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "7a728684-c57b-4017-9611-2f23c6fa1b91": {
                "id": "7a728684-c57b-4017-9611-2f23c6fa1b91",
                "name": "createSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "7ce9d7a4-efa7-437b-8d39-6a9ab405d17a": {
                "id": "7ce9d7a4-efa7-437b-8d39-6a9ab405d17a",
                "name": "deleteZone",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteZone",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "84df219d-520d-4338-9fee-e443d443ed9b": {
                "id": "84df219d-520d-4338-9fee-e443d443ed9b",
                "name": "deleteAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "85e33db2-72b9-41de-9a1d-1e260d645433": {
                "id": "85e33db2-72b9-41de-9a1d-1e260d645433",
                "name": "createZone",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createZone",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "86223af7-76d4-41f5-b9a5-65b5d918bd25": {
                "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                "name": "getAlertsWConfigId",
                "settings": {
                    "datasources": [
                        "97b22889-6a40-435b-a94d-57e3d12f05d5",
                        "b9bf10ac-2171-4db2-bdec-e7150cf22b88"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "87f666c3-2d86-4403-8958-8ad4d229e0df": {
                "id": "87f666c3-2d86-4403-8958-8ad4d229e0df",
                "name": "deleteAssetType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteAssetType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "8a65f68f-e013-4651-8efd-0d000fd1cc9a": {
                "id": "8a65f68f-e013-4651-8efd-0d000fd1cc9a",
                "name": "locationsAndAssets",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "8fbcbb2f-a293-4381-b7de-6d0790af233e": {
                "id": "8fbcbb2f-a293-4381-b7de-6d0790af233e",
                "name": "currentZone",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "904009cc-a342-4d7e-930f-23298d0c0043": {
                "id": "904009cc-a342-4d7e-930f-23298d0c0043",
                "name": "deleteEmployee",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteEmployee",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "90e95fac-b286-4804-a4c4-588eb47ec66a": {
                "id": "90e95fac-b286-4804-a4c4-588eb47ec66a",
                "name": "toggleDoorFake",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "9147f7c4-7ae9-4096-9328-e87913c58553": {
                "id": "9147f7c4-7ae9-4096-9328-e87913c58553",
                "name": "createSensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "94ac7a9e-f97b-4599-9e32-9df76f53d827": {
                "id": "94ac7a9e-f97b-4599-9e32-9df76f53d827",
                "name": "currentAssetSensorsList",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "94af7001-e957-4de5-9174-981f2ed6366e": {
                "id": "94af7001-e957-4de5-9174-981f2ed6366e",
                "name": "FromToDates",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "95e1010d-6c91-485b-a8ec-df1501d12a88": {
                "id": "95e1010d-6c91-485b-a8ec-df1501d12a88",
                "name": "updateGateway",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateGateway",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "962459f9-d7e4-472a-8277-c0294ae92d28": {
                "id": "962459f9-d7e4-472a-8277-c0294ae92d28",
                "name": "saveMessage",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "addMessageHistory",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "97b22889-6a40-435b-a94d-57e3d12f05d5": {
                "id": "97b22889-6a40-435b-a94d-57e3d12f05d5",
                "name": "getAlertHistory",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertHistory",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "9c0ac490-f99b-4836-a174-d680e93bc60d": {
                "id": "9c0ac490-f99b-4836-a174-d680e93bc60d",
                "name": "testDatasourceSensors",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "9fb19cf5-1818-44c3-88c3-8ba791929cd6": {
                "id": "9fb19cf5-1818-44c3-88c3-8ba791929cd6",
                "name": "deleteLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "a002f3f7-4861-493b-a2e3-16b743d458ac": {
                "id": "a002f3f7-4861-493b-a2e3-16b743d458ac",
                "name": "getOrphanSensorData",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getOrphanSensorData",
                    "payload": "",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "a028911d-bb3e-47eb-b82a-59f27d481fdb": {
                "id": "a028911d-bb3e-47eb-b82a-59f27d481fdb",
                "name": "listOfDoorSensors",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "a4ab9207-ab41-43d2-bdab-7d27cbd0836d": {
                "id": "a4ab9207-ab41-43d2-bdab-7d27cbd0836d",
                "name": "getSensorById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "a4c0be27-f715-4f5a-8003-f02e3ad952ba": {
                "id": "a4c0be27-f715-4f5a-8003-f02e3ad952ba",
                "name": "createAsset",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createAsset",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "a66cfc2a-b4b7-4787-bd54-92c5138f1d83": {
                "id": "a66cfc2a-b4b7-4787-bd54-92c5138f1d83",
                "name": "currentEmployee",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "a8b9392c-a0a2-4bbd-b1f1-706b1bebb54e": {
                "id": "a8b9392c-a0a2-4bbd-b1f1-706b1bebb54e",
                "name": "getSensorsByLocationIdForMap",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43": {
                "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                "name": "cruidgridlocvar",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "b216cdaf-1352-4f05-b1d4-5616875cc43e": {
                "id": "b216cdaf-1352-4f05-b1d4-5616875cc43e",
                "name": "Locations",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "Locations",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "b36fd74f-71d5-4eeb-8142-4d2f20c50aaa": {
                "id": "b36fd74f-71d5-4eeb-8142-4d2f20c50aaa",
                "name": "getTestTypeById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getTestTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a": {
                "id": "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a",
                "name": "getSensorTypes",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensorTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3": {
                "id": "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3",
                "name": "getHistoryForSensors",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getHistoryForSensors",
                    "payload": "{ \t\"sensor_ids\": [\"351530\", \"385259\"], \t\"startTime\": \"2018-09-14T14:29:30Z\", \t\"endTime\": \"2018-09-14T18:44:16Z\" }",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b9bf10ac-2171-4db2-bdec-e7150cf22b88": {
                "id": "b9bf10ac-2171-4db2-bdec-e7150cf22b88",
                "name": "currentAlertConfigId",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "ba4d9aee-1c4c-4257-b0ed-5baeedc7deeb": {
                "id": "ba4d9aee-1c4c-4257-b0ed-5baeedc7deeb",
                "name": "getOrphanGatewayData",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getOrphanGatewayData",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "bd48c4e7-a180-4624-b1d0-9d5fd166f1de": {
                "id": "bd48c4e7-a180-4624-b1d0-9d5fd166f1de",
                "name": "zoneAgg",
                "settings": {
                    "datasources": [
                        "7967e50a-0854-410b-8ac5-eb4655335572",
                        "eaf560ab-f725-424a-a66b-4019f48ffc4a"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "bdaae147-89df-4b5f-83fa-33663638754d": {
                "id": "bdaae147-89df-4b5f-83fa-33663638754d",
                "name": "updateEmployee",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateEmployee",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "be9ad366-1e3b-4fe1-af3e-b36320c38ce6": {
                "id": "be9ad366-1e3b-4fe1-af3e-b36320c38ce6",
                "name": "deleteAsset",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteAsset",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "c79fcbba-882d-4147-b0c1-841b1302784f": {
                "id": "c79fcbba-882d-4147-b0c1-841b1302784f",
                "name": "employeeAgg",
                "settings": {
                    "datasources": [
                        "4a2a1809-5168-4d46-9bf7-2b1df08d57cd",
                        "d946be20-bf5f-4bb7-adf3-d8e4cac350b7",
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "c9514c25-2030-4eaf-8fd0-3bee1fbac1a0": {
                "id": "c9514c25-2030-4eaf-8fd0-3bee1fbac1a0",
                "name": "createTest",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createTest",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "c9f26ec9-91c5-4179-9fe8-cff657e39e75": {
                "id": "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                "name": "getAssets",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAssets",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "ca20b6f9-53c6-46b8-983c-763ec7dfefcf": {
                "id": "ca20b6f9-53c6-46b8-983c-763ec7dfefcf",
                "name": "Alerts",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "Alerts",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "ccd45e97-61c7-4889-afcf-fb1e88cc902d": {
                "id": "ccd45e97-61c7-4889-afcf-fb1e88cc902d",
                "name": "currentTest",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "d0076a83-4237-4bfa-9fea-19cbe248c81c": {
                "id": "d0076a83-4237-4bfa-9fea-19cbe248c81c",
                "name": "sensorAgg",
                "settings": {
                    "datasources": [
                        "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                        "2b7bfd23-44f4-462c-9438-654a10c8bc81",
                        "a002f3f7-4861-493b-a2e3-16b743d458ac",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                        "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a",
                        "600fc287-8478-4f5c-a8cf-4a8f12614670"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "d05fba60-2163-41bb-b8b1-8d1008e7c792": {
                "id": "d05fba60-2163-41bb-b8b1-8d1008e7c792",
                "name": "getTestTypes",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getTestTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "d2109e96-9b11-49ef-a100-49a1c5638647": {
                "id": "d2109e96-9b11-49ef-a100-49a1c5638647",
                "name": "updateFoodTestType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateFoodTestType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "d4ad3c48-0bbe-4db1-9c69-f6c6acc4ddcb": {
                "id": "d4ad3c48-0bbe-4db1-9c69-f6c6acc4ddcb",
                "name": "createFoodTestType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createFoodTestType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "d946be20-bf5f-4bb7-adf3-d8e4cac350b7": {
                "id": "d946be20-bf5f-4bb7-adf3-d8e4cac350b7",
                "name": "getEmployees",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getEmployees",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "d9cf7395-c521-4d7a-a77e-eb0d0c3c08e4": {
                "id": "d9cf7395-c521-4d7a-a77e-eb0d0c3c08e4",
                "name": "getCustomers",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getCustomers",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "d9fa21fd-5822-4154-8a77-1adbfe0cc5a5": {
                "id": "d9fa21fd-5822-4154-8a77-1adbfe0cc5a5",
                "name": "getSensorsByLocationId",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "da2c7c6c-d63f-472a-928f-5641d881998f": {
                "id": "da2c7c6c-d63f-472a-928f-5641d881998f",
                "name": "getAlerts",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlerts",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "db117283-a10c-4559-9b45-426118f854b9": {
                "id": "db117283-a10c-4559-9b45-426118f854b9",
                "name": "getAlertTypes",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "db77d487-6831-4b6a-b305-df256159cff7": {
                "id": "db77d487-6831-4b6a-b305-df256159cff7",
                "name": "createLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "de0df9ec-43de-4435-b869-7ff756795452": {
                "id": "de0df9ec-43de-4435-b869-7ff756795452",
                "name": "currentCustomer",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "de4a2f56-4983-4f6d-95f8-2dc9b8f23eff": {
                "id": "de4a2f56-4983-4f6d-95f8-2dc9b8f23eff",
                "name": "customerGateways",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "e0029e75-10b5-46a4-bc1a-ea3b1a70e1a9": {
                "id": "e0029e75-10b5-46a4-bc1a-ea3b1a70e1a9",
                "name": "sensorHistoryIds",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "e145e2e6-b061-4fcd-b3bc-0ce511e8ffb7": {
                "id": "e145e2e6-b061-4fcd-b3bc-0ce511e8ffb7",
                "name": "updateSensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e189ae14-4d5d-4bd3-b370-b270b1e4dab7": {
                "id": "e189ae14-4d5d-4bd3-b370-b270b1e4dab7",
                "name": "getAlertConfigurations",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertConfigurations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e4cc3590-1da2-4edc-94b9-de87c9e63adb": {
                "id": "e4cc3590-1da2-4edc-94b9-de87c9e63adb",
                "name": "createEmployee",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createEmployee",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e5ffc226-91ec-4b86-b058-a4ec135c1205": {
                "id": "e5ffc226-91ec-4b86-b058-a4ec135c1205",
                "name": "updateSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e7bc25c3-58b6-4f54-8179-bdc1cbb43c7c": {
                "id": "e7bc25c3-58b6-4f54-8179-bdc1cbb43c7c",
                "name": "createAssetType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createAssetType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "eaf560ab-f725-424a-a66b-4019f48ffc4a": {
                "id": "eaf560ab-f725-424a-a66b-4019f48ffc4a",
                "name": "currentZoneId",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "ec9933d3-c765-4146-9483-11747424a343": {
                "id": "ec9933d3-c765-4146-9483-11747424a343",
                "name": "createGateway",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createGateway",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "ef617a94-18d8-41f3-b83b-0779f0d06324": {
                "id": "ef617a94-18d8-41f3-b83b-0779f0d06324",
                "name": "getTestTypeById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getTestTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "f1460a74-207c-430d-8fb1-23cd549ab1a0": {
                "id": "f1460a74-207c-430d-8fb1-23cd549ab1a0",
                "name": "currentAssetTypeId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "f505a446-21a3-43d4-ab69-d2a71d50beee": {
                "id": "f505a446-21a3-43d4-ab69-d2a71d50beee",
                "name": "currentFoodTestType",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "f7b5aca2-5cfb-413c-9423-87d44ae0dafa": {
                "id": "f7b5aca2-5cfb-413c-9423-87d44ae0dafa",
                "name": "currentSensorGauge",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "f8530d60-fb6f-4f05-a369-4dd6356135f4": {
                "id": "f8530d60-fb6f-4f05-a369-4dd6356135f4",
                "name": "testDatasource",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "f9c66289-875a-4589-9284-0521099773bf": {
                "id": "f9c66289-875a-4589-9284-0521099773bf",
                "name": "gatewayListGroupByAttribute",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "fb95de32-504c-4393-bcec-5ee0cb5b580c": {
                "id": "fb95de32-504c-4393-bcec-5ee0cb5b580c",
                "name": "getHistoryForSensorsB",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getHistoryForSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "fce038e9-623e-4687-89d0-9adb4ff3cf2d": {
                "id": "fce038e9-623e-4687-89d0-9adb4ff3cf2d",
                "name": "getSensorsByCustomerId",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "fdbe8c15-6250-4e41-90fe-76605ca73bdd": {
                "id": "fdbe8c15-6250-4e41-90fe-76605ca73bdd",
                "name": "updateAsset",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAsset",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            }
        },
        "externalScripts": [
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://code.jquery.com/jquery-3.3.1.min.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://cdnjs.cloudflare.com/ajax/libs/TableExport/3.3.13/js/tableexport.min.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://use.fontawesome.com/releases/v5.3.1/css/all.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://cdnjs.cloudflare.com/ajax/libs/jquery-csv/0.8.9/jquery.csv.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://www.amcharts.com/lib/3/amcharts.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://www.amcharts.com/lib/3/plugins/export/export.min.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://www.amcharts.com/lib/3/plugins/export/export.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://www.amcharts.com/lib/3/themes/light.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://www.amcharts.com/lib/3/serial.js"
            }
        ],
        "flyoutWidgetLayout": {
            "lg": [
                {
                    "h": 9,
                    "i": "4c2b6754-7a5f-4581-95ec-5b8f00d9aa0f",
                    "minH": 3,
                    "w": 2,
                    "x": 0,
                    "y": 0
                }
            ],
            "md": [],
            "sm": [],
            "xs": [
                {
                    "h": 9,
                    "i": "4c2b6754-7a5f-4581-95ec-5b8f00d9aa0f",
                    "minH": 3,
                    "moved": false,
                    "static": false,
                    "w": 2,
                    "x": 0,
                    "y": 0
                }
            ],
            "xxs": [
                {
                    "h": 13,
                    "i": "4c2b6754-7a5f-4581-95ec-5b8f00d9aa0f",
                    "minH": 3,
                    "moved": false,
                    "static": false,
                    "w": 2,
                    "x": 0,
                    "y": 0
                }
            ]
        },
        "headerWidgetLayout": {
            "lg": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 66,
                    "x": 0,
                    "y": 0
                },
                {
                    "h": 1,
                    "i": "title",
                    "moved": false,
                    "static": false,
                    "w": 86,
                    "x": 70,
                    "y": 0
                }
            ],
            "md": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 36,
                    "x": 0,
                    "y": 0
                },
                {
                    "h": 1,
                    "i": "title",
                    "moved": false,
                    "static": false,
                    "w": 39,
                    "x": 154,
                    "y": 0
                }
            ],
            "sm": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 34,
                    "x": 0,
                    "y": 0
                },
                {
                    "h": 1,
                    "i": "title",
                    "moved": false,
                    "static": false,
                    "w": 37,
                    "x": 117,
                    "y": 0
                }
            ],
            "xs": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 28,
                    "x": 0,
                    "y": 0
                },
                {
                    "h": 1,
                    "i": "title",
                    "moved": false,
                    "static": false,
                    "w": 31,
                    "x": 71,
                    "y": 0
                }
            ],
            "xxs": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 32,
                    "x": 0,
                    "y": 0
                },
                {
                    "h": 1,
                    "i": "title",
                    "moved": false,
                    "static": false,
                    "w": 33,
                    "x": 47,
                    "y": 0
                }
            ]
        },
        "pages": {
            "073da4a9-c03e-44aa-b284-895319a9d55f": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "073da4a9-c03e-44aa-b284-895319a9d55f",
                "isChild": false,
                "isParam": false,
                "name": "Map",
                "path": ""
            },
            "0dfa2aa9-4ee9-4c21-8974-49174aec41ec": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "0dfa2aa9-4ee9-4c21-8974-49174aec41ec",
                "isChild": false,
                "isParam": false,
                "name": "SensorTypes",
                "path": ""
            },
            "0f3bc53b-6a08-4710-89b0-d16f755b3bab": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "0f3bc53b-6a08-4710-89b0-d16f755b3bab",
                "isChild": false,
                "isParam": false,
                "name": "FoodTest",
                "path": ""
            },
            "13456dd9-88d3-4a39-9a70-22a86e2f3a1f": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "13456dd9-88d3-4a39-9a70-22a86e2f3a1f",
                "isChild": false,
                "isParam": false,
                "name": "Sensors",
                "path": ""
            },
            "415932b6-9666-49c7-afef-fc0cb6ef79e5": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "415932b6-9666-49c7-afef-fc0cb6ef79e5",
                "isChild": false,
                "isParam": false,
                "name": "SensorChart",
                "path": ""
            },
            "603ee5a9-e592-497c-b89c-7cab2c575d6a": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "603ee5a9-e592-497c-b89c-7cab2c575d6a",
                "isChild": false,
                "isParam": false,
                "name": "Gateways",
                "path": ""
            },
            "7ab2edf4-1be9-43b3-b329-5586579f1970": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "7ab2edf4-1be9-43b3-b329-5586579f1970",
                "isChild": false,
                "isParam": false,
                "name": "Locations",
                "path": ""
            },
            "9ae73fdd-968c-4b34-ae25-7bbe02533b8e": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "9ae73fdd-968c-4b34-ae25-7bbe02533b8e",
                "isChild": false,
                "isParam": false,
                "name": "Employees",
                "path": ""
            },
            "Home": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "Home",
                "isChild": false,
                "isParam": false,
                "name": "Home",
                "path": ""
            },
            "a408b1a9-aff2-4518-8c8c-8969303c5dfa": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "a408b1a9-aff2-4518-8c8c-8969303c5dfa",
                "isChild": false,
                "isParam": false,
                "name": "AlertConfig",
                "path": ""
            },
            "a7e16a3e-637d-44dc-abe9-417b4519a7f6": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "a7e16a3e-637d-44dc-abe9-417b4519a7f6",
                "isChild": false,
                "isParam": false,
                "name": "Device_Status",
                "path": ""
            },
            "b19afa39-829b-432e-bc08-a555434230c6": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "b19afa39-829b-432e-bc08-a555434230c6",
                "isChild": false,
                "isParam": false,
                "name": "HomeModifications",
                "path": ""
            },
            "be95fb19-aff9-4c9b-b6b1-fc759fcbac68": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "be95fb19-aff9-4c9b-b6b1-fc759fcbac68",
                "isChild": false,
                "isParam": false,
                "name": "AssetTypes",
                "path": ""
            },
            "dba1ed9c-2399-4a4b-b03e-4b0f7995998f": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "dba1ed9c-2399-4a4b-b03e-4b0f7995998f",
                "isChild": false,
                "isParam": false,
                "name": "FoodTestTypes",
                "path": ""
            },
            "e27e1a6d-a47d-4d64-a726-0e91c54b5b69": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "e27e1a6d-a47d-4d64-a726-0e91c54b5b69",
                "isChild": false,
                "isParam": false,
                "name": "Zones",
                "path": ""
            },
            "e6157a84-c260-418c-96c8-eb179a88ef24": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "e6157a84-c260-418c-96c8-eb179a88ef24",
                "isChild": false,
                "isParam": false,
                "name": "Assets",
                "path": ""
            }
        },
        "paneGridWidgetLayouts": {
            "02cce293-bb02-42ff-97d8-d1ef6a49fc7b": {
                "lg": [
                    {
                        "h": 9,
                        "i": "316ecbc2-34ec-4410-a1b2-5bf4bdbda02e",
                        "minH": 3,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "082f2116-423a-4045-876e-d3a759f0d0fc": {
                "lg": [
                    {
                        "h": 9,
                        "i": "ecd0f391-d4bc-4418-9c8a-aca1b59ac5e4",
                        "minH": 3,
                        "w": 13,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "0a016572-3d0d-4d49-8d24-3980b705bf90": {
                "lg": [
                    {
                        "h": 3,
                        "i": "7db0df09-8bf0-43a6-9c12-426b23c7592e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 20,
                        "i": "a0d8f319-9c9e-4081-90ac-f554a8848f76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 26,
                        "i": "a574bcfd-533d-4d90-9e46-e512f6ddb0b8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 0
                    },
                    {
                        "h": 26,
                        "i": "e1b051ab-65a8-4235-8af1-aa4a73aec89f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "955ce274-fb4d-4b66-8e8b-9937194767b3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 23
                    }
                ],
                "md": [
                    {
                        "h": 3,
                        "i": "7db0df09-8bf0-43a6-9c12-426b23c7592e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 20,
                        "i": "a0d8f319-9c9e-4081-90ac-f554a8848f76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 26,
                        "i": "a574bcfd-533d-4d90-9e46-e512f6ddb0b8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 7,
                        "y": 0
                    },
                    {
                        "h": 26,
                        "i": "e1b051ab-65a8-4235-8af1-aa4a73aec89f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "955ce274-fb4d-4b66-8e8b-9937194767b3",
                        "minH": 3,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "0ac666b9-a143-41b2-9b68-d88541618988": {
                "lg": [
                    {
                        "h": 9,
                        "i": "6e69425d-4d96-4101-8cf6-99bc0bfc8aec",
                        "minH": 3,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "0b67126f-3abc-4ae5-8743-d6e532f4174c": {
                "lg": [
                    {
                        "h": 9,
                        "i": "84d45ced-4bd8-4438-8067-50395f90c92a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "790d6b1c-0498-4655-957c-24968c757393",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "84d45ced-4bd8-4438-8067-50395f90c92a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 20,
                        "i": "790d6b1c-0498-4655-957c-24968c757393",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "84d45ced-4bd8-4438-8067-50395f90c92a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 22,
                        "i": "790d6b1c-0498-4655-957c-24968c757393",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "84d45ced-4bd8-4438-8067-50395f90c92a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "790d6b1c-0498-4655-957c-24968c757393",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b": {
                "lg": [
                    {
                        "h": 9,
                        "i": "d3924192-7c0c-4768-b1d9-0c12e4bf577e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 9,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "c225028f-9268-4fa9-9e6f-a1323ea45a7d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "05698076-8fc4-4d0e-9e30-767a403c47cb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 7,
                        "i": "d3924192-7c0c-4768-b1d9-0c12e4bf577e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "c225028f-9268-4fa9-9e6f-a1323ea45a7d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "05698076-8fc4-4d0e-9e30-767a403c47cb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 10
                    }
                ],
                "sm": [
                    {
                        "h": 7,
                        "i": "d3924192-7c0c-4768-b1d9-0c12e4bf577e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "c225028f-9268-4fa9-9e6f-a1323ea45a7d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 14,
                        "i": "d3924192-7c0c-4768-b1d9-0c12e4bf577e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "c225028f-9268-4fa9-9e6f-a1323ea45a7d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "05698076-8fc4-4d0e-9e30-767a403c47cb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": []
            },
            "2331744e-21a8-41af-898e-11d7ef074411": {
                "lg": [
                    {
                        "h": 9,
                        "i": "a0369f10-7f90-4a17-82b7-3f5ce93bde24",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "2560592c-10df-4175-b26f-c9e3a2b1a89c": {
                "lg": [
                    {
                        "h": 14,
                        "i": "72cd5295-ba86-4328-b742-f71f55ffe3c6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 14,
                        "i": "776ae626-f425-4ea2-a2a5-fdd979c0d2ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 2,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 14,
                        "i": "72cd5295-ba86-4328-b742-f71f55ffe3c6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 21,
                        "i": "776ae626-f425-4ea2-a2a5-fdd979c0d2ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 2,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "264bc588-bf8a-4daa-ba95-5f8b617808c1": {
                "lg": [
                    {
                        "h": 32,
                        "i": "2419797c-06fe-496c-8d94-fbb11e232c7e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "1ea1c3b7-d734-461c-bebb-0e9b2dd81289",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 5,
                        "y": 40
                    },
                    {
                        "h": 8,
                        "i": "5c09457b-0376-4c3d-95c7-b5b5ecbb92b3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 4,
                        "y": 32
                    },
                    {
                        "h": 21,
                        "i": "d2dced0d-a256-40c6-9386-8ecb7ea170d8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 120
                    },
                    {
                        "h": 77,
                        "i": "88ef26d9-2dc8-46fb-b1f9-3f13c3bf0723",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 1,
                        "y": 43
                    }
                ],
                "md": [
                    {
                        "h": 27,
                        "i": "2419797c-06fe-496c-8d94-fbb11e232c7e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "1ea1c3b7-d734-461c-bebb-0e9b2dd81289",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 27
                    },
                    {
                        "h": 3,
                        "i": "5c09457b-0376-4c3d-95c7-b5b5ecbb92b3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 30
                    },
                    {
                        "h": 9,
                        "i": "d2dced0d-a256-40c6-9386-8ecb7ea170d8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 110
                    },
                    {
                        "h": 77,
                        "i": "88ef26d9-2dc8-46fb-b1f9-3f13c3bf0723",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 33
                    }
                ],
                "sm": [],
                "xs": [
                    {
                        "h": 17,
                        "i": "2419797c-06fe-496c-8d94-fbb11e232c7e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "1ea1c3b7-d734-461c-bebb-0e9b2dd81289",
                        "minH": 3,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "5c09457b-0376-4c3d-95c7-b5b5ecbb92b3",
                        "minH": 3,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": []
            },
            "28b2df06-0971-47e4-b4e0-86bea5364d50": {
                "lg": [
                    {
                        "h": 9,
                        "i": "7128415c-8661-43c2-85d2-afff082131ee",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "ed6852f6-0019-4d3e-bde4-d87406ce9d2d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 35
                    },
                    {
                        "h": 8,
                        "i": "c50121ae-147d-41dc-af70-50fb2661b618",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 1,
                        "y": 27
                    },
                    {
                        "h": 9,
                        "i": "9d300546-bff0-4297-883f-7a3571f96fa8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 18
                    },
                    {
                        "h": 9,
                        "i": "f8a3978d-e433-45e3-8743-cb9439ab8598",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 9,
                        "i": "7128415c-8661-43c2-85d2-afff082131ee",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 27
                    },
                    {
                        "h": 5,
                        "i": "ed6852f6-0019-4d3e-bde4-d87406ce9d2d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "c50121ae-147d-41dc-af70-50fb2661b618",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 1,
                        "y": 14
                    },
                    {
                        "h": 9,
                        "i": "9d300546-bff0-4297-883f-7a3571f96fa8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 18
                    },
                    {
                        "h": 9,
                        "i": "f8a3978d-e433-45e3-8743-cb9439ab8598",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 5
                    }
                ],
                "xs": [],
                "xxs": []
            },
            "2c4e19ad-405b-434d-a7cf-86daf7af9a5d": {
                "lg": [
                    {
                        "h": 9,
                        "i": "a3a95deb-913f-419f-87d2-e6bf1d342ed3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "dae2453a-23e9-4007-abbd-a02c87008669",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 6,
                        "i": "a3a95deb-913f-419f-87d2-e6bf1d342ed3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "dae2453a-23e9-4007-abbd-a02c87008669",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xs": [
                    {
                        "h": 6,
                        "i": "a3a95deb-913f-419f-87d2-e6bf1d342ed3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "dae2453a-23e9-4007-abbd-a02c87008669",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xxs": [
                    {
                        "h": 8,
                        "i": "a3a95deb-913f-419f-87d2-e6bf1d342ed3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "2cb20973-9524-43cc-86ef-dd3c9c1678ae": {
                "lg": [
                    {
                        "h": 21,
                        "i": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 49
                    },
                    {
                        "h": 15,
                        "i": "f7a595bb-97e2-48a8-b1bd-c2f2d18aca25",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 10,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "06695c78-303b-4a0d-b3a1-1370025f3673",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 34,
                        "i": "5df0e0b1-91dd-4bb4-a742-44c0ac57f28e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 15
                    }
                ],
                "md": [
                    {
                        "h": 20,
                        "i": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 23
                    },
                    {
                        "h": 15,
                        "i": "f7a595bb-97e2-48a8-b1bd-c2f2d18aca25",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 8,
                        "y": 0
                    },
                    {
                        "h": 8,
                        "i": "06695c78-303b-4a0d-b3a1-1370025f3673",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 15
                    },
                    {
                        "h": 34,
                        "i": "5df0e0b1-91dd-4bb4-a742-44c0ac57f28e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 43
                    }
                ],
                "sm": [
                    {
                        "h": 20,
                        "i": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "xs": [
                    {
                        "h": 20,
                        "i": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 9
                    }
                ],
                "xxs": [
                    {
                        "h": 21,
                        "i": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 12
                    }
                ]
            },
            "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77": {
                "lg": [
                    {
                        "h": 9,
                        "i": "4bc69db5-70ad-48af-bc04-1e57cbc20dd0",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "7765fb5b-888b-43e3-a2ef-304cb9f49b4d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "ef365374-e3e8-491b-b04a-cc65d622099e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "4bc69db5-70ad-48af-bc04-1e57cbc20dd0",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 21,
                        "i": "7765fb5b-888b-43e3-a2ef-304cb9f49b4d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "4bc69db5-70ad-48af-bc04-1e57cbc20dd0",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 21,
                        "i": "7765fb5b-888b-43e3-a2ef-304cb9f49b4d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "ef365374-e3e8-491b-b04a-cc65d622099e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "4bc69db5-70ad-48af-bc04-1e57cbc20dd0",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 21,
                        "i": "7765fb5b-888b-43e3-a2ef-304cb9f49b4d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "4edd96aa-390c-4655-b192-6bf4adb47bfa": {
                "lg": [
                    {
                        "h": 31,
                        "i": "4539300f-7e2d-4859-951a-475dc58a12b1",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 36,
                        "i": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 33,
                        "i": "be8b3330-a674-4fa5-bf06-735f248c7028",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 25,
                        "i": "4539300f-7e2d-4859-951a-475dc58a12b1",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 28,
                        "i": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 33,
                        "i": "be8b3330-a674-4fa5-bf06-735f248c7028",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 7,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 20,
                        "i": "4539300f-7e2d-4859-951a-475dc58a12b1",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 23,
                        "i": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 13,
                        "i": "4539300f-7e2d-4859-951a-475dc58a12b1",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 23,
                        "i": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 15,
                        "i": "4539300f-7e2d-4859-951a-475dc58a12b1",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 15
                    },
                    {
                        "h": 23,
                        "i": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 18
                    },
                    {
                        "h": 16,
                        "i": "be8b3330-a674-4fa5-bf06-735f248c7028",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 41
                    }
                ]
            },
            "53d33460-9251-45c1-8776-e7859bb1b6f2": {
                "lg": [
                    {
                        "h": 9,
                        "i": "f9914973-f658-449d-9045-4957562fdf5d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "5f18d6f9-69f1-4c2d-b328-3bbaa5fb21a9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "f9914973-f658-449d-9045-4957562fdf5d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 7,
                        "i": "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "f9914973-f658-449d-9045-4957562fdf5d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 24,
                        "i": "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "5f18d6f9-69f1-4c2d-b328-3bbaa5fb21a9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "f9914973-f658-449d-9045-4957562fdf5d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 8,
                        "i": "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "631a5484-2676-4858-8677-521d87366860": {
                "lg": [
                    {
                        "h": 9,
                        "i": "d64494bb-feb8-43fe-a0c8-c3f3bd147a04",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "e9a6f364-5a29-466c-8181-522f9810e187",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "d64494bb-feb8-43fe-a0c8-c3f3bd147a04",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 36,
                        "i": "e9a6f364-5a29-466c-8181-522f9810e187",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "d64494bb-feb8-43fe-a0c8-c3f3bd147a04",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 36,
                        "i": "e9a6f364-5a29-466c-8181-522f9810e187",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "d64494bb-feb8-43fe-a0c8-c3f3bd147a04",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "6540ae2b-4521-4969-93f0-1aa46fda23b7": {
                "lg": [
                    {
                        "h": 9,
                        "i": "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "5a49e657-148b-43a0-ab18-3a9441ad8dd8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 10,
                        "i": "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "5a49e657-148b-43a0-ab18-3a9441ad8dd8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 13
                    }
                ],
                "sm": [
                    {
                        "h": 9,
                        "i": "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 18
                    },
                    {
                        "h": 9,
                        "i": "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "5a49e657-148b-43a0-ab18-3a9441ad8dd8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 9
                    }
                ],
                "xs": [
                    {
                        "h": 39,
                        "i": "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "5a49e657-148b-43a0-ab18-3a9441ad8dd8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": []
            },
            "6ecf5506-8176-46d7-8329-1b33698a5985": {
                "lg": [
                    {
                        "h": 9,
                        "i": "5ff68550-7216-4fac-a46a-56ff07a371be",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "e4858580-7122-492c-bc8b-bfc50ddbf413",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "5ff68550-7216-4fac-a46a-56ff07a371be",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "e4858580-7122-492c-bc8b-bfc50ddbf413",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "5ff68550-7216-4fac-a46a-56ff07a371be",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "e4858580-7122-492c-bc8b-bfc50ddbf413",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "5ff68550-7216-4fac-a46a-56ff07a371be",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "e4858580-7122-492c-bc8b-bfc50ddbf413",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "72fdad00-7d66-4b05-8d76-5caa9d1df5fb": {
                "lg": [
                    {
                        "h": 9,
                        "i": "bc2ddfa3-9279-46c1-a746-928c91303454",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "104f0f81-71fd-401c-a7d0-57a87a64b25c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "bc2ddfa3-9279-46c1-a746-928c91303454",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "104f0f81-71fd-401c-a7d0-57a87a64b25c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "bc2ddfa3-9279-46c1-a746-928c91303454",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 18,
                        "i": "104f0f81-71fd-401c-a7d0-57a87a64b25c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "bc2ddfa3-9279-46c1-a746-928c91303454",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "104f0f81-71fd-401c-a7d0-57a87a64b25c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "78c74ae2-55f8-48b5-96fc-2dc5c825b208": {
                "lg": [
                    {
                        "h": 9,
                        "i": "881fe09f-5c10-4b97-a6ab-d53e6cd816d4",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "8ecaa3be-9cef-4efd-9269-615ba42eb297",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "7ea9a978-563d-4f64-af02-beac9fd6be47",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 10,
                        "i": "881fe09f-5c10-4b97-a6ab-d53e6cd816d4",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "8ecaa3be-9cef-4efd-9269-615ba42eb297",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 10,
                        "i": "881fe09f-5c10-4b97-a6ab-d53e6cd816d4",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "8ecaa3be-9cef-4efd-9269-615ba42eb297",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 23,
                        "i": "881fe09f-5c10-4b97-a6ab-d53e6cd816d4",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "8ecaa3be-9cef-4efd-9269-615ba42eb297",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "7ea9a978-563d-4f64-af02-beac9fd6be47",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": []
            },
            "7fc74fc8-6696-46c4-8bf1-38f93366a0d4": {
                "lg": [
                    {
                        "h": 9,
                        "i": "1122fb24-6656-4909-b9af-c6f476954f91",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "1a194c11-6bad-4582-9d78-faf5762f762d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "1122fb24-6656-4909-b9af-c6f476954f91",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "1a194c11-6bad-4582-9d78-faf5762f762d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "1122fb24-6656-4909-b9af-c6f476954f91",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 22,
                        "i": "1a194c11-6bad-4582-9d78-faf5762f762d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "1122fb24-6656-4909-b9af-c6f476954f91",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "8f542f68-c324-4665-bce3-7f4d26d443ae": {
                "lg": [
                    {
                        "h": 9,
                        "i": "1b54000e-7c4e-473f-8151-f04291ce616c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "1534c238-d6e0-4dcd-bc7d-9bf76cc44ff3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 3,
                        "i": "1b54000e-7c4e-473f-8151-f04291ce616c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "1b54000e-7c4e-473f-8151-f04291ce616c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 10,
                        "i": "1534c238-d6e0-4dcd-bc7d-9bf76cc44ff3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "1b54000e-7c4e-473f-8151-f04291ce616c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 10,
                        "i": "1534c238-d6e0-4dcd-bc7d-9bf76cc44ff3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "8f8afc61-d521-4244-b84e-6de6cd008433": {
                "lg": [
                    {
                        "h": 26,
                        "i": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 33
                    },
                    {
                        "h": 9,
                        "i": "60dadbb4-5fed-4c2d-8ea1-5c5a970f667a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 9,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "10e2c809-9dc9-4d2a-ae0f-67b0ba41970f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 18
                    },
                    {
                        "h": 18,
                        "i": "3631a38f-2ecc-4ae7-9e1e-0ae3cc2ed6ed",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 59
                    },
                    {
                        "h": 9,
                        "i": "c20cec5e-7974-4c1f-ba9f-ce7c3c91bc8d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 9
                    }
                ],
                "md": [
                    {
                        "h": 24,
                        "i": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 5
                    },
                    {
                        "h": 5,
                        "i": "60dadbb4-5fed-4c2d-8ea1-5c5a970f667a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 22,
                        "i": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 14
                    },
                    {
                        "h": 5,
                        "i": "60dadbb4-5fed-4c2d-8ea1-5c5a970f667a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 7,
                        "i": "10e2c809-9dc9-4d2a-ae0f-67b0ba41970f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 5
                    },
                    {
                        "h": 38,
                        "i": "3631a38f-2ecc-4ae7-9e1e-0ae3cc2ed6ed",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 36
                    },
                    {
                        "h": 9,
                        "i": "c20cec5e-7974-4c1f-ba9f-ce7c3c91bc8d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 5
                    }
                ],
                "xs": [
                    {
                        "h": 22,
                        "i": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 5
                    }
                ],
                "xxs": [
                    {
                        "h": 27,
                        "i": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 5
                    }
                ]
            },
            "90c50b68-ea13-44fa-ae03-530a2a02a0d8": {
                "lg": [
                    {
                        "h": 46,
                        "i": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 14
                    },
                    {
                        "h": 3,
                        "i": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 11
                    },
                    {
                        "h": 11,
                        "i": "a4c046fd-8aed-4c92-ad11-be52a547d1f5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 22,
                        "i": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 11
                    },
                    {
                        "h": 3,
                        "i": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 8
                    },
                    {
                        "h": 8,
                        "i": "a4c046fd-8aed-4c92-ad11-be52a547d1f5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 36,
                        "i": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 14
                    },
                    {
                        "h": 4,
                        "i": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 10
                    },
                    {
                        "h": 10,
                        "i": "a4c046fd-8aed-4c92-ad11-be52a547d1f5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 34,
                        "i": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 43
                    },
                    {
                        "h": 4,
                        "i": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 39
                    }
                ],
                "xxs": [
                    {
                        "h": 34,
                        "i": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 43
                    },
                    {
                        "h": 4,
                        "i": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 39
                    }
                ]
            },
            "9e61758a-f253-4e49-b8ee-47fd670c7217": {
                "lg": [
                    {
                        "h": 9,
                        "i": "6da43492-42c8-48cc-8e2d-2a580302b3a5",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "a087a95a-239f-421c-9652-da2540def439": {
                "lg": [
                    {
                        "h": 9,
                        "i": "a48b832d-c522-40fb-a9ce-8e4dbe9627f5",
                        "minH": 3,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "b233d829-acc4-46db-bf8a-adc0582d4f17": {
                "lg": [
                    {
                        "h": 9,
                        "i": "894e25af-e428-44ac-90c5-fd5375478381",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 4,
                        "i": "894e25af-e428-44ac-90c5-fd5375478381",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 4
                    }
                ],
                "xs": [
                    {
                        "h": 6,
                        "i": "894e25af-e428-44ac-90c5-fd5375478381",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xxs": [
                    {
                        "h": 9,
                        "i": "894e25af-e428-44ac-90c5-fd5375478381",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 9
                    }
                ]
            },
            "b3491df0-a905-4d4c-934a-90e455e4332a": {
                "lg": [
                    {
                        "h": 9,
                        "i": "d6b2bc5f-0029-4fff-8fde-e653d92724fe",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 9,
                        "i": "d6b2bc5f-0029-4fff-8fde-e653d92724fe",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "b782f872-9afb-4d2a-ac3e-c0520c5e2b82": {
                "lg": [
                    {
                        "h": 9,
                        "i": "5468ad8d-6e42-45ef-8908-88c93f5a8675",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "bbd39a7c-8506-4d6b-8edf-347f9e956ea9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "92bce78b-084c-474d-9d23-107e77354b4c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 6,
                        "i": "5468ad8d-6e42-45ef-8908-88c93f5a8675",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "bbd39a7c-8506-4d6b-8edf-347f9e956ea9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "92bce78b-084c-474d-9d23-107e77354b4c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 9
                    }
                ],
                "sm": [],
                "xs": [
                    {
                        "h": 21,
                        "i": "5468ad8d-6e42-45ef-8908-88c93f5a8675",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "bbd39a7c-8506-4d6b-8edf-347f9e956ea9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "92bce78b-084c-474d-9d23-107e77354b4c",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 6,
                        "i": "5468ad8d-6e42-45ef-8908-88c93f5a8675",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "bbd39a7c-8506-4d6b-8edf-347f9e956ea9",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "bd2c6ee7-140b-4a67-93c8-f86d05d4708c": {
                "lg": [
                    {
                        "h": 9,
                        "i": "7774ae14-4132-42c7-bbf0-6a4b458a8b55",
                        "minH": 3,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "c4528821-0ff7-4b64-9d6c-c5cba15d57bc": {
                "lg": [
                    {
                        "h": 9,
                        "i": "9dbffd28-8af9-4ab6-9281-cb3a5ec31def",
                        "minH": 3,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "c787eeae-8aa0-4a9a-9c66-1e21dbf445c1": {
                "lg": [
                    {
                        "h": 33,
                        "i": "718385d4-8115-4a74-a4f4-3ab5e0692522",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "a4fa0991-7d51-4756-9b03-395c3db6e16e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 11,
                        "x": 0,
                        "y": 33
                    }
                ],
                "md": [
                    {
                        "h": 36,
                        "i": "718385d4-8115-4a74-a4f4-3ab5e0692522",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 35,
                        "i": "a4fa0991-7d51-4756-9b03-395c3db6e16e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 4,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2": {
                "lg": [
                    {
                        "h": 9,
                        "i": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "1b997315-f65c-44f3-84fe-563b3b8964ca",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 8,
                        "i": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 40,
                        "i": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 4,
                        "i": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 84,
                        "i": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "1b997315-f65c-44f3-84fe-563b3b8964ca",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 8,
                        "i": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "d77a16c7-22b1-40e7-b263-879e5e951ab4": {
                "lg": [
                    {
                        "h": 23,
                        "i": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 24,
                        "i": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 2,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 19,
                        "i": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 24,
                        "i": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 2,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 24,
                        "i": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 24,
                        "i": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 15,
                        "i": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 18,
                        "i": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 15
                    }
                ],
                "xxs": [
                    {
                        "h": 15,
                        "i": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 18,
                        "i": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 15
                    }
                ]
            },
            "d911bf06-7c9d-4028-94d1-fb2e28525a90": {
                "lg": [
                    {
                        "h": 9,
                        "i": "ec39e2ec-2e56-400f-af8d-bf0d854ac3b6",
                        "minH": 3,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "e28b4275-d81d-4b77-a339-6ab6d9de0eec": {
                "lg": [
                    {
                        "h": 9,
                        "i": "1d1e3a21-0d0a-43ed-9832-bbb6d60fd471",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "c068e00e-7b55-419c-8cef-a2675aa36c6f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 9,
                        "i": "ff9fb924-64d5-42d4-a1e9-5dc1e4bfa022",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 18
                    }
                ],
                "md": [
                    {
                        "h": 10,
                        "i": "1d1e3a21-0d0a-43ed-9832-bbb6d60fd471",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "c068e00e-7b55-419c-8cef-a2675aa36c6f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "ff9fb924-64d5-42d4-a1e9-5dc1e4bfa022",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 13
                    }
                ],
                "sm": [],
                "xs": [
                    {
                        "h": 18,
                        "i": "1d1e3a21-0d0a-43ed-9832-bbb6d60fd471",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "c068e00e-7b55-419c-8cef-a2675aa36c6f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "ff9fb924-64d5-42d4-a1e9-5dc1e4bfa022",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 1,
                        "y": 0
                    }
                ],
                "xxs": []
            },
            "ede2bdbc-f4ce-4e66-816a-06057704cb74": {
                "lg": [
                    {
                        "h": 9,
                        "i": "a714b7f2-d634-4f42-bae4-07147a8af507",
                        "minH": 3,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135": {
                "lg": [
                    {
                        "h": 9,
                        "i": "04da157a-6b0c-4a79-bf95-c7b0559f47a1",
                        "minH": 3,
                        "w": 13,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8": {
                "lg": [
                    {
                        "h": 9,
                        "i": "1584b5f0-2008-4eab-b9a8-c521e354a5df",
                        "minH": 3,
                        "w": 13,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "ff8f563a-5de6-4aa3-86a2-710787850d2d": {
                "lg": [
                    {
                        "h": 9,
                        "i": "84322d3a-7a90-4bb9-9eec-3cadff344fbd",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "593e8065-111b-4a01-bf1c-97c5b0ae6182",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": [
                    {
                        "h": 12,
                        "i": "84322d3a-7a90-4bb9-9eec-3cadff344fbd",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "593e8065-111b-4a01-bf1c-97c5b0ae6182",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "fffcbc96-baf7-44bb-9b72-e499e67c92d5": {
                "lg": [
                    {
                        "h": 9,
                        "i": "c1b98710-a903-4fb9-b3c1-3d3265538da3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "cc12d6a5-6892-4017-88ae-60f487dc0724",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [
                    {
                        "h": 4,
                        "i": "c1b98710-a903-4fb9-b3c1-3d3265538da3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "cc12d6a5-6892-4017-88ae-60f487dc0724",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 4
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "c1b98710-a903-4fb9-b3c1-3d3265538da3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "cc12d6a5-6892-4017-88ae-60f487dc0724",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 4
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "c1b98710-a903-4fb9-b3c1-3d3265538da3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "cc12d6a5-6892-4017-88ae-60f487dc0724",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            }
        },
        "paneLayouts": {
            "073da4a9-c03e-44aa-b284-895319a9d55f": {
                "lg": [
                    {
                        "h": 3,
                        "i": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 2,
                        "i": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 2,
                        "i": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 2,
                        "i": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 2,
                        "i": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "0dfa2aa9-4ee9-4c21-8974-49174aec41ec": {
                "lg": [
                    {
                        "h": 5,
                        "i": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 6,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 5,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "0f3bc53b-6a08-4710-89b0-d16f755b3bab": {
                "lg": [
                    {
                        "h": 3,
                        "i": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 8
                    },
                    {
                        "h": 5,
                        "i": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 3
                    }
                ],
                "md": [
                    {
                        "h": 3,
                        "i": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 7
                    },
                    {
                        "h": 4,
                        "i": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 3
                    }
                ],
                "sm": [
                    {
                        "h": 3,
                        "i": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 7
                    },
                    {
                        "h": 4,
                        "i": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 8
                    },
                    {
                        "h": 5,
                        "i": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 10
                    },
                    {
                        "h": 6,
                        "i": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "13456dd9-88d3-4a39-9a70-22a86e2f3a1f": {
                "lg": [
                    {
                        "h": 10,
                        "i": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "d20a6509-b117-43e1-972c-48d1012b0529",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "d20a6509-b117-43e1-972c-48d1012b0529",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "d20a6509-b117-43e1-972c-48d1012b0529",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "d20a6509-b117-43e1-972c-48d1012b0529",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "d20a6509-b117-43e1-972c-48d1012b0529",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "415932b6-9666-49c7-afef-fc0cb6ef79e5": {
                "lg": [
                    {
                        "h": 5,
                        "i": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 5,
                        "i": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 5,
                        "i": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 5,
                        "i": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "603ee5a9-e592-497c-b89c-7cab2c575d6a": {
                "lg": [
                    {
                        "h": 5,
                        "i": "7de470b5-3265-4aef-af52-d50c68276811",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "aee6405f-659b-470e-85ac-a95482009309",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "7de470b5-3265-4aef-af52-d50c68276811",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "aee6405f-659b-470e-85ac-a95482009309",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "7de470b5-3265-4aef-af52-d50c68276811",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "aee6405f-659b-470e-85ac-a95482009309",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "7de470b5-3265-4aef-af52-d50c68276811",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "aee6405f-659b-470e-85ac-a95482009309",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "7de470b5-3265-4aef-af52-d50c68276811",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "aee6405f-659b-470e-85ac-a95482009309",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "7ab2edf4-1be9-43b3-b329-5586579f1970": {
                "lg": [
                    {
                        "h": 5,
                        "i": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "9ae73fdd-968c-4b34-ae25-7bbe02533b8e": {
                "lg": [
                    {
                        "h": 19,
                        "i": "43b78708-61ce-4651-89b3-cd6dace70706",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "6c22669d-7966-4e79-9179-67807b1fe967",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "43b78708-61ce-4651-89b3-cd6dace70706",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "6c22669d-7966-4e79-9179-67807b1fe967",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "43b78708-61ce-4651-89b3-cd6dace70706",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "6c22669d-7966-4e79-9179-67807b1fe967",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "43b78708-61ce-4651-89b3-cd6dace70706",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "6c22669d-7966-4e79-9179-67807b1fe967",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "43b78708-61ce-4651-89b3-cd6dace70706",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "6c22669d-7966-4e79-9179-67807b1fe967",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "Home": {
                "lg": [
                    {
                        "h": 2,
                        "i": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 5
                    },
                    {
                        "h": 2,
                        "i": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 5,
                        "y": 5
                    },
                    {
                        "h": 5,
                        "i": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 10
                    },
                    {
                        "h": 3,
                        "i": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 7
                    },
                    {
                        "h": 2,
                        "i": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 5
                    }
                ],
                "md": [
                    {
                        "h": 2,
                        "i": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 7,
                        "y": 2
                    },
                    {
                        "h": 2,
                        "i": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 3,
                        "y": 2
                    },
                    {
                        "h": 3,
                        "i": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 1,
                        "i": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 10
                    },
                    {
                        "h": 3,
                        "i": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 7
                    },
                    {
                        "h": 2,
                        "i": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 2,
                        "i": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 2
                    },
                    {
                        "h": 1,
                        "i": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 8
                    },
                    {
                        "h": 3,
                        "i": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 5
                    },
                    {
                        "h": 2,
                        "i": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 2,
                        "i": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 2
                    },
                    {
                        "h": 2,
                        "i": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 1,
                        "i": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 13
                    },
                    {
                        "h": 4,
                        "i": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 9
                    },
                    {
                        "h": 2,
                        "i": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 2,
                        "i": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 2,
                        "i": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 6,
                        "i": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 6
                    },
                    {
                        "h": 1,
                        "i": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 14
                    },
                    {
                        "h": 2,
                        "i": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 12
                    },
                    {
                        "h": 2,
                        "i": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 2
                    }
                ]
            },
            "a408b1a9-aff2-4518-8c8c-8969303c5dfa": {
                "lg": [
                    {
                        "h": 4,
                        "i": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 4,
                        "i": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 4,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 4,
                        "i": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 3,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 4,
                        "i": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 4,
                        "i": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 7
                    },
                    {
                        "h": 4,
                        "i": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "a7e16a3e-637d-44dc-abe9-417b4519a7f6": {
                "lg": [
                    {
                        "h": 6,
                        "i": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 6,
                        "i": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 2,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 6
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 2,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 5
                    }
                ],
                "sm": [
                    {
                        "h": 6,
                        "i": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 6,
                        "i": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xs": [
                    {
                        "h": 6,
                        "i": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                        "moved": false,
                        "static": false,
                        "w": 1,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 6,
                        "i": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 1,
                        "y": 0
                    },
                    {
                        "h": 1,
                        "i": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 7,
                        "i": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 1,
                        "i": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 11
                    }
                ]
            },
            "b19afa39-829b-432e-bc08-a555434230c6": {
                "lg": [
                    {
                        "h": 4,
                        "i": "111a5f13-c3ea-430a-95bc-15dd95173881",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 4
                    }
                ],
                "md": [
                    {
                        "h": 2,
                        "i": "111a5f13-c3ea-430a-95bc-15dd95173881",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 2,
                        "i": "111a5f13-c3ea-430a-95bc-15dd95173881",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 2,
                        "i": "111a5f13-c3ea-430a-95bc-15dd95173881",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 2,
                        "i": "111a5f13-c3ea-430a-95bc-15dd95173881",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "be95fb19-aff9-4c9b-b6b1-fc759fcbac68": {
                "lg": [
                    {
                        "h": 4,
                        "i": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "529caad3-d213-4502-8ad9-a85325b3198b",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 6,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "529caad3-d213-4502-8ad9-a85325b3198b",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 5,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "529caad3-d213-4502-8ad9-a85325b3198b",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "529caad3-d213-4502-8ad9-a85325b3198b",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "529caad3-d213-4502-8ad9-a85325b3198b",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "dba1ed9c-2399-4a4b-b03e-4b0f7995998f": {
                "lg": [
                    {
                        "h": 5,
                        "i": "2e0ab862-a236-475b-bf11-e2616c867353",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "1d36c306-1a65-456b-956a-f717f4065f4c",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "2e0ab862-a236-475b-bf11-e2616c867353",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "1d36c306-1a65-456b-956a-f717f4065f4c",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "2e0ab862-a236-475b-bf11-e2616c867353",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "1d36c306-1a65-456b-956a-f717f4065f4c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "2e0ab862-a236-475b-bf11-e2616c867353",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "1d36c306-1a65-456b-956a-f717f4065f4c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "2e0ab862-a236-475b-bf11-e2616c867353",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "1d36c306-1a65-456b-956a-f717f4065f4c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "e27e1a6d-a47d-4d64-a726-0e91c54b5b69": {
                "lg": [
                    {
                        "h": 4,
                        "i": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 8,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 2,
                        "i": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 2,
                        "i": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 2,
                        "i": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 2,
                        "i": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "e6157a84-c260-418c-96c8-eb179a88ef24": {
                "lg": [
                    {
                        "h": 4,
                        "i": "71800a0f-f549-4294-a678-5887ab9506b1",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 7,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "71800a0f-f549-4294-a678-5887ab9506b1",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "71800a0f-f549-4294-a678-5887ab9506b1",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 3,
                        "i": "71800a0f-f549-4294-a678-5887ab9506b1",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "71800a0f-f549-4294-a678-5887ab9506b1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            }
        },
        "panes": {
            "0af7d87f-c649-4022-b0e6-e3b320707ee0": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "0af7d87f-c649-4022-b0e6-e3b320707ee0",
                "pageId": "7ab2edf4-1be9-43b3-b329-5586579f1970",
                "tabInfo": {
                    "activeTab": "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b",
                    "tabIds": [
                        "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b"
                    ],
                    "tabTitles": {
                        "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "10b689ce-bd45-41df-aeea-1b7420c5aa65": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "ALERT HISTORY"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "10b689ce-bd45-41df-aeea-1b7420c5aa65",
                "pageId": "a408b1a9-aff2-4518-8c8c-8969303c5dfa",
                "tabInfo": {
                    "activeTab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                    "tabIds": [
                        "8f8afc61-d521-4244-b84e-6de6cd008433"
                    ],
                    "tabTitles": {
                        "8f8afc61-d521-4244-b84e-6de6cd008433": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "111a5f13-c3ea-430a-95bc-15dd95173881": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "Assets"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "111a5f13-c3ea-430a-95bc-15dd95173881",
                "pageId": "b19afa39-829b-432e-bc08-a555434230c6",
                "tabInfo": {
                    "activeTab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                    "tabIds": [
                        "0a016572-3d0d-4d49-8d24-3980b705bf90"
                    ],
                    "tabTitles": {
                        "0a016572-3d0d-4d49-8d24-3980b705bf90": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "14fbe7a8-a450-401a-b40b-ff4717e4cb77": {
                "customPaneId": "",
                "header": {
                    "hide": true,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "14fbe7a8-a450-401a-b40b-ff4717e4cb77",
                "pageId": "a408b1a9-aff2-4518-8c8c-8969303c5dfa",
                "tabInfo": {
                    "activeTab": "d911bf06-7c9d-4028-94d1-fb2e28525a90",
                    "tabIds": [
                        "d911bf06-7c9d-4028-94d1-fb2e28525a90"
                    ],
                    "tabTitles": {
                        "d911bf06-7c9d-4028-94d1-fb2e28525a90": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "secondary"
            },
            "1d36c306-1a65-456b-956a-f717f4065f4c": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "1d36c306-1a65-456b-956a-f717f4065f4c",
                "pageId": "dba1ed9c-2399-4a4b-b03e-4b0f7995998f",
                "tabInfo": {
                    "activeTab": "0b67126f-3abc-4ae5-8743-d6e532f4174c",
                    "tabIds": [
                        "0b67126f-3abc-4ae5-8743-d6e532f4174c"
                    ],
                    "tabTitles": {
                        "0b67126f-3abc-4ae5-8743-d6e532f4174c": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "2a4eb272-ab87-4e02-b62b-64add65d0212": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "ASSETS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "2a4eb272-ab87-4e02-b62b-64add65d0212",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "4edd96aa-390c-4655-b192-6bf4adb47bfa",
                    "tabIds": [
                        "4edd96aa-390c-4655-b192-6bf4adb47bfa"
                    ],
                    "tabTitles": {
                        "4edd96aa-390c-4655-b192-6bf4adb47bfa": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "2e0ab862-a236-475b-bf11-e2616c867353": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "2e0ab862-a236-475b-bf11-e2616c867353",
                "pageId": "dba1ed9c-2399-4a4b-b03e-4b0f7995998f",
                "tabInfo": {
                    "activeTab": "78c74ae2-55f8-48b5-96fc-2dc5c825b208",
                    "tabIds": [
                        "78c74ae2-55f8-48b5-96fc-2dc5c825b208"
                    ],
                    "tabTitles": {
                        "78c74ae2-55f8-48b5-96fc-2dc5c825b208": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "3a010eb1-9b00-4981-89a4-d837d11d309b": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "LOCATIONS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "3a010eb1-9b00-4981-89a4-d837d11d309b",
                "pageId": "073da4a9-c03e-44aa-b284-895319a9d55f",
                "tabInfo": {
                    "activeTab": "9e61758a-f253-4e49-b8ee-47fd670c7217",
                    "tabIds": [
                        "9e61758a-f253-4e49-b8ee-47fd670c7217"
                    ],
                    "tabTitles": {
                        "9e61758a-f253-4e49-b8ee-47fd670c7217": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "3edb5d1f-7b1c-43f4-92ca-c05417735c45": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "History"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "3edb5d1f-7b1c-43f4-92ca-c05417735c45",
                "pageId": "b19afa39-829b-432e-bc08-a555434230c6",
                "tabInfo": {
                    "activeTab": "2560592c-10df-4175-b26f-c9e3a2b1a89c",
                    "tabIds": [
                        "2560592c-10df-4175-b26f-c9e3a2b1a89c"
                    ],
                    "tabTitles": {
                        "2560592c-10df-4175-b26f-c9e3a2b1a89c": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "433d0bbf-9fd2-489a-b7af-7d4a5059b4c1",
                "pageId": "e27e1a6d-a47d-4d64-a726-0e91c54b5b69",
                "tabInfo": {
                    "activeTab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                    "tabIds": [
                        "28b2df06-0971-47e4-b4e0-86bea5364d50"
                    ],
                    "tabTitles": {
                        "28b2df06-0971-47e4-b4e0-86bea5364d50": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "43b78708-61ce-4651-89b3-cd6dace70706": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "43b78708-61ce-4651-89b3-cd6dace70706",
                "pageId": "9ae73fdd-968c-4b34-ae25-7bbe02533b8e",
                "tabInfo": {
                    "activeTab": "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2",
                    "tabIds": [
                        "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2"
                    ],
                    "tabTitles": {
                        "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "529caad3-d213-4502-8ad9-a85325b3198b": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "529caad3-d213-4502-8ad9-a85325b3198b",
                "pageId": "be95fb19-aff9-4c9b-b6b1-fc759fcbac68",
                "tabInfo": {
                    "activeTab": "6ecf5506-8176-46d7-8329-1b33698a5985",
                    "tabIds": [
                        "6ecf5506-8176-46d7-8329-1b33698a5985"
                    ],
                    "tabTitles": {
                        "6ecf5506-8176-46d7-8329-1b33698a5985": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "5880c72d-2fb4-4b3e-91c4-87bf072025d1": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "Test History"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "5880c72d-2fb4-4b3e-91c4-87bf072025d1",
                "pageId": "0f3bc53b-6a08-4710-89b0-d16f755b3bab",
                "tabInfo": {
                    "activeTab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                    "tabIds": [
                        "264bc588-bf8a-4daa-ba95-5f8b617808c1"
                    ],
                    "tabTitles": {
                        "264bc588-bf8a-4daa-ba95-5f8b617808c1": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "6a74c3b4-261b-40d5-b580-6788265bdc5e": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "CONFIGURED ALERTS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "6a74c3b4-261b-40d5-b580-6788265bdc5e",
                "pageId": "a408b1a9-aff2-4518-8c8c-8969303c5dfa",
                "tabInfo": {
                    "activeTab": "bd2c6ee7-140b-4a67-93c8-f86d05d4708c",
                    "tabIds": [
                        "bd2c6ee7-140b-4a67-93c8-f86d05d4708c"
                    ],
                    "tabTitles": {
                        "bd2c6ee7-140b-4a67-93c8-f86d05d4708c": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "6c22669d-7966-4e79-9179-67807b1fe967": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "6c22669d-7966-4e79-9179-67807b1fe967",
                "pageId": "9ae73fdd-968c-4b34-ae25-7bbe02533b8e",
                "tabInfo": {
                    "activeTab": "fffcbc96-baf7-44bb-9b72-e499e67c92d5",
                    "tabIds": [
                        "fffcbc96-baf7-44bb-9b72-e499e67c92d5"
                    ],
                    "tabTitles": {
                        "fffcbc96-baf7-44bb-9b72-e499e67c92d5": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "6dda6aa4-cc0c-454d-8eed-1d5dc24781d1",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "2331744e-21a8-41af-898e-11d7ef074411",
                    "tabIds": [
                        "2331744e-21a8-41af-898e-11d7ef074411"
                    ],
                    "tabTitles": {
                        "2331744e-21a8-41af-898e-11d7ef074411": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "70533877-8bbd-4b75-9154-bea28cf0ada2": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "70533877-8bbd-4b75-9154-bea28cf0ada2",
                "pageId": "0dfa2aa9-4ee9-4c21-8974-49174aec41ec",
                "tabInfo": {
                    "activeTab": "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77",
                    "tabIds": [
                        "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77"
                    ],
                    "tabTitles": {
                        "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "70a9c8cf-f731-404b-a9b7-30aaea9597f3": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "70a9c8cf-f731-404b-a9b7-30aaea9597f3",
                "pageId": "7ab2edf4-1be9-43b3-b329-5586579f1970",
                "tabInfo": {
                    "activeTab": "631a5484-2676-4858-8677-521d87366860",
                    "tabIds": [
                        "631a5484-2676-4858-8677-521d87366860"
                    ],
                    "tabTitles": {
                        "631a5484-2676-4858-8677-521d87366860": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "71800a0f-f549-4294-a678-5887ab9506b1": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "71800a0f-f549-4294-a678-5887ab9506b1",
                "pageId": "e6157a84-c260-418c-96c8-eb179a88ef24",
                "tabInfo": {
                    "activeTab": "e28b4275-d81d-4b77-a339-6ab6d9de0eec",
                    "tabIds": [
                        "e28b4275-d81d-4b77-a339-6ab6d9de0eec"
                    ],
                    "tabTitles": {
                        "e28b4275-d81d-4b77-a339-6ab6d9de0eec": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "7a3c323d-8373-4d14-86f1-15e4131f8e4d": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "HISTORY"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "7a3c323d-8373-4d14-86f1-15e4131f8e4d",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "d77a16c7-22b1-40e7-b263-879e5e951ab4",
                    "tabIds": [
                        "d77a16c7-22b1-40e7-b263-879e5e951ab4"
                    ],
                    "tabTitles": {
                        "d77a16c7-22b1-40e7-b263-879e5e951ab4": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "7de470b5-3265-4aef-af52-d50c68276811": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "7de470b5-3265-4aef-af52-d50c68276811",
                "pageId": "603ee5a9-e592-497c-b89c-7cab2c575d6a",
                "tabInfo": {
                    "activeTab": "b782f872-9afb-4d2a-ac3e-c0520c5e2b82",
                    "tabIds": [
                        "b782f872-9afb-4d2a-ac3e-c0520c5e2b82"
                    ],
                    "tabTitles": {
                        "b782f872-9afb-4d2a-ac3e-c0520c5e2b82": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0": {
                "customPaneId": "",
                "header": {
                    "hide": true,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": true,
                "id": "7ff5782f-8b5d-4eb8-968c-e8aa04d3daf0",
                "pageId": "a7e16a3e-637d-44dc-abe9-417b4519a7f6",
                "tabInfo": {
                    "activeTab": "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135",
                    "tabIds": [
                        "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135"
                    ],
                    "tabTitles": {
                        "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "secondary"
            },
            "8528e7f1-803c-4e03-8648-ee254becbf0e": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "8528e7f1-803c-4e03-8648-ee254becbf0e",
                "pageId": "e27e1a6d-a47d-4d64-a726-0e91c54b5b69",
                "tabInfo": {
                    "activeTab": "ff8f563a-5de6-4aa3-86a2-710787850d2d",
                    "tabIds": [
                        "ff8f563a-5de6-4aa3-86a2-710787850d2d"
                    ],
                    "tabTitles": {
                        "ff8f563a-5de6-4aa3-86a2-710787850d2d": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94": {
                "customPaneId": "",
                "header": {
                    "hide": true,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": true,
                "id": "a489d81d-1bd9-4864-bd1a-d8c8c2fc5f94",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "082f2116-423a-4045-876e-d3a759f0d0fc",
                    "tabIds": [
                        "082f2116-423a-4045-876e-d3a759f0d0fc"
                    ],
                    "tabTitles": {
                        "082f2116-423a-4045-876e-d3a759f0d0fc": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "aee6405f-659b-470e-85ac-a95482009309": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "aee6405f-659b-470e-85ac-a95482009309",
                "pageId": "603ee5a9-e592-497c-b89c-7cab2c575d6a",
                "tabInfo": {
                    "activeTab": "b233d829-acc4-46db-bf8a-adc0582d4f17",
                    "tabIds": [
                        "b233d829-acc4-46db-bf8a-adc0582d4f17"
                    ],
                    "tabTitles": {
                        "b233d829-acc4-46db-bf8a-adc0582d4f17": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "GATEWAYS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "b2ec2ba7-ef70-4c9d-9d24-e7d73013f471",
                "pageId": "a7e16a3e-637d-44dc-abe9-417b4519a7f6",
                "tabInfo": {
                    "activeTab": "ede2bdbc-f4ce-4e66-816a-06057704cb74",
                    "tabIds": [
                        "ede2bdbc-f4ce-4e66-816a-06057704cb74"
                    ],
                    "tabTitles": {
                        "ede2bdbc-f4ce-4e66-816a-06057704cb74": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "b3989b51-6f78-4159-a4b5-f62493c3379d": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "MESSAGES"
                },
                "hiddenBreakpoints": {},
                "hideBorders": true,
                "id": "b3989b51-6f78-4159-a4b5-f62493c3379d",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "02cce293-bb02-42ff-97d8-d1ef6a49fc7b",
                    "tabIds": [
                        "02cce293-bb02-42ff-97d8-d1ef6a49fc7b"
                    ],
                    "tabTitles": {
                        "02cce293-bb02-42ff-97d8-d1ef6a49fc7b": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "CREATE"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "bdf7d9c7-3a0c-41f2-bbc7-d7045a47f6d3",
                "pageId": "0f3bc53b-6a08-4710-89b0-d16f755b3bab",
                "tabInfo": {
                    "activeTab": "b3491df0-a905-4d4c-934a-90e455e4332a",
                    "tabIds": [
                        "b3491df0-a905-4d4c-934a-90e455e4332a"
                    ],
                    "tabTitles": {
                        "b3491df0-a905-4d4c-934a-90e455e4332a": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "c302823d-176f-4b2b-bbc7-389b0a822a74": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "DETAILS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "c302823d-176f-4b2b-bbc7-389b0a822a74",
                "pageId": "a7e16a3e-637d-44dc-abe9-417b4519a7f6",
                "tabInfo": {
                    "activeTab": "90c50b68-ea13-44fa-ae03-530a2a02a0d8",
                    "tabIds": [
                        "90c50b68-ea13-44fa-ae03-530a2a02a0d8"
                    ],
                    "tabTitles": {
                        "90c50b68-ea13-44fa-ae03-530a2a02a0d8": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "c32777e5-fc98-4f46-aecc-ecc24aed60dc": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "c32777e5-fc98-4f46-aecc-ecc24aed60dc",
                "pageId": "13456dd9-88d3-4a39-9a70-22a86e2f3a1f",
                "tabInfo": {
                    "activeTab": "6540ae2b-4521-4969-93f0-1aa46fda23b7",
                    "tabIds": [
                        "6540ae2b-4521-4969-93f0-1aa46fda23b7"
                    ],
                    "tabTitles": {
                        "6540ae2b-4521-4969-93f0-1aa46fda23b7": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "cbed8c4f-71c1-462d-b8ee-52056341b056": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "ALERTS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "cbed8c4f-71c1-462d-b8ee-52056341b056",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "8f542f68-c324-4665-bce3-7f4d26d443ae",
                    "tabIds": [
                        "8f542f68-c324-4665-bce3-7f4d26d443ae"
                    ],
                    "tabTitles": {
                        "8f542f68-c324-4665-bce3-7f4d26d443ae": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "cd8fe834-6a44-4d05-b36f-cc06d962bc2b": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "cd8fe834-6a44-4d05-b36f-cc06d962bc2b",
                "pageId": "415932b6-9666-49c7-afef-fc0cb6ef79e5",
                "tabInfo": {
                    "activeTab": "2cb20973-9524-43cc-86ef-dd3c9c1678ae",
                    "tabIds": [
                        "2cb20973-9524-43cc-86ef-dd3c9c1678ae"
                    ],
                    "tabTitles": {
                        "2cb20973-9524-43cc-86ef-dd3c9c1678ae": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "cda3afd1-1d4d-4c4c-b975-3da92521d50f": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "cda3afd1-1d4d-4c4c-b975-3da92521d50f",
                "pageId": "0dfa2aa9-4ee9-4c21-8974-49174aec41ec",
                "tabInfo": {
                    "activeTab": "72fdad00-7d66-4b05-8d76-5caa9d1df5fb",
                    "tabIds": [
                        "72fdad00-7d66-4b05-8d76-5caa9d1df5fb"
                    ],
                    "tabTitles": {
                        "72fdad00-7d66-4b05-8d76-5caa9d1df5fb": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "d20a6509-b117-43e1-972c-48d1012b0529": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "d20a6509-b117-43e1-972c-48d1012b0529",
                "pageId": "13456dd9-88d3-4a39-9a70-22a86e2f3a1f",
                "tabInfo": {
                    "activeTab": "2c4e19ad-405b-434d-a7cf-86daf7af9a5d",
                    "tabIds": [
                        "2c4e19ad-405b-434d-a7cf-86daf7af9a5d"
                    ],
                    "tabTitles": {
                        "2c4e19ad-405b-434d-a7cf-86daf7af9a5d": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "d2845f41-a73f-474e-8a5c-6b598e078e98": {
                "customPaneId": "",
                "header": {
                    "hide": true,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "d2845f41-a73f-474e-8a5c-6b598e078e98",
                "pageId": "0f3bc53b-6a08-4710-89b0-d16f755b3bab",
                "tabInfo": {
                    "activeTab": "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8",
                    "tabIds": [
                        "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8"
                    ],
                    "tabTitles": {
                        "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "secondary"
            },
            "d417bb38-b7f3-4e4a-b993-04202b226cfb": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "d417bb38-b7f3-4e4a-b993-04202b226cfb",
                "pageId": "be95fb19-aff9-4c9b-b6b1-fc759fcbac68",
                "tabInfo": {
                    "activeTab": "53d33460-9251-45c1-8776-e7859bb1b6f2",
                    "tabIds": [
                        "53d33460-9251-45c1-8776-e7859bb1b6f2"
                    ],
                    "tabTitles": {
                        "53d33460-9251-45c1-8776-e7859bb1b6f2": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "fc61f12f-a6f4-45b1-97a6-eec1db67855d": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "fc61f12f-a6f4-45b1-97a6-eec1db67855d",
                "pageId": "e6157a84-c260-418c-96c8-eb179a88ef24",
                "tabInfo": {
                    "activeTab": "7fc74fc8-6696-46c4-8bf1-38f93366a0d4",
                    "tabIds": [
                        "7fc74fc8-6696-46c4-8bf1-38f93366a0d4"
                    ],
                    "tabTitles": {
                        "7fc74fc8-6696-46c4-8bf1-38f93366a0d4": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            }
        },
        "savedPortalExists": true,
        "theme": {
            "graph": {
                "four": "#E8E7C6",
                "one": "#6E8592",
                "three": "#DBA5A8",
                "two": "#6E93A8"
            },
            "info": {
                "display_name": "Standard",
                "name": "STANDARD_THEME"
            },
            "items": {
                "main": {
                    "header": {
                        "burgerBars": {
                            "fontColor": "#0d62a5",
                            "visible": true
                        },
                        "dropdown": {
                            "fontColor": "#0d62a5",
                            "fontFamily": "Helvetica",
                            "fontSize": 18
                        },
                        "styles": {
                            "backgroundColor": "#ffffff"
                        }
                    },
                    "panes": {
                        "flyout": {
                            "body": {
                                "backgroundColor": "#ffffff"
                            },
                            "header": {
                                "backgroundColor": "#0d62a5"
                            }
                        },
                        "primary": {
                            "body": {
                                "backgroundColor": "#ffffff"
                            },
                            "header": {
                                "backgroundColor": "#428bca",
                                "fontColor": "#ffffff",
                                "fontFamily": "Lato,sans-serif"
                            },
                            "tabs": {
                                "activeTabUnderlineColor": "#425864",
                                "backgroundColor": "#9db5c2",
                                "fontColor": "#000000"
                            }
                        },
                        "secondary": {
                            "body": {
                                "backgroundColor": "#f5f5f5"
                            },
                            "header": {
                                "backgroundColor": "#9db5c2",
                                "fontColor": "#000000",
                                "fontFamily": "Helvetica"
                            },
                            "tabs": {
                                "activeTabUnderlineColor": "#425864",
                                "backgroundColor": "#6e8592",
                                "fontColor": "#000000"
                            }
                        }
                    },
                    "portal": {
                        "styles": {
                            "backgroundColor": "#ffffff"
                        }
                    },
                    "widgets": {
                        "BAR_CHART_WIDGET_COMPONENT": {
                            "barColors": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ],
                            "brushStroke": "#6e8592",
                            "legendColor": "#000000"
                        },
                        "BUTTON_WIDGET_COMPONENT": {
                            "backgroundColor": "#f5f5f5",
                            "backgroundHoverColor": "#c2c2c2",
                            "borderColor": "#cccccc",
                            "fontColor": "#000000"
                        },
                        "FILTERABLE_LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#0d62a5",
                            "activeItemFontColor": "#ffffff",
                            "bulletColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "FORM_WIDGET_COMPONENT": {
                            "cardBackgroundColor": "#ffffff",
                            "fontColor": "#000000",
                            "sliderColor": "#6E8592",
                            "titleColor": "#000000",
                            "toggleColor": "#6E8592"
                        },
                        "GOOGLE_MAP_WIDGET_COMPONENT": {
                            "mapTheme": ""
                        },
                        "GROUPING_LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#428bca",
                            "activeItemFontColor": "#ffffff",
                            "bulletColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "LINE_CHART_WIDGET_COMPONENT": {
                            "brushStroke": "#6e8592",
                            "legendColor": "#000000",
                            "lineColors": [
                                {
                                    "stroke": "#6E8592"
                                },
                                {
                                    "stroke": "#6E93A8"
                                },
                                {
                                    "stroke": "#DBA5A8"
                                },
                                {
                                    "stroke": "#E8E7C6"
                                }
                            ]
                        },
                        "LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#0d62a5",
                            "activeItemFontColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "PIE_CHART_WIDGET_COMPONENT": {
                            "cells": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ]
                        },
                        "RADIAL_GAUGE_WIDGET_COMPONENT": {
                            "backgroundColor": "#c2c2c2",
                            "progressColor": "#428bca"
                        },
                        "SPEEDOMETER_WIDGET": {
                            "arrowColor": "#000000",
                            "sectionColors": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ]
                        },
                        "TEXT_WIDGET_COMPONENT": {
                            "fontColor": "#000000",
                            "fontFamily": "sans-serif",
                            "fontSize": 18
                        },
                        "TOGGLE_WIDGET": {
                            "backgroundColor": "#c2c2c2",
                            "fontColor": "#000000",
                            "offColor": "#ffffff",
                            "onColor": "#6e8592"
                        }
                    }
                }
            },
            "palette": {
                "darkPrimary": "#c2c2c2",
                "darkSecondary": "#425864",
                "defaultPrimary": "#f5f5f5",
                "defaultSecondary": "#6e8592",
                "lightPrimary": "#ffffff",
                "lightSecondary": "#9db5c2",
                "primaryText": "#000000",
                "secondaryText": "#000000"
            }
        },
        "upgradesPerformed": {
            "flyoutTitleUpgrade": true,
            "headerBrandUpgrade": true,
            "headerTitleUpgrade": true,
            "widgetResizeUpgrade": true
        },
        "widgets": {
            "04da157a-6b0c-4a79-bf95-c7b0559f47a1": {
                "externalScripts": [],
                "id": "04da157a-6b0c-4a79-bf95-c7b0559f47a1",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "fontColor": "#000000",
                    "fontFamily": "sans-serif",
                    "fontSize": 18,
                    "textContent": {
                        "dataType": "STATIC_DATA_TYPE",
                        "value": "Powered by ClearBlade"
                    }
                },
                "tab": "f3ea3ec6-b4f7-41c5-90e0-7601d5b57135",
                "type": "TEXT_WIDGET_COMPONENT"
            },
            "05698076-8fc4-4d0e-9e30-767a403c47cb": {
                "externalScripts": [],
                "id": "05698076-8fc4-4d0e-9e30-767a403c47cb",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\" type=\"button\" class=\"btn btn-info\" \u003e Download CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e customer_id  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e name \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e location_type \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e icon \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e boundaries \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e description \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e lat \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e long \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e address \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e manager_id \u003c/b\u003e\u003c/td\u003e\n         \n   \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"10\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "06695c78-303b-4a0d-b3a1-1370025f3673": {
                "externalScripts": [],
                "id": "06695c78-303b-4a0d-b3a1-1370025f3673",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": "#chart-parameter-container .card-body {\n    padding: .5rem;\n}\n\n#chart-parameter-container .badge select {\n    max-width: 10rem;\n}\n\n#chart-parameter-container .badge {\n    margin-top: .5rem;\n}\n\n#chart-parameter-container .card:not(:first-of-type) {\n    margin-left: .5rem;\n}\n\n#chart-parameter-buttons {\n    margin-top: .5rem;\n}\n\n#chart-parameter-container .remove-param {\n    margin-left: .25rem;\n}\n\n#interactive-chart-error {\n    color: red;\n    font-size: .8rem;\n}",
                            "HTML": "\u003cdiv id=\"chart-parameter-widget\"\u003e\n\t\u003cdiv id=\"chart-parameter-container\" class=\"form-inline\"\u003e\n\n\t\u003c/div\u003e\n\t\u003cdiv id=\"chart-parameter-buttons\"\u003e\n\t\t\u003cbutton onclick=\"addNewParameter()\" class=\"btn btn-light\"\u003e\n    + Add Parameters\n  \u003c/button\u003e\n\t\t\u003ca target=\"_blank\" id=\"export-sensor-history\" class=\"btn btn-light\"\u003e\n\t\t\t\u003ci class=\"fas fa-download\"\u003e\u003c/i\u003e Export\n\t\t\u003c/a\u003e\n\t\t\u003cdiv id=\"interactive-chart-error\"\u003e\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "//JavaScript\nlet locs = [];\nconst containerId = 'chart-parameter-container';\nconst widgetContainer = $(`#${containerId}`);\n// debugger;\nwidgetContainer.empty();\nif (!datasources.getHistoryForSensorsB.lastUpdated) {\n    // send a bogus query to initialize this datasource with an empty array\n    datasources.getHistoryForSensorsB.sendData({\n        \"sensor_ids\": [\n            \"351530\"\n        ],\n        \"startTime\": \"2042-09-20T18:52:58.971Z\",\n        \"endTime\": \"2042-09-21T18:52:58.971Z\"\n    })\n}\nconst handleLocations = (data) =\u003e {\n    // debugger;\n    datasources.getLocations.latestData.unsubscribe(handleLocations);\n    locs = data.results.payload.DATA;\n    addDropdownsToContainer(createParameterDropdowns(0));\n}\n\nconst addDropdownsToContainer = (dropdowns) =\u003e {\n    widgetContainer.append(dropdowns);\n}\n\nconst removeParamDropdown = (index) =\u003e {\n    $(`#${paramDropdownContainerIdPrefix}${index}`).remove();\n}\n\nconst paramDropdownContainerClass = 'parameter-select-container';\nconst paramDropdownContainerIdPrefix = 'parameter-select-container-id-';\nconst locationDropdownClass = 'location-select';\nconst sensorDropdownClass = 'sensor-select';\nconst createParameterDropdowns = (index) =\u003e {\n    const badge = $('\u003cdiv\u003e\u003c/div\u003e');\n    badge.attr('id', `${paramDropdownContainerIdPrefix}${index}`);\n    badge.addClass('badge badge-light badge-pill');\n    const container = $('\u003cdiv\u003e\u003c/div\u003e');\n    badge.append(container);\n    container.addClass('form-group');\n    container.addClass(paramDropdownContainerClass);\n    const locationDropdown = createLocationDropdown(index, locs);\n    const sensorDropdown = createSensorDropdown(index);\n    container.append(locationDropdown);\n    container.append(sensorDropdown)\n    const removeParamElem = $('\u003ci\u003e\u003c/i\u003e')\n    removeParamElem.addClass('fa fa-times-circle c-pointer remove-param');\n    removeParamElem.on('click', () =\u003e {\n        removeParamDropdown(index);\n    })\n    container.append(removeParamElem);\n    return badge;\n}\n\nconst changeSensorOptions = (index, sensors) =\u003e {\n    const sensorDropdown = $(`#${paramDropdownContainerIdPrefix}${index} .${sensorDropdownClass}`);\n    sensorDropdown.empty();\n    sensorDropdown.append(createBlankSensorItem());\n    sensors.forEach((s) =\u003e {\n        sensorDropdown.append(createDropdownItem(s.sensor_id, s.sensor_label));\n    });\n}\n\nconst createBlankSensorItem = () =\u003e {\n    return createDropdownItem('', '-- select sensor --');\n}\n\nconst createSensorDropdown = (index) =\u003e {\n    const sensorDropdown = $('\u003cselect\u003e\u003c/select\u003e');\n    sensorDropdown.addClass('form-control-sm')\n    sensorDropdown.addClass(sensorDropdownClass);\n    sensorDropdown.append(createBlankSensorItem());\n\n    return sensorDropdown;\n}\n\nconst createDropdownItem = (value, label) =\u003e {\n    const item = $('\u003coption\u003e\u003c/option\u003e');\n    item.attr('value', value).text(label);\n    return item;\n}\n\nconst createLocationDropdown = (index, locations) =\u003e {\n    const locationDropdown = $('\u003cselect\u003e\u003c/select\u003e');\n    locationDropdown.addClass('form-control-sm')\n    locationDropdown.addClass(locationDropdownClass);\n\n    locationDropdown.append(createDropdownItem('blank', '-- select location --'))\n    locations.forEach((l) =\u003e {\n        const item = createDropdownItem(l.item_id, l.name);\n        locationDropdown.append(item)\n    })\n\n    locationDropdown.on('change', (e) =\u003e {\n        getSensorsByLocationId(e.target.value).then((sensors) =\u003e {\n            console.log('sensors', sensors);\n            changeSensorOptions(index, sensors);\n        });\n    })\n\n    return locationDropdown;\n}\n\nconst getSensorsByLocationId = (id) =\u003e {\n    return datasources.getSensorsByLocationId.sendData({ location_id: id }).then((data) =\u003e {\n        return data.results.payload.DATA;\n    })\n}\n\nwindow.addNewParameter = () =\u003e {\n    const currentNumOfParams = widgetContainer.find(`.${paramDropdownContainerClass}`).length;\n    addDropdownsToContainer(createParameterDropdowns(currentNumOfParams))\n}\n\nconst createHeadersForCSV = (columns) =\u003e {\n    return columns.map((k) =\u003e `${k},`);\n}\n\nconst generateSensorHistoryCSV = (sensorHistory, allSensors) =\u003e {\n    try {\n        const fields = Object.keys(sensorHistory[sensorHistory.length - 1]).sort((a, b) =\u003e {\n            if (a === 'timestamp') {\n                return -1;\n            }\n            if (b === 'timestamp') {\n                return 1;\n            }\n            return 0;\n        });\n        const replacer = function (key, value) { return value === null ? '' : value }\n        const csv = sensorHistory.map(function (row) {\n            return fields.map(function (fieldName) {\n                return JSON.stringify(row[fieldName], replacer)\n            }).join(',')\n        })\n        csv.unshift(getHeadersWithSensorLabels(fields, allSensors).join(',')) // add header column\n        return csv.join('\\r\\n');\n    } catch (e) {\n        console.error('Unable to create CSV for sensor history', e);\n    }\n}\n\nconst getHeadersWithSensorLabels = (fields, allSensors) =\u003e {\n    try {\n        return fields.map((f) =\u003e {\n            if (f === 'timestamp') {\n                return f;\n            } else {\n                for (let i=0, len=allSensors.length; i \u003c len; i++) {\n                    if (allSensors[i].sensor_id === f) {\n                        return allSensors[i].sensor_label;\n                    }\n                }\n                return f;\n            }\n        })\n    } catch (e) {\n        return fields;\n    }\n    return fields;\n}\n\nconst handleSensorHistory = (resp) =\u003e {\n    const data = resp.results.payload;\n    const exportButton = $('#export-sensor-history');\n    const customer_id = datasources.currentCustomer.latestData().item_id;\n    datasources.getSensorsByCustomerId.sendData({\n        customer_id,\n    }).then((sensorResp) =\u003e {\n        const sensors = sensorResp.results.payload.DATA;\n        const csv = generateSensorHistoryCSV(data, sensors);\n        exportButton.attr('href', `data:text/csv;charset=utf-8,${csv}`)\n    })\n\n}\n\nif (datasources.getHistoryForSensorsB.lastUpdated) {\n    handleSensorHistory(datasources.getHistoryForSensorsB.latestData());\n}\n\nif (!window.hasSubscribedToGetHistoryForSensorsB) {\n    window.hasSubscribedToGetHistoryForSensorsB = true;\n    datasources.getHistoryForSensorsB.latestData.subscribe(handleSensorHistory);\n}\n\nif (datasources.getLocations.lastUpdated) {\n    handleLocations(datasources.getLocations.latestData());\n}\n\nif (!window.hasSubscribedToGetLocationsForChart) {\n    window.hasSubscribedToGetLocationsForChart = true;\n    datasources.getLocations.latestData.subscribe(handleLocations);\n}\n"
                        }
                    }
                },
                "tab": "2cb20973-9524-43cc-86ef-dd3c9c1678ae",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5": {
                "externalScripts": [],
                "id": "0f996753-7811-4ab6-a2ee-3d48f5cc8fe5",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "battery_level": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "29267920-05e8-490f-b792-8d516a4ca215",
                            "label": "Battery  level",
                            "name": "battery_level",
                            "options": {},
                            "orderIdx": 11
                        },
                        "employee_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "ae399d21-65e4-455b-9b50-600ae2a73e39",
                            "label": "Employee",
                            "name": "employee_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 10,
                            "widthPercent": 0
                        },
                        "gateway_description": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "c6da72cb-6071-4a11-899b-17480c09a8d1",
                            "label": "Gateway  description",
                            "name": "gateway_description",
                            "options": {},
                            "orderIdx": 6,
                            "widthPercent": 50
                        },
                        "gateway_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "4ccce775-cc2e-4f07-b58a-db1a9e2add73",
                            "label": "Gateway  ID",
                            "name": "gateway_id",
                            "options": {},
                            "orderIdx": 2,
                            "required": true,
                            "widthPercent": 50
                        },
                        "gateway_label": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "3be26d8c-d2e1-49f9-91fa-0d3ab976d0e4",
                            "label": "Gateway  label",
                            "name": "gateway_label",
                            "options": {},
                            "orderIdx": 5,
                            "widthPercent": 50
                        },
                        "gateway_name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "2984b968-02d1-4be6-8c37-30a681c110b1",
                            "label": "Gateway  name",
                            "name": "gateway_name",
                            "options": {},
                            "orderIdx": 0,
                            "required": true,
                            "widthPercent": 50
                        },
                        "item_id": {
                            "dataType": "uuid",
                            "display": false,
                            "inputType": "copy",
                            "isKeyColumn": true,
                            "isReadOnly": true,
                            "key": "e1a76b77-7efd-4654-a303-f3b78fa33246",
                            "label": "Item  id",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 1
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "476f22a4-792e-4b06-89d5-5caddbda49c6",
                            "label": "Location ",
                            "name": "location_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 8,
                            "widthPercent": 50
                        },
                        "network_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "238fb875-dac7-4798-8808-5938ec41d09b",
                            "label": "Network  ID",
                            "name": "network_id",
                            "options": {},
                            "orderIdx": 3,
                            "widthPercent": 50
                        },
                        "notes": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "textArea",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "13dcd002-0380-4884-8860-7f54cc5028c7",
                            "label": "Notes",
                            "name": "notes",
                            "options": {},
                            "orderIdx": 17
                        },
                        "signal_strength": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "a72dc987-6bf5-43f7-bc73-4886265977a2",
                            "label": "Signal  strength",
                            "name": "signal_strength",
                            "options": {},
                            "orderIdx": 12
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget) {\n    const g = this.widget.data\n    const gateway = {\n        ...this.widget.data,\n        battery_level: typeof g.battery_level === 'string' ? g.battery_level : JSON.stringify(g.battery_level),\n        signal_strength: typeof g.signal_strength === 'string' ? g.signal_strength : JSON.stringify(g.signal_strength),\n        gateway_id: typeof g.gateway_id === 'string' ? g.gateway_id : JSON.stringify(g.gateway_id),\n        network_id: typeof g.network_id === 'string' ? g.network_id : JSON.stringify(g.network_id),\n\n        customer_id: datasources.currentCustomer.latestData().item_id\n    }\n    if (gateway.item_id) { // inEdit\n        datasources.updateGateway.sendData(\n            {\n                gateway_id: this.widget.data.item_id,\n                gateway,\n            }).then(() =\u003e {\n                datasources.getGateways.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentGatewayId.sendData('none')\n            })\n    } else {\n        datasources.createGateway.sendData({ gateway }).then((res) =\u003e {\n            datasources.getGateways.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n            datasources.currentGatewayId.sendData(gateway.gateway_id)\n            datasources.getOrphanGatewayData.sendData()\n        })\n    }\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "gateway-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2e1db52a-ec67-412b-a704-abc0fc865224",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let data = { a: 'a' }\nif (this.datasource.currentGatewayId \u0026\u0026 this.datasource.currentGatewayId !== 'none' \u0026\u0026 this.datasource.getGateways) {\n    data = this.datasource.getGateways.results.payload.DATA.find(d =\u003e d.gateway_id === this.datasource.currentGatewayId)\n    $('#gateway_id').attr('disabled', true)\n    $('#network_id').attr('disabled', true)\n    $('#gateway_name').attr('disabled', true)\n} else {\n    $('#gateway_id').attr('disabled', false)\n    $('#network_id').attr('disabled', false)\n    $('#gateway_name').attr('disabled', false)\n}\n$('#location_id').attr('disabled', false)\n\nif (this.datasource.currentGatewayId === 'orphan') {\n    if (this.datasource.getOrphanGatewayData.results \u0026\u0026 this.datasource.getOrphanGatewayData.results.DATA[0]) {\n        data = this.datasource.getOrphanGatewayData.results.DATA[0]\n        delete data.item_id;\n    }\n}\nconst locationList = datasources.getLocations.latestData()\n    \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.map((d) =\u003e (\n        `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n    )) || []\n$(\"#location_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${locationList.join('')}`)\n\nconst employeeList = datasources.getEmployees.latestData() \u0026\u0026 datasources.getEmployees.latestData().results.payload.map((d) =\u003e (\n    `\u003coption value=${d.email}\u003e${d.first_name} ${d.last_name}\u003c/option\u003e`\n)) || []\n$(\"#employee_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${employeeList.join('')}`)\n\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "b233d829-acc4-46db-bf8a-adc0582d4f17",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "104f0f81-71fd-401c-a7d0-57a87a64b25c": {
                "externalScripts": [],
                "id": "104f0f81-71fd-401c-a7d0-57a87a64b25c",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "attributes": {
                            "dataType": "string",
                            "display": true,
                            "key": "eb426885-5eea-43cb-ac4f-1c79c0ed4a0e",
                            "label": "Units",
                            "name": "attributes",
                            "options": {},
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "data_type": {
                            "dataType": "string",
                            "defaultValue": "int",
                            "display": true,
                            "inputType": "option",
                            "key": "1f4b468b-01b8-4606-a5af-12e8acc2cccd",
                            "label": "DataType",
                            "name": "data_type",
                            "options": {
                                "dropdownOptions": [
                                    "int",
                                    "bool"
                                ]
                            },
                            "orderIdx": 4,
                            "required": true,
                            "widthPercent": 50
                        },
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "key": "d6feeb41-a792-464e-9c1c-b697270863f5",
                            "label": "Description",
                            "name": "description",
                            "options": {},
                            "orderIdx": 3,
                            "widthPercent": 50
                        },
                        "is_probe": {
                            "dataType": "bool",
                            "display": true,
                            "inputType": "boolean",
                            "key": "f3db672e-bcb2-4252-b8a2-704bbf6e88ba",
                            "label": "Probe?",
                            "name": "is_probe",
                            "options": {},
                            "orderIdx": 6
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "5542b2f5-7193-41e2-8d5e-60b2b06cc9fc",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 5
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "key": "95ca7dc8-a28d-4bfb-8c85-411532b320c4",
                            "label": "Name",
                            "name": "name",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if(!this.widget) return\n\nif (this.widget.data.item_id) {\n    return datasources.updateSensorType.sendData({ \n        sensor_type_id: this.widget.data.item_id, \n        sensor_type: this.widget.data }\n    ).then(function (res) {\n        if (res.success) {\n            datasources.getSensorTypes.sendData()\n        } \n        return res\n    })\n} else {\n    return datasources.createSensorType.sendData({ sensor_type: this.widget.data }).then(function (res) {\n        if (res.success) {\n            datasources.getSensorTypes.sendData()\n            datasources.currentSensorTypeId.sendData(res.item_id)\n        }\n        return res\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "my-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const sensor = this.datasource.getSensorTypes \u0026\u0026\n    this.datasource.getSensorTypes.results.payload.DATA.find(s =\u003e s.item_id == this.datasource.currentSensorTypeId) \n\nreturn {\n    data: sensor || {\"a\": \"a\"}\n}"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "72fdad00-7d66-4b05-8d76-5caa9d1df5fb",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "10e2c809-9dc9-4d2a-ae0f-67b0ba41970f": {
                "externalScripts": [],
                "id": "10e2c809-9dc9-4d2a-ae0f-67b0ba41970f",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "compactForm": false,
                    "displayColumn": "name",
                    "editColumns": {
                        "from_date": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "9cc73c03-f18e-4ef3-bde2-debf4171f29a",
                            "label": "from",
                            "name": "from_date",
                            "orderIdx": 1,
                            "widthPercent": 45
                        },
                        "to_date": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "033cb9ce-4e8b-470d-9f81-5dba524a93e2",
                            "label": "to",
                            "name": "to_date",
                            "orderIdx": 2,
                            "widthPercent": 45
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\nvar date = new Date(this.widget.data.from_date);\nvar from_date = Math.floor(date.getTime() / 1000); \nvar todate = new Date(this.widget.data.to_date);\nvar to_date = Math.floor(todate.getTime() / 1000); \n    console.log(\"from and to \"+from_date +\"  \"+to_date);\nif (datasources.currentAlertConfigId.lastUpdated \u0026\u0026 datasources.currentAlertConfigId.latestData().length \u003e 0 ){\n   var respo = datasources.currentAlertConfigId.latestData();\n   var the_object = {};\n the_object.configuration_id = respo; \n the_object.fromTS = from_date;\n the_object.toTS = to_date; \n datasources.getAlertHistory.sendData(the_object);\n   console.log(\"alert with config id \" +JSON.stringify(respo));\n\n\n}else{\n  console.log(\"doesnt have config id\");\n  datasources.getAlertHistory.sendData({\n            fromTS: from_date,\n            toTS: to_date\n    });\n}\n return {}\n\n\n"
                    },
                    "fontColor": "#000000",
                    "htmlId": "alerts-time-filter",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {\n    last_name: 'Miller',\n  }\n};\n\nreturn formSourceObj\n\n// // EXAMPLE of advanced features\n// const stateToCity = {\n//   Texas: ['Austin', 'Dallas', 'El Paso'],\n//   California: ['San Francisco', 'Los Angeles']\n// }\n\n// /**\n//  * @type {FormSourceObj}\n//  */\n// var formSourceObj = {\n//   // the initial data the form has when loaded\n//   data: { state: \"Texas\" },\n\n//   // gets called every time something in the form changes\n//   onUpdate: function (arg) {\n//     if (arg.currentValues.state) {\n//       var cityOptions = stateToCity[arg.currentValues.state]\n//       arg.fieldSettings.city.dropdownOptions = cityOptions\n//     }\n//     return arg\n//   },\n\n//   // an object the same shape as fieldSettings, that is merged with the settings from the UI\n//   // useful for adding dynamic things like dropdown options from a collection\n//   overrideFieldSettings: {\n//     state: {\n//       name: 'state', dataType: 'string', display: true, orderIdx: 5, key: '3f4eeddd-3917-4099-9e3d-68d7e878568d', options: { dropdownOptions: ['Texas', 'California'] }, inputType: 'BUTTON_GROUP', dropdownOptions: ['Texas', 'California'],\n//     },\n//     city: {\n//       name: 'city', dataType: 'string', display: true, orderIdx: 6, key: 'cfd6c6e6-85c4-45e3-b62f-df232434fa2c', options: {}, inputType: 'BUTTON_GROUP', dropdownOptions: ['Austin', 'Dallas', 'El Paso'],\n//     },\n//   }\n// };\n// return formSourceObj\n"
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "1122fb24-6656-4909-b9af-c6f476954f91": {
                "externalScripts": [],
                "id": "1122fb24-6656-4909-b9af-c6f476954f91",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "09001cfc-4c8a-46f1-b8c9-c71d4b988a09",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"asset-list-title\"\u003eCreate Asset\u003c/h2\u003e",
                                "JavaScript": "$(\"#asset-list-title\").html(\n    (this.datasource \u0026\u0026 this.datasource !== 'none') ? `\nUpdate Asset \n\u003cbutton id=\"switch-to-add-asset\" class=\"btn btn-link\"\u003eAdd Asset\u003c/button\u003e\n` : 'Add Asset')\n\n$('#switch-to-add-asset').click(function() {\n    datasources.currentAssetId.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "7fc74fc8-6696-46c4-8bf1-38f93366a0d4",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1534c238-d6e0-4dcd-bc7d-9bf76cc44ff3": {
                "externalScripts": [],
                "id": "1534c238-d6e0-4dcd-bc7d-9bf76cc44ff3",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "da2c7c6c-d63f-472a-928f-5641d881998f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".warning{\n    color: #dc3545;\n    padding-right: .25em;\n}\n\n.alert-action-btn{\n    margin:2px;\n}\n\n.alert-item {\n    font-size: .75rem;\n}\n\n.alert-item .message {\n    font-size: 1rem;\n}\n\n.alert-buttons {\n    float: right;\n    width: 120px;\n    text-align: right;\n}\n\n.alert-buttons button {\n    /* display: block; */\n    text-align: right;\n}",
                                "HTML": "\u003cdiv id=\"alerts\"\u003e\n\t\u003cdiv class=\"list-group\"\u003e\n\n\t\u003c/div\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\n\nconst getAlertConfig = (typeId) =\u003e {\n    let alertConfig;\n    if (datasources.getAlertConfigurations.latestData()) {\n        alertConfig = datasources.getAlertConfigurations.latestData().results.payload.DATA.find(\n            (data) =\u003e data.item_id === typeId\n        )\n    }\n    return alertConfig || {}\n}\n\nconst listGroup = $('#alerts .list-group');\nconst handleAlerts = (data) =\u003e {\n    const alerts = data.results.payload.DATA.filter((alert) =\u003e {\n        if (!alert.snoozed_date) return true\n        return +new Date() \u003e +new Date(alert.snoozed_date)\n    })\n    listGroup.empty();\n\n    if (alerts.length === 0) {\n        listGroup.append('No active alerts')\n    } else {\n        alerts.forEach((a) =\u003e {\n            const item = $('\u003cbutton class=\"alert-item list-group-item list-group-item-action\"\u003e\u003c/button\u003e')\n            const itemDesc = $('\u003cspan\u003e\u003c/span\u003e');\n            const alertType = getAlertConfig(a.configuration_id)\n            itemDesc.html(`\n            \u003cdiv class=\"message\"\u003e\n                \u003cspan\u003e\u003ci class=\"warning fa fa-exclamation-triangle\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/span\u003e\n                ${alertType.message || ''}\u003c/div\u003e\n            \u003cdiv class=\"text-muted\"\u003e${AlertConfigSummary(alertType) || ''}\u003c/div\u003e\n            `)\n            const itemTime = $('\u003cspan\u003e\u003c/span\u003e');\n            itemTime.css({\n                'font-size': '.75rem'\n            })\n            let time = a.sent_date;\n            try {\n                time = new Date(time).toLocaleString()\n            } catch (e) {\n                console.warn('Unable to parse time', e);\n            }\n            const itemButtons = `\u003cdiv class=\"alert-buttons\"\u003e\n            \u003cbutton class=\"btn btn-outline-warning btn-sm alert-action-btn snooze-alert d-float\" data-snoozed-count=${a.snoozed_count} data-item-id=${a.item_id}\u003eSnooze\u003c/button\u003e\n            \u003cbutton class=\"alert-action-btn btn btn-outline-success btn-sm acknowledge-alert\" data-item-id=${a.item_id}\u003eAcknowledge\u003c/button\u003e\n        \u003c/div\u003e`\n            item.append(itemButtons);\n        \n            item.append(itemDesc);\n            item.append(`\u003cdiv\u003e${time}\u003c/div\u003e`);\n            listGroup.append(item);\n        })\n    }\n}\n\nif (!window.hasSubscribedToAlerts) {\n    window.hasSubscribedToAlerts = true;\n    datasources.getAlerts.latestData.subscribe(handleAlerts);\n\n}\n\nif (datasources.getAlerts.lastUpdated) {\n    handleAlerts(datasources.getAlerts.latestData());\n}\n\nif (!window.setupAlertListeners) {\n    window.setupAlertListeners = true;\n    $('body').on('click', '.acknowledge-alert', (e) =\u003e {\n        datasources.updateAlert.sendData({\n            item_id: e.target.dataset.itemId,\n            alert: {\n                is_active: false,\n                acknowledge_date: (new Date()).toISOString()\n            }\n        }).then(() =\u003e {\n            datasources.getAlerts.sendData();\n        })\n    })\n\n    $('body').on('click', '.snooze-alert', (e) =\u003e {\n        datasources.updateAlert.sendData({\n            item_id: e.target.dataset.itemId,\n            alert: {\n                snoozed_count: Number(e.target.dataset.snoozedCount) + 1,\n                // 30 min from now\n                snoozed_date: (new Date(Date.now() + 1000 * 30 * 60)).toISOString()\n            }\n        }).then(() =\u003e {\n            datasources.getAlerts.sendData();\n        })\n    })\n}\n\nfunction AlertConfigSummary(alertConfig) {\n    if (!datasources.getSensors.latestData() || !datasources.getSensorTypes.latestData()) return ''\n    const rules = tryParse(alertConfig.rules)\n    let text = rules \u0026\u0026 rules.map((rule) =\u003e RuleSummary(rule)).join(' and ')\n    if(alertConfig.timeout) {\n        text = text + ` for ${alertConfig.timeout} minutes`\n    }\n    return text\n}\n\nfunction RuleSummary(rule = {}) {\n    const sensor = datasources.getSensors.latestData().results.payload.DATA.find((s) =\u003e s.sensor_id === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.payload.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n\n    const propertyStr = rule.property === 'battery_level' ? 'Battery' : sensorType.display_name\n    const wordsFromOp = {\n        'GT': 'is above',\n        'LT': 'is below',\n        'EQ': 'is equal',\n    }\n    const operatorStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? wordsFromOp[rule.operator] : ''\n    const valueStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? rule.value : (rule.value ? 'is open' : 'is closed')\n    const attributeStr = rule.property === 'battery_level' ? 'percent' : sensorType.attributes\n    return `\"${sensor.sensor_label}\" ${propertyStr \u0026\u0026 propertyStr.toLowerCase()} ${operatorStr} ${valueStr} ${attributeStr \u0026\u0026 attributeStr.toLowerCase()}`\n}\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        console.warn(e, str)\n    }\n}"
                            }
                        }
                    }
                },
                "tab": "8f542f68-c324-4665-bce3-7f4d26d443ae",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1584b5f0-2008-4eab-b9a8-c521e354a5df": {
                "externalScripts": [],
                "id": "1584b5f0-2008-4eab-b9a8-c521e354a5df",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "fontColor": "#000000",
                    "fontFamily": "sans-serif",
                    "fontSize": 18,
                    "textContent": {
                        "dataType": "STATIC_DATA_TYPE",
                        "value": "Powered by ClearBlade"
                    }
                },
                "tab": "f9e155f6-1fa4-4f0e-acdb-d415ad91a8e8",
                "type": "TEXT_WIDGET_COMPONENT"
            },
            "1a194c11-6bad-4582-9d78-faf5762f762d": {
                "externalScripts": [],
                "id": "1a194c11-6bad-4582-9d78-faf5762f762d",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "na",
                    "editColumns": {
                        "asset_type_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "e09c8188-3bfc-4159-a5e4-b0b4d06f2025",
                            "label": "Asset  type",
                            "name": "asset_type_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 3,
                            "required": true,
                            "widthPercent": 50
                        },
                        "comments": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "textArea",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "e1b8e460-480b-49ce-9fc7-4c51a8addac9",
                            "label": "Comments",
                            "name": "comments",
                            "options": {},
                            "orderIdx": 7
                        },
                        "item_id": {
                            "dataType": "uuid",
                            "display": false,
                            "inputType": "copy",
                            "isKeyColumn": true,
                            "isReadOnly": true,
                            "key": "9e52c300-4926-4d9f-b9b0-f745712a2d19",
                            "label": "Item  id",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 0
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "558432f2-4562-407b-b83c-32a266a1df00",
                            "label": "Location ",
                            "name": "location_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "b5cc43e0-b3b5-40e6-9f33-36a432226d5e",
                            "label": "Name",
                            "name": "name",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        },
                        "primary_employee": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "c733e1b4-45e6-414c-893a-7428746f3f36",
                            "label": "Primary  employee",
                            "name": "primary_employee",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 6,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget) {\n    if (this.widget.data.item_id) { // inEdit\n        datasources.updateAsset.sendData(\n            {\n                asset_id: this.widget.data.item_id,\n                asset: {\n                    ...this.widget.data,\n                    customer_id: datasources.currentCustomer.latestData().item_id\n                }\n            }).then(() =\u003e {\n                // $('.field .input-section input').each((i, el) =\u003e console.log($(el).val('')))\n                datasources.getAssets.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentAsset.sendData('none')\n            })\n    } else {\n        datasources.createAsset.sendData(\n            {\n                asset: {\n                    ...this.widget.data,\n                    customer_id: datasources.currentCustomer.latestData().item_id\n                }\n            }\n        ).then((res) =\u003e {\n            // $('.field .input-section input').each((i, el) =\u003e console.log($(el).val('')))\n            datasources.getAssets.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n            datasources.currentAssetId.sendData(res.results.payload[0])\n        })\n    }\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "location-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "354e2ba9-5aa6-4dd8-86c3-2276e9c4186b",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\nlet data = { a: \"A\" }\nif(this.datasource.currentAssetId === 'empty') {\n    return { data: { name: '', description: ''}}\n}\nif(this.datasource.currentAssetId \u0026\u0026 this.datasource.currentAssetId !== 'none' \u0026\u0026 this.datasource.getAssets) {\n    data = this.datasource.getAssets.results.payload.DATA.find(l =\u003e l.item_id === this.datasource.currentAssetId)\n}\n\n\nconst locationList = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#location_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${locationList.join('')}`)\n\nconst assetTypeList = datasources.getAssetTypes.latestData() \u0026\u0026 datasources.getAssetTypes.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#asset_type_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${assetTypeList.join('')}`)\n\nconst employeeList = datasources.getEmployees.latestData() \u0026\u0026 datasources.getEmployees.latestData().results.payload.map((d) =\u003e (\n    `\u003coption value=${d.email}\u003e${d.first_name} ${d.last_name}\u003c/option\u003e`\n)) || []\n$(\"#primary_employee\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${employeeList.join('')}`)\n\n\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "7fc74fc8-6696-46c4-8bf1-38f93366a0d4",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "1b54000e-7c4e-473f-8151-f04291ce616c": {
                "externalScripts": [],
                "id": "1b54000e-7c4e-473f-8151-f04291ce616c",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n",
                            "HTML": "\u003cbutton id=\"home_edit_alerts_button\" class=\"btn btn-secondary btn-block\"\u003eConfigure Alerts\u003c/button\u003e\n",
                            "JavaScript": "//JavaScript\n$(\"#home_edit_alerts_button\").click(function(){\n    CB_PORTAL.selectPage(\"/AlertConfig\")\n})"
                        }
                    }
                },
                "tab": "8f542f68-c324-4665-bce3-7f4d26d443ae",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1b997315-f65c-44f3-84fe-563b3b8964ca": {
                "externalScripts": [],
                "id": "1b997315-f65c-44f3-84fe-563b3b8964ca",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\" type=\"button\" class=\"btn btn-info\"\u003eDownload CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e email  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e password \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e assets \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e customer_id \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e first_name \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e last_name \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e locations \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e phone_number \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e photo \u003c/b\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"9\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1d1e3a21-0d0a-43ed-9832-bbb6d60fd471": {
                "externalScripts": [],
                "id": "1d1e3a21-0d0a-43ed-9832-bbb6d60fd471",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "354e2ba9-5aa6-4dd8-86c3-2276e9c4186b",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "#table table-striped thead{\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n}\r\n#asset-list{\r\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; \r\n}",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eAssets\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eType\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eLocation\u003c/th\u003e\n      \u003cth scope=\"col\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"asset-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getAssets) return\nconst listItems = this.datasource.getAssets.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    if(data.asset_type_id != \"\"){\nconst asset = datasources.getAssetTypes.latestData() \u0026\u0026 datasources.getAssetTypes.latestData().results.payload.DATA.find(d =\u003e d.item_id == data.asset_type_id)\n    const location = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.find(d =\u003e d.item_id == data.location_id)\n    const selected = this.datasource.currentAssetId === data.item_id\n     console.log(asset);\n    console.log(asset.name, selected)\n    return `\n    \u003ctr class=\"asset-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e${asset.name}\u003c/td\u003e\n      \u003ctd\u003e\n      ${data.name}\n      \u003cdiv class=\"text-muted\"\u003e${data.comments}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e${location ? `\u003cbutton class=\"btn p-0 btn-link location-link\" data-item-id=${location.item_id}\u003e${location.name}\u003c/button\u003e` : ''}      \n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-asset\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n    }\n  }).join('')\n\n$(\"#asset-list\").html(listItems)\n\nif (!window.hasSetupAssetListListeners) {\n  window.hasSetupAssetListListeners = true\n  $(\"#asset-list\").html(listItems)\n  $(\"body\").on('click', '.delete-asset', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this asset?')) {\n      datasources.deleteAsset.sendData({ asset_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getAssets.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.asset-item', ({ currentTarget }) =\u003e {\n    datasources.currentAssetId.sendData(currentTarget.dataset.itemId)\n  })\n\n  $(\"body\").on('click', '.location-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/locations`)\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "e28b4275-d81d-4b77-a339-6ab6d9de0eec",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1ea1c3b7-d734-461c-bebb-0e9b2dd81289": {
                "externalScripts": [],
                "id": "1ea1c3b7-d734-461c-bebb-0e9b2dd81289",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "6da489e2-067c-4bbb-8482-00cecb5f7020",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".underline {\n  text-decoration: underline;\n}\n",
                                "HTML": "\u003cdiv id=\"getpsrttest\"\u003e\u003c/div\u003e\n\u003cdiv id=\"know_agrepart2\"\u003e\u003c/div\u003e\n\u003cdiv id=\"gettestpart\"\u003e\u003c/div\u003e\n\u003cdiv id=\"getfoodtesttype\"\u003e\u003c/div\u003e\n\u003cdiv id=\"know_theagrregator\"\u003e\u003c/div\u003e\n",
                                "JavaScript": "if(this.datasource){\n    console.log(\"this is entire  datasource \"+JSON.stringify(this.datasource));\n\nvar fromtodateslocvar = this.datasource.FromToDates;\n if(this.datasource.FromToDates){\n     var thetestpart = this.datasource.getTests.results.payload.DATA;\n     var startDatebef = fromtodateslocvar.fromTS;\n            var endDatebef = fromtodateslocvar.toTS;\n            // $(\"#know_theagrregator\").html(\"\u003cb\u003estring or ? \u003c/b\u003e\"+startDatebef +\"  \"+endDatebef);\n            var startDate = (Unix_timestamp(startDatebef));\n            var endDate = (Unix_timestamp(endDatebef));\n            //  var startDate = \"1540209600\"\n            //   var endDate  = \"1540296000\"\n//  $(\"#gettestpart\").html(\" \u003cb\u003e afterwards \u003c/b\u003e\"+startDate+\"  \"+endDate);\n     var resultProductData = thetestpart.filter(\n                    function (a)\n                    {\n                        return (a.start_date) \u003e startDate \u0026\u0026 (a.end_date) \u003c endDate;\n                    });\n            console.log(resultProductData);\n            $(\"#know_agrepart2\").html(\" \");\n// $(\"#know_agrepart2\").html(\"\u003cb\u003eshow up \u003c/b\u003e\"+JSON.stringify(resultProductData));\ndatasources.cruidgridlocvar.sendData(resultProductData);\nfunction Unix_timestamp(t)\n{\nvar dt = new Date(t*1000);\nvar hr = dt.getFullYear();\nvar m = dt.getMonth()+1;\nvar s = dt.getDate();\nreturn hr+ '-' + m + '-' + s;  \n}\n// $(\"#getpsrttest\").html(\"\u003cb\u003e dates are \u003c/b\u003e\" +JSON.stringify(fromtodateslocvar));\n returningobjt = {};\n returningobjt.data = resultProductData;\n }else{\n     console.log(\"no data in from to dates\"+JSON.stringify(this.datasource.FromToDates));\n      $(\"#know_agrepart2\").html(\"Please select FROM and TO dates\");\n }\n       \n}else{\n    console.log(\"no datasource\");\n   \n}\n\n"
                            }
                        }
                    }
                },
                "tab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "2419797c-06fe-496c-8d94-fbb11e232c7e": {
                "externalScripts": [],
                "id": "2419797c-06fe-496c-8d94-fbb11e232c7e",
                "props": {
                    "addItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "allowAdd": false,
                    "allowDelete": false,
                    "allowExport": true,
                    "allowHighlight": false,
                    "allowSearch": true,
                    "allowUpdate": false,
                    "deleteItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "editCells": {
                        "compliant": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "c3125a09-a5bd-461e-a7c8-88014e1a9e47",
                            "label": "Result",
                            "name": "compliant",
                            "orderIdx": 2
                        },
                        "customer": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "a3fb674f-3ead-4491-96c4-57b8f7661fc4",
                            "label": "Customer",
                            "name": "customer",
                            "orderIdx": 1
                        },
                        "end_date": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "97e3eb08-42eb-4d3c-ba34-205f875d7187",
                            "label": "End",
                            "name": "end_date",
                            "orderIdx": 6
                        },
                        "location": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "a8fd6506-1eb8-43fb-9f10-055709e30026",
                            "label": "Location",
                            "name": "location",
                            "orderIdx": 4
                        },
                        "sensor": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "10ff1780-b998-430c-84e6-50b2a095cdef",
                            "label": "Sensor",
                            "name": "sensor",
                            "orderIdx": 9
                        },
                        "sensor_payload": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "c2bb0f50-1bd0-4b79-9065-d29c19446a85",
                            "label": "Temperature",
                            "name": "sensor_payload",
                            "orderIdx": 8
                        },
                        "start_date": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "41d76b62-31e8-458a-8c8d-d0f83e7feb24",
                            "label": "Start",
                            "name": "start_date",
                            "orderIdx": 5
                        },
                        "test_type": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "49b56343-10ad-431e-b569-3462570d91b8",
                            "label": "Type",
                            "name": "test_type",
                            "orderIdx": 7
                        },
                        "tester_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "2b84b0fe-60e0-4856-89e2-d5e7f7690d98",
                            "label": "Tester",
                            "name": "tester_id",
                            "orderIdx": 3
                        }
                    },
                    "enableSorting": false,
                    "evenStripeColor": "#F7F7F7",
                    "fetchGridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "gridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const rtn = {\n  keyColumn: \"item_id\",\n  data: [],\n  count: 0,\n};\nconsole.log(\"Emp list:\"+datasources.getEmployeeName.latestData())\nif (this.datasource.getLocations \u0026\u0026 this.datasource.getCustomers \u0026\u0026 this.datasource.getTests \u0026\u0026 this.datasource.getFoodTestTypes \u0026\u0026 this.datasource.getSensors) {\n    // console.log('asdf', this.datasource.getTests.results)\n    rtn.data = this.datasource.getTests.results.payload.DATA.map((t) =\u003e ({\n        ...t,\n        customer: getCustomerById.call(this, t.customer_id),\n        location: getLocationById.call(this, t.location_id),\n        compliant:t.compliant? \"PASS\":\"FAIL\",\n        test_type: getTestTypeById.call(this, t.type_id),\n        sensor: getSensorById.call(this, t.sensor_id),\n        tester_id : getNameByEmail.call(this,t.tester_id),\n        start_date: (new Date(t.start_date)).toLocaleString().replace(\",\",\"\"),\n        end_date: (new Date(t.end_date)).toLocaleString().replace(\",\",\"\")\n      }))\n    rtn.count = this.datasource.getTests.results.payload.TOTAL;\n}\n//alert($(\"#foodTestData .ReactTable .rt-table .rt-body .crud-row .rt-tr .rt-td:nth-child(2) .input-section span\").text());\n// console.log(\"this is rtn value\"+JSON.stringify(rtn));\nreturn rtn;\n\nfunction getLocationById(id) {\n    try {\n        const locs = this.datasource.getLocations.results.payload.DATA;\n        for (let i=0, len = locs.length; i \u003c len; i++) {\n            if(locs[i].item_id === id) {\n                return locs[i].name;\n            }\n        }\n    } catch(e) {}\n    return id;\n}\n\nfunction getcolorforresult(resul){\n    try{\n        console.log(\"this is resul\"+ JSON.stringify(resul));\n        if(resul){\nconsole.log(\"the result is\"+ JSON.stringify(resul));\n        }else{\nconsole.log(\"the result is \"+ JSON.stringify(resul));\n        }\n    }catch(e) {\n        console.log(\"this is exeception\"+e);\n    }\n\n}\n\nfunction getCustomerById(id) {\n    try {\n        const customers = this.datasource.getCustomers.results.payload.DATA;\n        for (let i=0, len = customers.length; i \u003c len; i++) {\n            if(customers[i].item_id === id) {\n                return customers[i].name;\n            }\n        }\n    } catch(e) {}\n    return id;\n}\n\nfunction getTestTypeById(id) {\n    try {\n        const testTypes = this.datasource.getFoodTestTypes.results.payload.DATA;\n        for (let i=0, len = testTypes.length; i \u003c len; i++) {\n            if(testTypes[i].item_id === id) {\n                return testTypes[i].name;\n            }\n        }\n    } catch(e) {}\n    return id;\n}\n\nfunction getSensorById(id) {\n    try {\n        const sensors = this.datasource.getSensors.results.payload.DATA;\n        for (let i=0, len = sensors.length; i \u003c len; i++) {\n            if(sensors[i].item_id === id) {\n                return sensors[i].sensor_label;\n            }\n        }\n    } catch(e) {}\n    return id;\n}\n\nfunction getNameByEmail(email){\n   var allUsersList=datasources.getEmployeeName.latestData();\n    try{\n        for(emp=0;emp\u003callUsersList.length;emp++)\n        {\n          if(allUsersList[emp].email === email)\n          {\n           return allUsersList[emp].first_name; \n          }\n        }\n        // emploName.then((res)=\u003e {\n        //    getFristName = res.results.payload[0].first_name;\n        //     return getFristName;\n        // })\n    } catch(e) {}\n   \n}\n$(function(){\n$(\"#foodTestData .ReactTable .rt-table .rt-body .crud-row .rt-tr .rt-td:nth-child(2) .input-section span\").css(\"color\",\"green\");\n});\n"
                        }
                    },
                    "hidePaginationWhenNotNeeded": false,
                    "highlightColor": "#b7cad9",
                    "highlightItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "htmlId": "foodTestData",
                    "oddStripeColor": "#FFFFFF",
                    "pageSize": 25,
                    "updateItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "052c2449-1a89-4386-8034-48f2b7e6b74b",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    }
                },
                "tab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                "type": "CrudgridWidget"
            },
            "316ecbc2-34ec-4410-a1b2-5bf4bdbda02e": {
                "externalScripts": [],
                "id": "316ecbc2-34ec-4410-a1b2-5bf4bdbda02e",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "\n",
                            "HTML": "\u003cdiv class=\"messagesTitle text-center\"\u003e\n  \u003c/div\u003e\n \n  \u003ch4\u003eReceived\u003c/h4\u003e\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cdiv id=\"MessageValue\" type=\"textarea\" class=\"form-control\" style=\"height:150px;overflow-y: scroll;\"\u003e\u003c/div\u003e\n  \u003c/div\u003e\n  \u003chr\u003e\n  \u003ch4\u003eNew\u003c/h4\u003e\n  Recipient\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cselect name=\"employees\" id=\"employees\" type=\"select\" class=\"form-control\"\u003e\n      \n    \u003c/select\u003e\n  \u003c/div\u003e\n  Priority\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cselect name=\"priority\" id=\"priority\" type=\"select\" class=\"form-control\"\u003e\n      \u003coption value=\"low\"\u003eLow\u003c/option\u003e\n      \u003coption value=\"medium\"\u003eMedium\u003c/option\u003e\n      \u003coption value=\"high\"\u003eHigh\u003c/option\u003e\n    \u003c/select\u003e\n  \u003c/div\u003e\n  Reply\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cinput id=\"Message\" type=\"textarea\" class=\"form-control\"\u003e\u003c/input\u003e\n  \u003c/div\u003e\n  \u003cbr\u003e\n  \u003cbutton id=\"sendButton\" class=\"btn btn-primary btn-block\"\u003eSend\u003c/button\u003e",
                            "JavaScript": "// try {\n//     $('#employees').empty();\n//     var employees = datasources.getEmployees.latestData().results.payload;\n//     for (var i = 0; i \u003c employees.length; i++) {\n//         var val = employees[i].email;\n//         var text = employees[i].first_name + \" \" + employees[i].last_name;\n//         $('#employees').append($('\u003coption/\u003e', {\n//             value: val,\n//             text: text\n//         }));\n//     }\n// } catch (e) {\n\n// };\n// var postNewMessage = function (payload) {\n//     var avatar = $(\"\u003cimg\u003e\u003c/img\u003e\");\n//     avatar.css(\"width\", 50);\n//     avatar.css(\"height\", 50);\n//     avatar.css('border-radius', \"8px\")\n//     avatar.attr(\"src\", payload.avatar)\n//     var messageBox = $('\u003cdiv\u003e\u003c/div\u003e');\n//     messageBox.css('padding-left', 8);\n//     var titleBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n//     titleBox.css(\"font-weight\", \"bold\")\n\n//     var titleName = $(\"\u003cspan\u003e\" + payload.senderName + \"\u003c/span\u003e\");\n//     currentTime = new Date();\n//     var time = currentTime.getTime();\n//     var hours = currentTime.getHours();\n//     var titleTime = $(\"\u003cspan\u003e\" + currentTime.toLocaleTimeString(\"en-us\") + \"\u003c/span\u003e\");\n//     titleTime.css(\"font-weight\", \"narrow\");\n//     titleTime.css(\"padding-left\", 12);\n//     titleTime.css(\"font-size\", 10)\n//     titleBox.append(titleName);\n//     titleBox.append(titleTime);\n//     messageBox.append(titleBox);\n//     var textBox = $(\"\u003cdiv\u003e\" + payload.text + \"\u003c/div\u003e\")\n//     messageBox.append(textBox)\n//     var parentBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n//     parentBox.css('padding', 0);\n//     // parentBox.css('background-color','blue')\n//     // parentBox.css('border', \"1px solid gray\")\n//     // parentBox.css('border-radius', \"8px\")\n//     parentBox.css('width', \"auto\")\n//     parentBox.css('display', \"flex\");\n//     parentBox.css(\"margin-bottom\", 8)\n//     parentBox.append(avatar);\n//     parentBox.append(messageBox)\n//     $(\"#MessageValue\").append(parentBox);\n//     $('#MessageValue').scrollTop($('#MessageValue')[0].scrollHeight);\n// }\n// datasources.getEmployees.latestData.subscribe(function (data) {\n\n//     $('#employees').empty();\n//     var employees = datasources.getEmployees.latestData().results.payload;\n//     for (var i = 0; i \u003c employees.length; i++) {\n//         var val = employees[i].email;\n//         var text = employees[i].first_name + \" \" + employees[i].last_name;\n//         $('#employees').append($('\u003coption/\u003e', {\n//             value: val,\n//             text: text\n//         }));\n//     }\n// });\n// datasources.currentEmployee.latestData.subscribe(function (data) {\n//     var currentEmployee = datasources.currentEmployee.latestData();\n//     var newTopic = \"messaging/\" + currentEmployee.user_id;\n//     console.log(newTopic)\n//     setTimeout(() =\u003e {\n//         datasources.userMessaging.settings({\n//             ...datasources.userMessaging.settings(),\n//             TOPIC_NAME: newTopic\n//         });\n//     }, 2000);\n//     console.log(\"gonna subscribe myself to the userMessaging datasource\")\n//     datasources.userMessaging.latestData.subscribe(function (data) {\n\n//         postNewMessage(JSON.parse(data));\n//         datasources.currentCustomer.item_id\n//         datasources.getAlerts.sendData({\n//             customer_id: datasources.currentCustomer.item_id\n//         });\n//     })\n// });\n\n\n// $(\"#sendButton\").click(function () {\n//     var currentEmployee = datasources.currentEmployee.latestData();\n\n//     var employee = $(\"#employees\").val();\n//     var priority = $(\"#priority\").val();\n//     var messageTypes = [\"internal\"];\n//     if (priority == \"medium\") {\n//         messageTypes.push(\"email\");\n//     } else if (priority == \"high\") {\n//         messageTypes.push(\"sms\");\n//         messageTypes.push(\"email\");\n//     }\n\n//     var message = $(\"#Message\").val();\n\n//     var params = {\n//         customer_id: currentEmployee.customer_id,\n//         messageTypes: messageTypes,\n//         userEmails: [employee],\n//         payload: message\n//     }\n//     datasources.sendMessage.sendData(params).then(function () {\n//         $(\"#Message\").val(\"\");\n//     })\n\n// });\n\nvar empList;\ntry {\n    $('#employees').empty();\n    var employees = datasources.getEmployees.latestData().results.payload;\n    for (var i = 0; i \u003c employees.length; i++) {\n        var val = employees[i].email;\n        var text = employees[i].first_name + \" \" + employees[i].last_name;\n        $('#employees').append($('\u003coption/\u003e', {\n            value: val,\n            text: text\n        }));\n    }\n} catch (e) {\n\n};\nvar postNewMessage = function (payload) {\n    var avatar = $(\"\u003cimg\u003e\u003c/img\u003e\");\n    avatar.css(\"width\", 50);\n    avatar.css(\"height\", 50);\n    avatar.css('border-radius', \"8px\")\n    avatar.attr(\"src\", payload.avatar)\n    var messageBox = $('\u003cdiv\u003e\u003c/div\u003e');\n    messageBox.css('padding-left', 8);\n    var titleBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n    titleBox.css(\"font-weight\", \"bold\")\n\n    var titleName = $(\"\u003cspan\u003e\" + payload.senderName + \"\u003c/span\u003e\");\n    currentTime = payload.sent_date?payload.sent_date:new Date();\n   // var time = currentTime.getTime();\n    //var hours = currentTime.getHours();\n     if(payload.sent_date)\n   {\n    var titleTime = $(\"\u003cspan\u003e\" + (new Date(currentTime)).toLocaleString() + \"\u003c/span\u003e\");\n\n   }else{\n    var titleTime = $(\"\u003cspan\u003e\" + currentTime.toLocaleTimeString(\"en-us\") + \"\u003c/span\u003e\");\n\n   }\n   // var titleTime = $(\"\u003cspan\u003e\" + currentTime.toLocaleTimeString(\"en-us\") + \"\u003c/span\u003e\");\n    titleTime.css(\"font-weight\", \"narrow\");\n    titleTime.css(\"padding-left\", 12);\n    titleTime.css(\"font-size\", 10)\n    titleBox.append(titleName);\n    titleBox.append(titleTime);\n    messageBox.append(titleBox);\n    var textBox = $(\"\u003cdiv\u003e\" + payload.text + \"\u003c/div\u003e\")\n    messageBox.append(textBox)\n    var parentBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n    parentBox.css('padding', 0);\n    // parentBox.css('background-color','blue')\n    // parentBox.css('border', \"1px solid gray\")\n    // parentBox.css('border-radius', \"8px\")\n    parentBox.css('width', \"auto\")\n    parentBox.css('display', \"flex\");\n    parentBox.css(\"margin-bottom\", 8)\n    parentBox.append(avatar);\n    parentBox.append(messageBox)\n    $(\"#MessageValue\").append(parentBox);\n    $('#MessageValue').scrollTop($('#MessageValue')[0].scrollHeight);\n}\ndatasources.getEmployees.latestData.subscribe(function (data) {\n\n    $('#employees').empty();\n    var employees = datasources.getEmployees.latestData().results.payload;\n    empList=employees;\n    for (var i = 0; i \u003c employees.length; i++) {\n        var val = employees[i].email;\n        var text = employees[i].first_name + \" \" + employees[i].last_name;\n        $('#employees').append($('\u003coption/\u003e', {\n            value: val,\n            text: text\n        }));\n    }\n     historyMessages();\n});\ndatasources.currentEmployee.latestData.subscribe(function (data) {\n    var currentEmployee = datasources.currentEmployee.latestData();\n    var newTopic = \"messaging/\" + currentEmployee.user_id;\n    console.log(newTopic)\n    setTimeout(() =\u003e {\n        datasources.userMessaging.settings({\n            ...datasources.userMessaging.settings(),\n            TOPIC_NAME: newTopic\n        });\n    }, 2000);\n    console.log(\"gonna subscribe myself to the userMessaging datasource\")\n    datasources.userMessaging.latestData.subscribe(function (data) {\n\n        postNewMessage(JSON.parse(data));\n        datasources.currentCustomer.item_id\n        datasources.getAlerts.sendData({\n            customer_id: datasources.currentCustomer.item_id\n        });\n    })\n});\n\n\nfunction historyMessages(){\nvar activeUser;\n CB_PORTAL.ClearBlade.User().getUser((err, data) =\u003e {\n        if (!err) {\n            console.log('got user', data);\n           activeUser =data.email;\n        \n   // alert(activeUser);\nvar mesHisObj = {\"email_id\":activeUser};\n//console.log(\"User Id \"+activeUser);\ndatasources.MessagesHistory.sendData(mesHisObj)\n.then((result) =\u003e{\n   // $(\"#MessageValue\").value =\"\";\n   //alert(\"Step1\");\n    var msgsData = result.results.DATA;\n   // var employees = datasources.getEmployees.latestData().results.payload;\n   //var empList =datasources.getEmployees.latestData().results.payload;\n    //alert(empList);\n    for(let i=0;i\u003c10;i++){\n        var postMsgData  ={};\n        var senderEmailId = msgsData[i].from_email_id ;\n        empList.forEach(function(empData){\n            if(empData.email === senderEmailId){\n                postMsgData.avatar = empData.photo;\n                postMsgData.senderName = empData.first_name +\" \"+empData.last_name ; \n            }\n        });\n        postMsgData.text = msgsData[i].message;\n        postMsgData.sent_date=msgsData[i].sent_date;\n        postNewMessage(postMsgData);\n    }\n   // alert(\"Step1\");\n});\n}\n    });\n}\nvar count=0;\n$(\"#sendButton\").click(function () {\n    if(count == 0){\n        $(\"#MessageValue\").empty();\n    count++;\n    }\n    var currentEmployee = datasources.currentEmployee.latestData();\n\n    var employee = $(\"#employees\").val();\n    var priority = $(\"#priority\").val();\n    var messageTypes = [\"internal\"];\n    if (priority == \"medium\") {\n        messageTypes.push(\"email\");\n    } else if (priority == \"high\") {\n        messageTypes.push(\"sms\");\n        messageTypes.push(\"email\");\n    }\n\n    var message = $(\"#Message\").val();\n\n    var params = {\n        customer_id: currentEmployee.customer_id,\n        messageTypes: messageTypes,\n        userEmails: [employee],\n        payload: message\n    }\n    datasources.sendMessage.sendData(params).then(function () {\n        $(\"#Message\").val(\"\");\n    })\n    var messageDetails = {\n        \"from_email_id\": currentEmployee.email,\n        \"priority\": priority,\n        \"to_email_id\": employee,\n        \"message\": message\n    }\n    datasources.saveMessage.sendData(messageDetails).then(function () {\n      \n    })\n\n});\n"
                        }
                    }
                },
                "tab": "02cce293-bb02-42ff-97d8-d1ef6a49fc7b",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "3631a38f-2ecc-4ae7-9e1e-0ae3cc2ed6ed": {
                "externalScripts": [],
                "id": "3631a38f-2ecc-4ae7-9e1e-0ae3cc2ed6ed",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "97b22889-6a40-435b-a94d-57e3d12f05d5",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "#statis_tble th{\r\n    font-size:12px;\r\n}\r\n#statis_tble tbody{\r\nfont-size:13px;\r\n}\r\n#statis_tble th td{\r\n   text-align: center;\r\n}\r\n#statis_tble td{\r\n    padding:0.4rem;\r\n}",
                                "HTML": "\u003cdiv id=\"statis_tble\"\u003e \u003c/div\u003e",
                                "JavaScript": "const columns = [\n    {key: 'sent_date', label: 'Sent Date', format: (date) =\u003e {\n    try {\n        return new Date(date).toLocaleString().replace(\",\",\"\");\n    } catch(e) {\n        return date;\n    }\n    \n}},\n   {key: 'acknowledge_date', label: 'Acknowledgement Status', format: (date) =\u003e {\n    try {\n        if(date){\n         return \"Acknowledged\";\n        }else{\n         return \"Not Acknowledged\";\n        }\n    } catch(e) {\n        return date;\n    }\n    \n}},\n{key: 'acknowledge_date', label: 'Acknowledge Date', format: (date) =\u003e {\n    try {\n        return new Date(date).toLocaleString().replace(\",\",\"\");\n    } catch(e) {\n        return date;\n    }\n    \n}},\n {key: 'is_active', label: 'Is Active', format : (val)=\u003e{\n      try{\n          if(val){\n               val = \"true\";\n              return val;\n          }else {\n               val = \"false\";\n              return val;\n              }\n          }catch(e){\n          return val;\n      }\n  }},\n  {key: 'target_users', label: 'Target Users'}\n \n]\n\nconst buildTable = (sensors) =\u003e {\n    const myContainer = $('#statis_tble');\n    const table = $('\u003ctable\u003e\u003c/table\u003e');\n    const tHead = $('\u003cthead\u003e\u003c/thead\u003e');\n    const tHeadRow = $('\u003ctr\u003e\u003c/tr\u003e');\n    const tBody = $('\u003ctbody\u003e\u003c/tbody\u003e');\n\n    columns.forEach((c) =\u003e {\n        const tHeadColumn = $('\u003cth scope=\"col\"\u003e\u003c/th\u003e');\n        tHeadColumn.html(c.label);\n        tHeadRow.append(tHeadColumn);\n    })\n    \n    tHead.append(tHeadRow);\n    table.append(tHead);\n    table.append(tBody);\n\n    sensors.forEach((s) =\u003e {\n        const tBodyRow = $('\u003ctr\u003e\u003c/tr\u003e');\n        columns.forEach((c) =\u003e {\n            const td = $('\u003ctd\u003e\u003c/td\u003e');\n            const text = c.format ? c.format(s[c.key]) : s[c.key];\n                    td.html(text);          \n                    tBodyRow.append(td);\n        })\n        tBody.append(tBodyRow);\n    })\n\n    table.addClass('table table-striped')\n    myContainer.empty();\n    myContainer.append(table);\n}\n\nconst handleSensors = (data) =\u003e {\n    console.log('handle', data);\n    buildTable(data.results.payload.DATA);\n}\n\nif (datasources.getAlertHistory.lastUpdated) {\n   handleSensors(datasources.getAlertHistory.latestData());\n}\n    \n\n"
                            }
                        }
                    }
                },
                "tab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "4252515b-1383-4300-9831-f9ca6fa87bf6": {
                "externalScripts": [],
                "id": "4252515b-1383-4300-9831-f9ca6fa87bf6",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "",
                            "HTML": "\u003cdiv class=\"form-group form-inline\"\u003e\n  \u003clabel for=\"gateway-group-by-select\"\u003eGroup gateways by\u0026nbsp;\u003c/label\u003e\n  \u003cselect class=\"form-control\" id=\"gateway-group-by-select\"\u003e\n    \u003coption value=\"location_name\"\u003eLocation\u003c/option\u003e\n    \u003coption value=\"asset_type_name\"\u003eAsset Type\u003c/option\u003e\n  \u003c/select\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\nconst defaultSelection = 'location_name';\nconst selectElem = $('#gateway-group-by-select');\nselectElem.val(defaultSelection);\ndatasources.gatewayListGroupByAttribute.sendData(defaultSelection);\n\nselectElem.off('change');\nselectElem.on('change', (e) =\u003e {\n    datasources.gatewayListGroupByAttribute.sendData(e.target.value);\n})"
                        }
                    }
                },
                "tab": "4edd96aa-390c-4655-b192-6bf4adb47bfa",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "4539300f-7e2d-4859-951a-475dc58a12b1": {
                "externalScripts": [],
                "id": "4539300f-7e2d-4859-951a-475dc58a12b1",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "activeItemBackgroundColor": "#428bca",
                    "activeItemFontColor": "#ffffff",
                    "activeStatusBulletColor": "green",
                    "allowFilters": false,
                    "allowSearch": true,
                    "bulletColor": "#000000",
                    "displayAttribute": "gateway_label",
                    "displayBullets": true,
                    "displayStatusIndicators": false,
                    "enableListAutoSelect": true,
                    "eventTarget": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5ab20b1b-d4cf-4c0a-a193-63ec6492eb68",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "const getSensorTypeById = (types, id) =\u003e {\n    return types.filter((t) =\u003e t.item_id === id)[0];\n}\n\nconst getSensorSubscription = (topic) =\u003e {\n    return window.sensorSubscriptions.filter((sub) =\u003e sub.topic === topic)[0];\n}\n\n// const updateHumidityGauges = (sensorMsg, order) =\u003e {\n//     const val = sensorMsg.dataValue;\n//     const split = val.split('|');\n//     const humidity = split[0];\n//     const temp = split[1];\n//     updateSingleGauge(sensorMsg.sensorID, order, getLabelForSensor(sensorMsg), humidity, sensorMsg.messageDate, sensorMsg)\n// }\n\n// const getGaugeLabel = (label, sensorMsg) =\u003e {\n//     try {\n//         switch (sensorMsg.plotLabels) {\n//             case \"Celsius\":\n//                 return `${label} (*C)`;\n//             case \"Humidity|Celsius\":\n//                 return `${label} (%)`;\n//         }\n//     } catch (e) {\n\n//     }\n//     return label;\n// }\n\n// const messageTimeClass = 'message-time';\n// const updateSingleGauge = (id, order, label, value, time, sensorMsg) =\u003e {\n//     console.log('single', sensorMsg)\n//     const mySensor = $(`#assetSensor${order}`);\n//     mySensor.show();\n//     mySensor.find(`.${messageTimeClass}`).remove();\n\n//     const msgTime = $('\u003cdiv\u003e\u003c/div\u003e');\n//     msgTime.addClass(messageTimeClass)\n//     msgTime.text(time);\n//     msgTime.css({\n//         'text-align': 'center',\n//         top: '-13px',\n//         position: 'relative',\n//         color: 'rgb(153, 153, 153)',\n//         'font-size': '.75rem'\n//     })\n//     mySensor.append(msgTime);\n//     const sensorRule = window.getAlertConfigForSensorById(id);\n//     const fillColor = window.getFillColorForSensor(sensorRule, value);\n//     datasources[`assetSensor${order}`].sendData({ label: getGaugeLabel(label, sensorMsg), value, fillColor });\n\n//     // setTimeout(() =\u003e {\n//     //     const mySensorValueText = mySensor.find('svg text').eq(1);\n//     //     const bbox = mySensorValueText[0].getBBox();\n//     //     const width = bbox.width;\n//     //     const height = bbox.height;\n//     //     const x = Number(mySensorValueText.attr('x'));\n//     //     const y = Number(mySensorValueText.attr('y'));\n//     //     console.log('stuff', width, height, x, y);\n//     //     const unitX = x + width + 10;\n//     //     const unitElem = $('\u003ctext\u003e\u003c/text\u003e');\n//     //     unitElem.attr('x', unitX);\n//     //     unitElem.attr('y', y);\n//     //     mySensorValueText.after(unitElem);\n//     //     // .text(`${value}*C`)\n//     // })\n// }\n\n// const updateTempGauges = (sensorMsg, order) =\u003e {\n//     updateSingleGauge(sensorMsg.sensorID, order, getLabelForSensor(sensorMsg), sensorMsg.dataValue, sensorMsg.messageDate, sensorMsg);\n// }\n\nconst getLabelForSensor = (sensorMsg) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id === sensorMsg.sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorMsg.sensorName;\n}\n\n// const updateDoorToggle = (sensorMsg) =\u003e {\n//     let val = false;\n//     if (sensorMsg.dataValue === 'True') {\n//         val = true;\n//     }\n//     $('#assetSensor1').show();\n//     datasources.assetSensor1.sendData({ value: val });\n// }\n\nconst getSensorById = (id) =\u003e {\n    const sensors = datasources.getSensors.latestData().results.payload.DATA;\n    for (let i = 0, len = sensors.length; i \u003c len; i++) {\n        if (sensors[i].sensor_id === id) {\n            return sensors[i];\n        }\n    }\n}\n\nconst messageReceived = (msg) =\u003e {\n    let parsedMsg;\n    try {\n        parsedMsg = JSON.parse(msg);\n    } catch (e) {\n        console.error('Failed to parse message', e);\n    }\n    if (parsedMsg \u0026\u0026 parsedMsg.sensor_message.sensorID) {\n        try {\n            const id = parsedMsg.sensor_message.sensorID;\n            const sensor = getSensorById(id);\n            const sensorType = getSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, sensor.sensor_type_id);\n            const alertConfig = getAlertConfigForSensorById(id);\n\n            datasources.latestSensorData.sendData({\n                ...datasources.latestSensorData.latestData(),\n                [id]: {\n                    id,\n                    sensorType,\n                    sensor,\n                    message: parsedMsg,\n                    alertConfig\n                }\n            })\n        } catch (e) {\n            console.error('Unable to update latestSensorData', id, sensorType, sensor, e)\n        }\n    }\n}\n\nconst setupMessaging = () =\u003e {\n    return new Promise((resolve) =\u003e {\n        if (!window.messagingObjectForSensors) {\n            window.sensorSubscriptions = [];\n            window.messagingObjectForSensors = CB_PORTAL.ClearBlade.Messaging({ useSSL: true }, resolve);\n        } else {\n            window.sensorSubscriptions.forEach((sub) =\u003e {\n                try {\n                    window.messagingObjectForSensors.unsubscribe(sub.topic, {});\n                } catch (e) {\n                    console.error('Unable to unsub from topics', e);\n                }\n            })\n\n            window.sensorSubscriptions = [];\n            resolve();\n        }\n    })\n}\n\nconst messageHistoryCallback = (err, data) =\u003e {\n    if (!err) {\n        if (data \u0026\u0026 data[0]) {\n            messageReceived(data[0].message);\n        }\n    }\n}\n\nconst resetGauges = () =\u003e {\n    datasources.latestSensorData.sendData({});\n}\n\nconst updateGauges = (sensors) =\u003e {\n    resetGauges();\n\n    sensors.forEach((s) =\u003e {\n        const sensorType = getSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, s.sensor_type_id);\n        const topicName = `monnit-webhook-adapter/${s.sensor_id}`;\n\n        window.sensorSubscriptions.push({ topic: topicName });\n        window.messagingObjectForSensors.subscribe(topicName, {}, messageReceived);\n        CB_PORTAL.ClearBlade.MessagingStats().getMessageHistory(topicName, new Date().getTime(), 1, messageHistoryCallback)\n    })\n}\n\nconst gatewayId = this.widget.gateway_id;\ndatasources.getSensors.sendData({ gateway_id: gatewayId }).then((data) =\u003e {\n    let sensors;\n    let probType=\"4ebd356c-b35d-4b7d-a2be-2b6854973057\";\n    try {\n        sensors = data.results.payload.DATA;\n        sensors=sensors.map((sensor)=\u003esensor.filter((s)=\u003es.sensor_type_id != probType)[0]);\n    } catch (e) {\n        console.error('error parsing sensors after selecting asset', e);\n    }\n    if (sensors \u0026\u0026 Array.isArray(sensors)) {\n\n        // update the history line chart\n        try {\n            datasources.sensorHistoryIds.sendData(sensors.map((s) =\u003e s.sensor_id))\n            if (datasources.sensorHistoryTimeRange.lastUpdated) {\n                const timeRange = datasources.sensorHistoryTimeRange.latestData();\n                datasources.getHistoryForSensors.sendData({\n                    sensor_ids: datasources.sensorHistoryIds.latestData(),\n                    startTime: timeRange.startDate.toISOString(),\n                    endTime: timeRange.endDate.toISOString()\n                })\n            }\n        } catch (e) {\n            console.error('error parsing sensors after selecting asset', e);\n        }\n        console.log(`list of sensors for ${gatewayId}`, sensors);\n        setupMessaging().then(() =\u003e {\n            // update the 'latest data' gauges\n            try {\n                updateGauges(sensors);\n            } catch (e) {\n                console.error('error updating gauges', e);\n            }\n        })\n    }\n})\nreturn this.widget;"
                        }
                    },
                    "fontColor": "#000000",
                    "groupByAttributes": [
                        "location_name",
                        null
                    ],
                    "htmlId": "asset-list",
                    "inactiveStatusBulletColor": "darkred",
                    "listItemBackgroundColor": "#ffffff",
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "72722df6-3ed6-4c91-8a33-e187a6f7113e",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "if (!datasources.sensorHistoryTimeRange.lastUpdated) {\n    const now = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(now.getDate() - 1);\n    console.log('now', now);\n    datasources.sensorHistoryTimeRange.sendData({\n        startDate: yesterday,\n        endDate: now\n    })\n}\n\nconst getLocationNameById = (locs, id) =\u003e {\n    const found = locs.filter((l) =\u003e l.item_id === id)[0];\n    if (found) {\n        return found.name;\n    }\n    return 'Location not found'\n}\n\nconst getAssetTypeNameById = (id) =\u003e {\n    const assetTypes = this.datasource.getAssetTypes.results.payload.DATA;\n    const found = assetTypes.filter((t) =\u003e t.item_id === id)[0];\n    if (found) {\n        return found.name;\n    }\n    return 'Asset type not found';\n}\n\nconst buildGatewayListByAssetType = (gateways = []) =\u003e {\n    const promises = gateways.map((g) =\u003e {\n        return datasources.getSensorByGatewayId.sendData({\n            gateway_id: g.gateway_id\n        }).then((data) =\u003e {\n            try {\n                const assetIds = [];\n                const sensors = data.results.payload.DATA;\n                sensors.forEach((s) =\u003e {\n                    if (assetIds.indexOf(s.asset_id) === -1) {\n                        assetIds.push(s.asset_id);\n                    }\n                })\n                const assetsTypeIdForGateway = this.datasource.getAssets.results.payload.DATA.filter((a) =\u003e {\n                    return assetIds.indexOf(a.item_id) \u003e -1;\n                }).map((a) =\u003e a.asset_type_id)[0];\n\n                return {\n                    ...g,\n                    asset_type_name: getAssetTypeNameById(assetsTypeIdForGateway)\n                }\n            } catch (e) {\n                console.error('Unable to get asset type name for gateway', e, g);\n                return g;\n            }\n        })\n    })\n    return Promise.all(promises).then((data) =\u003e {\n        console.log('alll', data);\n        return data;\n    });\n}\n\nif (this.datasource.getLocations \u0026\u0026 this.datasource.getLocations.results \u0026\u0026 this.datasource.getAssets \u0026\u0026 this.datasource.getAssets.results \u0026\u0026 this.datasource.getAssetTypes \u0026\u0026 this.datasource.getAssetTypes.results \u0026\u0026 this.datasource.getGateways \u0026\u0026 this.datasource.getGateways.results) {\n    const gateways = this.datasource.getGateways.results.payload.DATA;\n    console.log('settings', this.model.settings())\n    this.model.settings({\n        ...this.model.settings(),\n        groupByAttributes: [this.datasource.gatewayListGroupByAttribute, null]\n    })\n    if (this.datasource.gatewayListGroupByAttribute === 'location_name') {\n        return gateways.map((a) =\u003e ({\n            ...a,\n            location_name: getLocationNameById(this.datasource.getLocations.results.payload.DATA, a.location_id)\n        }))\n    } else if (this.datasource.gatewayListGroupByAttribute === 'asset_type_name') {\n        return buildGatewayListByAssetType(gateways);\n    }\n} else {\n    return [];\n}\n"
                        }
                    },
                    "titleColor": "#000000",
                    "trackingColumnName": "item_id"
                },
                "tab": "4edd96aa-390c-4655-b192-6bf4adb47bfa",
                "type": "GROUPING_LIST_WIDGET_COMPONENT"
            },
            "4bc69db5-70ad-48af-bc04-1e57cbc20dd0": {
                "externalScripts": [],
                "id": "4bc69db5-70ad-48af-bc04-1e57cbc20dd0",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput text=\"asdf\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "// $(\":file\").filestyle({ input: false, text: \"Upload CSV\" });\n\n$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        name: d.name,\n                        attributes: d.attributes,\n                        description: d.description,\n                        data_type: d.data_type,\n                        display_name: d.display_name,\n                        icon: d.icon,\n                        is_probe: d.is_probe,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createSensorType.sendData({ sensor_types: js }).then(res =\u003e {\n                if (res.success === false) {\n                    $('.csv-error').html(res.results)\n                    return\n                }\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getSensorTypes.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n\n})\n"
                        }
                    }
                },
                "tab": "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "4c2b6754-7a5f-4581-95ec-5b8f00d9aa0f": {
                "externalScripts": [],
                "id": "4c2b6754-7a5f-4581-95ec-5b8f00d9aa0f",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".selected-list-item {\n    background: #eee;\n}",
                            "HTML": "\u003cdiv id=\"menu-list-container\"\u003e\n\t\u003cdiv class=\"list-group\"\u003e\n\t\u003c/div\u003e\n\n    \u003ch5 class=\"mt-4\"\u003eAdmin\u003c/h5\u003e\n    \u003cdiv class=\"admin-menu list-group\"\u003e\n\t\u003c/div\u003e\n\n\u003c/div\u003e",
                            "JavaScript": "//JavaScript\nconst container = $('#menu-list-container');\nconst pages = [\n    { \"label\": \"Home\", \"value\": \"Home\" },\n    { \"label\": \"Device Status\", \"value\": \"Device_Status\" },\n    { \"label\": \"Food Test\", \"value\": \"FoodTest\" },\n    { \"label\": \"Alerts\", \"value\": \"AlertConfig\" },\n    { \"label\": \"Interactive Charts\", \"value\": \"SensorChart\" },\n    { \"label\": \"Map\", \"value\": \"Map\" }\n];\nconst adminPage = [\n    { \"label\": \"Locations\", \"value\": \"Locations\" },\n    { \"label\": \"Assets\", \"value\": \"Assets\" },\n    { \"label\": \"Gateways\", \"value\": \"Gateways\" },    \n    { \"label\": \"Sensors\", \"value\": \"Sensors\" },\n    { \"label\": \"Employees\", \"value\": \"Employees\" },\n    { \"label\": \"Food Test Type\", \"value\": \"FoodTestTypes\" },\n    { \"label\": \"Sensor Type\", \"value\": \"SensorTypes\" },\n    { \"label\": \"Asset Type\", \"value\": \"AssetTypes\" },\n];\n\nconst listGroup = $('#menu-list-container .list-group');\n\nconst adminListGroup = $('#menu-list-container .admin-menu');\n\nlistGroup.empty();\npages.forEach((a) =\u003e {\n    listGroup.append(renderItem(a));\n})\n\nadminListGroup.empty();\nadminPage.forEach((a) =\u003e {\n    adminListGroup.append(renderItem(a));\n})\n\nfunction renderItem(a) {\n    const item = $('\u003cbutton\u003e\u003c/button\u003e')\n    item.addClass('list-group-item list-group-item-action')\n    if (location.hash.toLowerCase() === `#/${a.value.toLowerCase()}`) {\n        item.addClass('selected-list-item')\n    }\n    const itemDesc = $('\u003cspan\u003e\u003c/span\u003e');\n    itemDesc.html(a.label)\n    item.on('click', () =\u003e {\n        console.log('asdf', a);\n        CB_PORTAL.selectPage(`/${a.value}`)\n        CB_PORTAL.toggleFlyout();\n    })\n    item.append(itemDesc)\n    return item\n}\n"
                        }
                    }
                },
                "tab": null,
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5468ad8d-6e42-45ef-8908-88c93f5a8675": {
                "externalScripts": [],
                "id": "5468ad8d-6e42-45ef-8908-88c93f5a8675",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2e1db52a-ec67-412b-a704-abc0fc865224",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eGateways\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eLocation\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"gateway-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getGateways) return\n\nconst listItems = this.datasource.getGateways.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const location = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.find(d =\u003e d.item_id === data.location_id)\n    const selected = this.datasource.currentGatewayId === data.gateway_id;\n    return `\n    \u003ctr class=\"gateway-item selectable-list-item ${selected ? 'selected' : ''}\" data-gateway-id=\"${data.gateway_id}\"\u003e\n      \u003ctd\u003e\n      ${data.gateway_label}\n      \u003cdiv class=\"text-muted\"\u003e${data.gateway_name}\u003c/div\u003e\n      \u003c/td\u003e\n        \u003ctd\u003e${location ? `\u003cbutton class=\"btn p-0 btn-link location-link\" data-item-id=${location.item_id}\u003e${location.name}\u003c/button\u003e` : ''}      \n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-gateway\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#gateway-list\").html(listItems)\n\nif (!window.hasSetupGatewayListListeners) {\n  window.hasSetupGatewayListListeners = true\n  $(\"#gateway-list\").html(listItems)\n  $(\"body\").on('click', '.delete-gateway', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this gateway?')) {\n      datasources.deleteGateway.sendData({ gateway_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getGateways.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n        datasources.getOrphanGatewayData.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.gateway-item', ({ currentTarget }) =\u003e {\n    datasources.currentGatewayId.sendData(currentTarget.dataset.gatewayId)\n  })\n\n  $(\"body\").on('click', '.location-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/locations`)\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "b782f872-9afb-4d2a-ac3e-c0520c5e2b82",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac": {
                "externalScripts": [],
                "id": "55ed07ab-c82f-4ad2-a074-9aa6fcc974ac",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "0606ca05-2044-49c0-b957-9f45077eb828",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eAsset Types\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"asset-type-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getAssetTypes) return\n\nconst listItems = this.datasource.getAssetTypes.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    console.log(data)\n    const selected = this.datasource.currentAssetTypeId === data.item_id;\n    return `\n    \u003ctr class=\"asset-type-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e\n      ${data.name}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-asset-type\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#asset-type-list\").html(listItems)\n\nif (!window.hasSetupAssetTypeListListeners) {\n  window.hasSetupAssetTypeListListeners = true\n  $(\"#asset-type-list\").html(listItems)\n  $(\"body\").on('click', '.delete-asset-type', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this asset-type?')) {\n      datasources.deleteAssetType.sendData({ asset_type_id: currentTarget.dataset.itemId }).then((res) =\u003e {\n        datasources.getAssetTypes.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.asset-type-item', ({ currentTarget }) =\u003e {\n    datasources.currentAssetTypeId.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "53d33460-9251-45c1-8776-e7859bb1b6f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "593e8065-111b-4a01-bf1c-97c5b0ae6182": {
                "externalScripts": [],
                "id": "593e8065-111b-4a01-bf1c-97c5b0ae6182",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "eaf560ab-f725-424a-a66b-4019f48ffc4a",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"zone-list-title\"\u003eAdd Zone\u003c/h2\u003e\n",
                                "JavaScript": "$(\"#zone-list-title\").html(\n    (this.datasource \u0026\u0026 this.datasource !== 'none') ? `\nUpdate Zone \n\u003cbutton id=\"switch-to-add-zone\" class=\"btn btn-link\"\u003eAdd Zone\u003c/button\u003e\n` : 'Add Zone')\n\n$('#switch-to-add-zone').click(function() {\n    datasources.currentAssetId.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "ff8f563a-5de6-4aa3-86a2-710787850d2d",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5a49e657-148b-43a0-ab18-3a9441ad8dd8": {
                "externalScripts": [],
                "id": "5a49e657-148b-43a0-ab18-3a9441ad8dd8",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n#sec_tab{\n  margin-top: 2ch \n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\" type=\"button\" class=\"btn btn-info\"\u003e download CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e battery_level  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e last_active \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e latest_payload \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e sensor_id \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e sensor_label \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e gateway_id \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e location_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e contact_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e asset_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e sensor_name \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e sensor_type_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e signal_strength \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e created_date \u003c/b\u003e\u003c/td\u003e\n            \n\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"13\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "6540ae2b-4521-4969-93f0-1aa46fda23b7",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5c09457b-0376-4c3d-95c7-b5b5ecbb92b3": {
                "externalScripts": [],
                "id": "5c09457b-0376-4c3d-95c7-b5b5ecbb92b3",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {
                        "From_DAte": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "ea162b68-1368-4124-83f9-fb04a0ad292e",
                            "label": "FROM",
                            "name": "From_DAte",
                            "orderIdx": 1,
                            "widthPercent": 40
                        },
                        "To_DAte": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "205824d4-093b-4197-a56d-6580609c0693",
                            "label": "TO",
                            "name": "To_DAte",
                            "orderIdx": 2,
                            "widthPercent": 40
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\nvar date = new Date(this.widget.data.From_DAte);\nvar from_date = Math.floor(date.getTime() / 1000); \nvar todate = new Date(this.widget.data.To_DAte);\nvar to_date = Math.floor(todate.getTime() / 1000); \n\n   var the_object = {};\n  the_object.fromTS = from_date;\n the_object.toTS = to_date;\n     console.log(\"from and to \"+JSON.stringify(the_object)); \n datasources.FromToDates.sendData(the_object);\nreturn {}\n\n\n"
                    },
                    "fontColor": "#000000",
                    "htmlId": "foodtestktable",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {\n    last_name: 'Miller',\n  }\n};\n\nreturn formSourceObj\n\n// // EXAMPLE of advanced features\n// const stateToCity = {\n//   Texas: ['Austin', 'Dallas', 'El Paso'],\n//   California: ['San Francisco', 'Los Angeles']\n// }\n\n// /**\n//  * @type {FormSourceObj}\n//  */\n// var formSourceObj = {\n//   // the initial data the form has when loaded\n//   data: { state: \"Texas\" },\n\n//   // gets called every time something in the form changes\n//   onUpdate: function (arg) {\n//     if (arg.currentValues.state) {\n//       var cityOptions = stateToCity[arg.currentValues.state]\n//       arg.fieldSettings.city.dropdownOptions = cityOptions\n//     }\n//     return arg\n//   },\n\n//   // an object the same shape as fieldSettings, that is merged with the settings from the UI\n//   // useful for adding dynamic things like dropdown options from a collection\n//   overrideFieldSettings: {\n//     state: {\n//       name: 'state', dataType: 'string', display: true, orderIdx: 5, key: '3f4eeddd-3917-4099-9e3d-68d7e878568d', options: { dropdownOptions: ['Texas', 'California'] }, inputType: 'BUTTON_GROUP', dropdownOptions: ['Texas', 'California'],\n//     },\n//     city: {\n//       name: 'city', dataType: 'string', display: true, orderIdx: 6, key: 'cfd6c6e6-85c4-45e3-b62f-df232434fa2c', options: {}, inputType: 'BUTTON_GROUP', dropdownOptions: ['Austin', 'Dallas', 'El Paso'],\n//     },\n//   }\n// };\n// return formSourceObj\n"
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "5df0e0b1-91dd-4bb4-a742-44c0ac57f28e": {
                "externalScripts": [],
                "id": "5df0e0b1-91dd-4bb4-a742-44c0ac57f28e",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "fb95de32-504c-4393-bcec-5ee0cb5b580c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".underline {\n  text-decoration: underline;\n}\n#mulchartdiv {\n  width: 100%;\n  height: 50vh;\n}\t\t\t\t\t\t\n.amcharts-chart-div a{\n\tdisplay:none !important;\n}\n",
                                "HTML": "\u003cdiv id=\"mulchartdiv\"\u003e\u003c/div\u003e\t\n",
                                "JavaScript": "//JavaScript\nvar chartDataProvider=[];\nvar sResult=this.datasource.results.payload;\nsResult.map((dataObj)=\u003e{\n  dataObj.timestamp=(new Date(dataObj.timestamp)).toLocaleString();\n  chartDataProvider.push(dataObj);\n});\nvar graphs=[];\nvar barSize=0.4;\nvar chartData=this.datasource.results.payload;\nconst getLabelForSensorID = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id == sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\n\nif(chartData.length\u003e0)\n{\nvar sampleObject=chartData[chartData.length-1];\nvar timestampkey=\"timestamp\";\nvar listOfSensors=Object.keys(sampleObject).filter((k) =\u003e {\n        return timestampkey.indexOf(k) === -1;\n    });\n    var lineColors=[\"#ff1a1a\",\"#00ff00\",\"#66b3ff\",\"#ffff00\",\"#b3b300\"];\n    var Barcolors=[\"#003333\",\"yellow\",\"#00ffcc\",\"#e0e0eb\",\"#800000\"];\n    var bulletType=[\"round\",\"square\"];\n    var hcount=tcount=0;\n    var gcount=1;\n    listOfSensors.map((sid,idx)=\u003e{\n      if(sid.indexOf(\"_d\") != -1)\n      {\n         humiditygraph(sid,hcount,gcount);\n         hcount++;\n         gcount++;\n         barSize=barSize+0.3;        \n      }else{\n        temperatureGraph(sid,tcount,gcount);\n        tcount++;\n        gcount++;\n      }\n    });\n function temperatureGraph(sensorId,coloridx,graphidx){\n  graphs.push({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"bullet\": (coloridx/2)?\"round\":\"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": lineColors[coloridx],\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": getLabelForSensorID(sensorId),\n    \"valueField\": sensorId,\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  });\n\n};\n\nfunction humiditygraph(sensorId,coloridx,graphidx){\ngraphs.unshift({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"lineColor\": Barcolors[coloridx],\n    \"fillColors\": Barcolors[coloridx],\n    //#87cefa\n    \"fillAlphas\": 0.9,\n     \"clustered\": false,\n    \"columnWidth\": barSize,\n    \"type\": \"column\",\n    \"title\": getLabelForSensorID(sensorId),\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": (sensorId.slice(0, -2)),\n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  });\n  \n};\n\n//alert(JSON.stringify(graphs));\n\n//console.log(\"Result123:\"+JSON.stringify(this.datasource.results.payload));\nvar chart1 = AmCharts.makeChart(\"mulchartdiv\", {\n  \"type\": \"serial\",\n  \"theme\": \"light\",\n // \"dataDateFormat\": \"YYYY-MM-DD\",\n  \"precision\": 2,\n  \"valueAxes\": [\n  /* {\n    \"id\": \"v1\",\n    \"title\": \"Sales\",\n    \"position\": \"left\",\n    \"autoGridCount\": false,\n    \"labelFunction\": function(value) {\n      return \"$\" + Math.round(value) + \"M\";\n    }\n  }, */ {\n    \"id\": \"v1\",\n    \"title\": \"Reading\",\n    \"gridAlpha\": 0,\n    \"position\": \"left\",\n    \"autoGridCount\": false\n  }],\n  \"graphs\": \n  graphs,\n  /*[\n    {\n    \"id\": \"g2\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e0e0eb\",\n    \"fillColors\": \"#e0e0eb\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.7,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380139\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380139_0\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[category]]\u003cbr/\u003e\u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  },\n     {\n    \"id\": \"g1\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e1ede9\",\n    \"fillColors\": \"#003333\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.5,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380138\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380138_0\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  },{\n    \"id\": \"g3\",\n    \"valueAxis\": \"v1\",\n    \"bullet\": \"round\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": \"#00ffff\",\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-425070\",\n    \"valueField\": \"425070\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  }, {\n    \"id\": \"g4\",\n    \"valueAxis\": \"v1\",\n    \"lineThickness\": 2,\n    \"bullet\": \"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineColor\": \"#ff5755\",\n   // #ff5755\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-426643\",\n    \"valueField\": \"426643\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 130%'\u003e[[value]]\u003c/b\u003e\"\n  }],*/\n  \"chartScrollbar\": {\n    //\"graph\": \"g4\",\n    \"oppositeAxis\": false,\n    \"offset\": 30,\n    \"scrollbarHeight\": 30,\n    \"backgroundAlpha\": 0,\n    \"selectedBackgroundAlpha\": 0.1,\n    \"selectedBackgroundColor\": \"#888888\",\n    \"graphFillAlpha\": 0,\n    \"graphLineAlpha\": 0.5,\n    \"selectedGraphFillAlpha\": 0,\n    \"selectedGraphLineAlpha\": 1,\n    \"autoGridCount\": true,\n    \"color\": \"#AAAAAA\"\n  },\n  \"chartCursor\": {\n    \"pan\": true,\n    \"valueLineEnabled\": true,\n    \"valueLineBalloonEnabled\": true,\n    \"cursorAlpha\": 0,\n    \"valueLineAlpha\": 0.2\n  },\n  \"categoryField\": \"timestamp\",\n  \"categoryAxis\": {\n    \"parseDates\": true,\n    \"minPeriod\":\"hh\",\n    \"dashLength\": 1,\n    \"minorGridEnabled\": true\n  },\n  \"legend\": {\n    \"useGraphSettings\": true,\n    \"position\": \"top\"\n  },\n  \"balloon\": {\n     \"borderThickness\": 1,\n    \"shadowAlpha\": 0,\n    \"fontSize\": 11,\n    \"verticalPadding\":0,\n    \"maxWidth\":10000\n  },\n  \"export\": {\n   \"enabled\": false\n  },\n  \"dataProvider\":chartDataProvider\n});\n}"
                            }
                        }
                    }
                },
                "tab": "2cb20973-9524-43cc-86ef-dd3c9c1678ae",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5f18d6f9-69f1-4c2d-b328-3bbaa5fb21a9": {
                "externalScripts": [],
                "id": "5f18d6f9-69f1-4c2d-b328-3bbaa5fb21a9",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n  \u003cbutton onclick=\"exportTblcsv()\"  type=\"button\" class=\"btn btn-info\"\u003e Download CSV format\u003c/button\u003e\n   \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e name  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e description \u003c/b\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"7\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "53d33460-9251-45c1-8776-e7859bb1b6f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5ff68550-7216-4fac-a46a-56ff07a371be": {
                "externalScripts": [],
                "id": "5ff68550-7216-4fac-a46a-56ff07a371be",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "f1460a74-207c-430d-8fb1-23cd549ab1a0",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch3 id=\"my-asset-type-title\"\u003e\n\u003c/h3\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-asset\" class=\"btn btn-link\"\u003eAdd Asset\u003c/div\u003e`\nconst isSelected = this.datasource \u0026\u0026 this.datasource !== 'none'\n$(\"#my-asset-type-title\").html(isSelected ? `Update Asset Type ${button}` : `Add Asset Type`)\n\nif(!window.hasAddedAssetTitleListeners) {\n    window.hasAddedAssetTitleListeners = true\n    $('body').on('click', '#switch-to-add-asset', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentAssetTypeId.sendData('none')\n    })\n}"
                            }
                        }
                    }
                },
                "tab": "6ecf5506-8176-46d7-8329-1b33698a5985",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "60dadbb4-5fed-4c2d-8ea1-5c5a970f667a": {
                "externalScripts": [],
                "id": "60dadbb4-5fed-4c2d-8ea1-5c5a970f667a",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "b9bf10ac-2171-4db2-bdec-e7150cf22b88",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"text-center filter-alert-history\"\u003e\n  \u003cspan\u003eFiltered by \u003cb id=\"alert-config-filter\"\u003e\u003c/b\u003e\u003c/span\u003e\n  \u003cbutton class=\"btn btn-primary clear-alert-config-filter\"\u003eClear\u003c/button\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\nconst wordsFromOp = {\n  GT: 'is above',\n  LT: 'is below',\n  EQ: 'is exactly',\n};\n\n\nif (!this.datasource || this.datasource === 'none') {\n    $(\".filter-alert-history\").hide()\n} else {\n    $(\".filter-alert-history\").show()\n    const alertConfig = datasources.getAlertConfigurations.latestData().results.payload.DATA.find(a =\u003e a.item_id === this.datasource)\n\n    $(\"#alert-config-filter\").html(alertConfig ? alertConfig.name + `\u003cdiv class=\"text-muted\"\u003e${AlertConfigSummary(alertConfig)}\u003c/div\u003e` : '')\n\n    if (!window.firstSetupFilterAlertHistory) {\n        window.firstSetupFilterAlertHistory = true\n        $(\"body\").on('click', '.clear-alert-config-filter', () =\u003e { datasources.currentAlertConfigId.sendData('none') })\n        $(\"body\").on('click', '.ReactTable a', e =\u003e e.preventDefault())\n        // fix for \"View\" link redirecting to home page\n    }\n}\n\nfunction AlertConfigSummary(alertConfig) {\n    const rules = tryParse(alertConfig.rules)\n    let text = rules \u0026\u0026 rules.map((rule) =\u003e RuleSummary(rule)).join(' and ')\n    if(alertConfig.timeout) {\n        text = text + ` for ${alertConfig.timeout} minutes`\n    }\n    return text\n}\n\nfunction RuleSummary(rule = {}) {\n    const sensor = datasources.getSensors.latestData().results.payload.DATA.find((s) =\u003e s.sensor_id === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.payload.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n\n    const propertyStr = rule.property === 'battery_level' ? 'Battery' : sensorType.display_name\n    const operatorStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? wordsFromOp[rule.operator] : ''\n    const valueStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? rule.value : (rule.value ? 'is open' : 'is closed')\n    const attributeStr = rule.property === 'battery_level' ? 'percent' : sensorType.attributes\n    return `\"${sensor.sensor_label}\" ${propertyStr \u0026\u0026 propertyStr.toLowerCase()} ${operatorStr} ${valueStr} ${attributeStr \u0026\u0026 attributeStr.toLowerCase()}`\n}\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        console.warn(e, str)\n    }\n}"
                            }
                        }
                    }
                },
                "tab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "696e4a0e-7ffd-4fbf-9237-f29cadc4652a": {
                "externalScripts": [],
                "id": "696e4a0e-7ffd-4fbf-9237-f29cadc4652a",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "brushHeight": 40,
                    "brushStroke": "#6e8592",
                    "chartData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "fb95de32-504c-4393-bcec-5ee0cb5b580c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const legendTypes = [\n    'line',\n    'square',\n    'circle',\n    'cross',\n    'diamond',\n    'star',\n    'triangle',\n    'wye',\n    'rect',\n]\n\nconst getLabelForSensor = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id === sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\n\ntry {\n    const results = this.datasource.results.payload;\n    const sample = results[results.length - 1];\n    const nonSensorKeys = ['timestamp'];\n    const sensors = Object.keys(sample).filter((k) =\u003e {\n        return nonSensorKeys.indexOf(k) === -1;\n    })\n    const defaultYAxis = { \"orientation\": \"left\", \"paddingTop\": 0, \"paddingBottom\": 0, \"showStandardDeviations\": false, \"numberStandardDeviations\": 2, \"standardDeviationLabel\": \"σ\", \"lowerBound\": 0, \"autoBounds\": false, \"dataKey\": \"\", \"upperBound\": 80 }\n    const defaultLine = { \"type\": \"monotone\", \"legendType\": \"star\", \"dataKey\": \"385259\" }\n    console.log('sense', sensors);\n    const currentSettings = this.model.settings();\n    console.log('hey', currentSettings)\n    const newSettings = {\n        ...currentSettings,\n        // yAxes: sensors.map((s) =\u003e ({\n        //     ...defaultYAxis,\n        //     dataKey: s,\n        // })),\n        yAxes: [defaultYAxis],\n        lines: sensors.map((s, idx) =\u003e {\n            let name = getLabelForSensor(s);\n            if (name !== s) {\n                name = `${name} (${s})`\n            }\n            return {\n                ...defaultLine,\n                legendType: legendTypes[idx] ? legendTypes[idx] : legendTypes[0],\n                dataKey: s,\n                name,\n            }\n        })\n    }\n    console.log('new sett', newSettings);\n    this.model.settings(newSettings);\n    return results;\n} catch (e) {\n    console.error('Error in line chart', e);\n}\nreturn []"
                        }
                    },
                    "chartMarginBottom": 0,
                    "chartMarginLeft": 0,
                    "chartMarginRight": 0,
                    "chartMarginTop": 0,
                    "detectionStrictness": 2,
                    "enableStatisticsView": false,
                    "legendColor": "#000000",
                    "legendHorizontalAlign": "center",
                    "legendLayout": "horizontal",
                    "legendVerticalAlign": "bottom",
                    "lineColors": [
                        {
                            "stroke": "#6E8592"
                        },
                        {
                            "stroke": "#6E93A8"
                        },
                        {
                            "stroke": "#DBA5A8"
                        },
                        {
                            "stroke": "#E8E7C6"
                        }
                    ],
                    "lines": [
                        {
                            "dataKey": "435094",
                            "legendType": "line",
                            "name": "Food Probe (New) (435094)",
                            "type": "monotone"
                        }
                    ],
                    "referenceLines": [],
                    "showBrush": false,
                    "showDots": false,
                    "showGrid": true,
                    "showHorizontalGrid": true,
                    "showLegend": true,
                    "showTooltip": true,
                    "showVerticalGrid": true,
                    "timeformat": "MMM D, h:mm a",
                    "xAxisDataKey": "timestamp",
                    "xAxisOrientation": "bottom",
                    "xAxisPaddingLeft": 0,
                    "xAxisPaddingRight": 0,
                    "xType": "category",
                    "yAxes": [
                        {
                            "autoBounds": false,
                            "dataKey": "",
                            "lowerBound": 0,
                            "numberStandardDeviations": 2,
                            "orientation": "left",
                            "paddingBottom": 0,
                            "paddingTop": 0,
                            "showStandardDeviations": false,
                            "standardDeviationLabel": "σ",
                            "upperBound": 80
                        }
                    ]
                },
                "tab": "2cb20973-9524-43cc-86ef-dd3c9c1678ae",
                "type": "LINE_CHART_WIDGET_COMPONENT"
            },
            "6da43492-42c8-48cc-8e2d-2a580302b3a5": {
                "externalScripts": [],
                "id": "6da43492-42c8-48cc-8e2d-2a580302b3a5",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "#map {\n    height: 100%;\n}\n\n.marker {\n   content:url(\"http://www.clker.com/cliparts/W/0/g/a/W/E/map-pin-red.svg\");\n  width: 2%;\n  height: 3%;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.fail {\n  /* background-color: red; */\n}\n\n.pass {\n  /* background-color: green; */\n}",
                            "HTML": "\u003cdiv id=\"map\"\u003e\n  \n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n\nlet map;\nconst markers = [];\nconst handleLocationUpdate = (data) =\u003e {\n    const locs = data.results.payload.DATA;\n    markers.forEach((m) =\u003e {\n        m.remove(map);\n    })\n     \n    locs.forEach((l) =\u003e {\n       \n        datasources.getSensorsByLocationIdForMap.sendData({\n            location_id: l.item_id\n        }).then((data) =\u003e {\n              console.log(JSON.stringify(data));\n            const doSensorsCrossThreshold = window.doAnySensorsCrossThreshold(data.results.payload.DATA);\n           console.log(doSensorsCrossThreshold);\n            const lng = l.long;\n            const lat = l.lat;\n            const popupContents = $('\u003cdiv\u003e\u003c/div\u003e');\n            const popupHeader = $('\u003ch6\u003e\u003c/h6\u003e');\n            const popupInfo = $('\u003cspan\u003e\u003c/span\u003e');\n            const sensorInfo= $('\u003ctable border=\"1\"\u003e\u003c/table\u003e');\n            const sthead='\u003cthead\u003e\u003ctr\u003e\u003ctd\u003eSensor label\u003c/td\u003e\u003ctd\u003eLatest Value\u003c/td\u003e\u003ctd\u003eLast_active\u003c/td\u003e\u003c/tr\u003e\u003c/thead\u003e';\n            const stbody=$('\u003ctbody\u003e\u003c/tbody\u003e');\n            let slist=data.results.payload.DATA;\n            for(i=0;i\u003cslist.length;i++)\n            {\n                var strow='\u003ctr\u003e\u003ctd\u003e'+slist[i].sensor_label+'\u003c/td\u003e\u003ctd\u003e'+slist[i].latest_payload+'\u003c/td\u003e\u003ctd\u003e'+(new Date(slist[i].last_active)).toLocaleString()+'\u003c/td\u003e\u003c/tr\u003e';\n            stbody.append(strow);\n            }\n            sensorInfo.append(sthead);\n            sensorInfo.append(stbody);\n\n            popupHeader.text(l.name);\n            popupInfo.text(`${lat}, ${lng}`)\n            popupContents.append(popupHeader);\n            popupContents.append(popupInfo);\n            popupContents.append(sensorInfo);\n            const popup = new mapboxgl.Popup({})\n                .setHTML(popupContents.html());\n            const el = $('\u003cdiv\u003e\u003c/div\u003e');\n            el.addClass('marker');\n            if (doSensorsCrossThreshold) {\n                el.addClass('pass');\n            } else {\n                el.addClass('fail');\n            }\n            el.on('click', () =\u003e {\n                $('#asset-list div').filter(function () { return $(this).text() === l.name }).next().find('button').first().click()\n            })\n            const m = new mapboxgl.Marker(el[0])\n                .setLngLat([lng, lat])\n                .addTo(map)\n                .setPopup(popup);\n            markers.push(m);\n        })\n    })\n}\n\n// if (!window.hasSubscribedToLocations) {\n//     window.hasSubscribedToLocations = true;\n\nwindow.tryAgain(() =\u003e typeof mapboxgl !== 'undefined', () =\u003e {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiY2xhcmtieW51bSIsImEiOiJjam1jNHdoMmowN20xM3FudnlnMmkwdHNsIn0.RRhMEBuvH3bNxisPogwLHg';\n    map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v9',\n        zoom: 3,\n        center: [-97.420679, 37.772537],\n    });\n    if (datasources.getLocations.lastUpdated) {\n        handleLocationUpdate(datasources.getLocations.latestData())\n    }\n    datasources.getLocations.latestData.subscribe(handleLocationUpdate)\n}, 2000, 5)\n// }\n\n$('#map').parent().height('100%')"
                        }
                    }
                },
                "tab": "9e61758a-f253-4e49-b8ee-47fd670c7217",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "7128415c-8661-43c2-85d2-afff082131ee": {
                "externalScripts": [],
                "id": "7128415c-8661-43c2-85d2-afff082131ee",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "bd48c4e7-a180-4624-b1d0-9d5fd166f1de",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "#table table-striped thead{\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n}\n#asset-list{\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; \n}",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eZones\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eZone Name\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eLocation\u003c/th\u003e\n      \u003cth scope=\"col\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"zone-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "console.log(\"this is in datasource\",JSON.stringify(this.datasource));\nif (!this.datasource.getZones) return\nconst listItems = this.datasource.getZones.results.payload.DATA\n// const listItems = this.datasource.getZones.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n   // const asset = datasources.getAssetTypes.latestData() \u0026\u0026 datasources.getAssetTypes.latestData().results.payload.DATA.find(d =\u003e d.item_id == data.asset_type_id)\n    const location = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.find(d =\u003e d.item_id == data.location_id)\n    const selected = this.datasource.currentZoneId === data.item_id\n    // console.log(asset);\n   // console.log(asset.name, selected)\n    return `\n    \u003ctr class=\"zone-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e${data.name}\u003c/td\u003e\n      \u003ctd\u003e${location ? `\u003cbutton class=\"btn p-0 btn-link location-link\" data-item-id=${location.item_id}\u003e${location.name}\u003c/button\u003e` : ''}      \n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-zone\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  \n  }).join('')\n\n$(\"#zone-list\").html(listItems)\n\nif (!window.hasSetupZoneListListeners) {\n  window.hasSetupZoneListListeners = true\n  $(\"#zone-list\").html(listItems)\n  $(\"body\").on('click', '.delete-zone', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this zone?')) {\n      datasources.deleteZone.sendData({ zone_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getZones.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.zone-item', ({ currentTarget }) =\u003e {\n    datasources.currentZoneId.sendData(currentTarget.dataset.itemId)\n  })\n\n  $(\"body\").on('click', '.location-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/locations`)\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "72cd5295-ba86-4328-b742-f71f55ffe3c6": {
                "externalScripts": [],
                "id": "72cd5295-ba86-4328-b742-f71f55ffe3c6",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {
                        "endDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "637c5b4c-3329-4c43-a79c-ef709befb2ff",
                            "label": "End Date",
                            "name": "endDate",
                            "orderIdx": 2
                        },
                        "startDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "4e7c5777-65df-4379-822b-2e59158311f0",
                            "label": "Start Date",
                            "name": "startDate",
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "288123fb-9434-4b9a-a38c-2a03ba5ef522",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "console.log('incoming', this.datasource);\r\nreturn {data: this.datasource};"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "2560592c-10df-4175-b26f-c9e3a2b1a89c",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "7765fb5b-888b-43e3-a2ef-304cb9f49b4d": {
                "externalScripts": [],
                "id": "7765fb5b-888b-43e3-a2ef-304cb9f49b4d",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eSensor Type\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"sensor-type-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getSensorTypes) return\n\nconst listItems = this.datasource.getSensorTypes.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    console.log(data)\n    const selected = this.datasource.currentSensorTypeId === data.item_id;\n    return `\n    \u003ctr class=\"sensor-type-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e\n      ${data.name}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-sensor-type\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#sensor-type-list\").html(listItems)\n\nif (!window.hasSetupSensorTypeListListeners) {\n  window.hasSetupSensorTypeListListeners = true\n  $(\"#sensor-type-list\").html(listItems)\n  $(\"body\").on('click', '.delete-sensor-type', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this sensor-type?')) {\n      debugger\n      datasources.deleteSensorType.sendData({ sensor_type_id: currentTarget.dataset.itemId }).then((res) =\u003e {\n        datasources.getSensorTypes.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.sensor-type-item', ({ currentTarget }) =\u003e {\n    datasources.currentSensorTypeId.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "776ae626-f425-4ea2-a2a5-fdd979c0d2ac": {
                "externalScripts": [],
                "id": "776ae626-f425-4ea2-a2a5-fdd979c0d2ac",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".underline {\n  text-decoration: underline;\n}\n#mulchartdiv1 {\n  width: 100%;\n  height:45vh;\n}\t\t\t\t\t\t\n.amcharts-chart-div a{\n\tdisplay:none !important;\n}\n",
                                "HTML": "\u003cdiv id=\"mulchartdiv1\"\u003e\u003c/div\u003e\t",
                                "JavaScript": "//JavaScript\nif(Object.keys(this.datasource.results.payload).length)\n{\nvar chartDataProvider=[];\nvar sResult=this.datasource.results.payload;\n// var sResult=this.datasource;\nconsole.log(\"the sresult value is \" +JSON.stringify(sResult));\nsResult.map((dataObj)=\u003e{\n  dataObj.timestamp=(new Date(dataObj.timestamp)).toLocaleString();\n  chartDataProvider.push(dataObj);\n});\nvar graphs=[];\nvar barSize=0.4;\nvar chartData=this.datasource.results.payload;\nconst getLabelForSensorID = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id == sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\n\n// if(chartData.length\u003e0)\n// {\nvar sampleObject=chartData[chartData.length-1];\n\nvar timestampkey=\"timestamp\";\nvar listOfSensors=Object.keys(sampleObject).filter((k) =\u003e {\n        return timestampkey.indexOf(k) === -1;\n    });\n    var lineColors=[\"#ff1a1a\",\"#00ff00\",\"#ED7913\",\"#ffff00\",\"#b3b300\"];\n    var Barcolors=[\"#5EA4E0\",\"#e0e0eb\",\"grey\",\"greenyellow\",\"#800000\"];\n    var bulletType=[\"round\",\"square\"];\n    var dscount=tcount=hcount=0;\n    var gcount=1;\n    listOfSensors.map((sid,idx)=\u003e{\n      if(sid.indexOf(\"_\") != -1)\n      {\n        if(sid.indexOf(\"_d\") != -1){\n        doorStatusgraph(sid,dscount,gcount);\n         dscount++;\n         gcount++;\n        barSize=barSize+0.3;\n        }else if(sid.indexOf(\"_0\") != -1)\n        {\n        humidityGraph(sid,tcount,gcount);\n        hcount++;\n        gcount++;\n        }\n        \n      }else{\n        temperatureGraph(sid,tcount,gcount);\n        tcount++;\n        gcount++;\n      }\n    });\n function temperatureGraph(sensorId,coloridx,graphidx){\n  graphs.push({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"bullet\": (coloridx/2)?\"round\":\"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": lineColors[coloridx],\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": getLabelForSensorID(sensorId),\n    \"valueField\": sensorId,\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n\n};\nfunction humidityGraph(sensorId,coloridx,graphidx){\n  graphs.push({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"bullet\": (coloridx/2)?\"round\":\"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": lineColors[coloridx],\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": getLabelForSensorID(sensorId.slice(0, -2)),\n    \"valueField\": sensorId,\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n\n};\nfunction doorStatusgraph(sensorId,coloridx,graphidx){\ngraphs.unshift({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"lineColor\": Barcolors[coloridx],\n    \"fillColors\": Barcolors[coloridx],\n    //#87cefa\n    \"fillAlphas\": 0.9,\n     \"lineAlpha\": 0.2,\n     \"clustered\": false,\n    \"columnWidth\": barSize,\n    \"type\": \"column\",\n    \"title\": getLabelForSensorID(sensorId.slice(0, -2)),\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": sensorId,\n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n \n  //alert(barSize);\n};\n\n//console.log(JSON.stringify(graphs));\n//console.log(\"Result123:\"+JSON.stringify(this.datasource.results.payload));\nvar chart1 = AmCharts.makeChart(\"mulchartdiv1\", {\n  \"type\": \"serial\",\n  \"theme\": \"light\",\n // \"dataDateFormat\": \"YYYY-MM-DD\",\n  \"precision\": 2,\n  \"valueAxes\": [\n  /* {\n    \"id\": \"v1\",\n    \"title\": \"Sales\",\n    \"position\": \"left\",\n    \"autoGridCount\": false,\n    \"labelFunction\": function(value) {\n      return \"$\" + Math.round(value) + \"M\";\n    }\n  }, */ {\n    \"id\": \"v1\",\n    \"title\": \"Reading\",\n    \"gridAlpha\": 0,\n    \"position\": \"left\",\n    \"autoGridCount\": false\n  }],\n  \"graphs\": \n  graphs,\n  /*[\n    {\n    \"id\": \"g2\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e0e0eb\",\n    \"fillColors\": \"#e0e0eb\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.7,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380139\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380139_0\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[category]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  },\n     {\n    \"id\": \"g1\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e1ede9\",\n    \"fillColors\": \"#003333\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.5,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380138\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380138_0\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  },{\n    \"id\": \"g3\",\n    \"valueAxis\": \"v1\",\n    \"bullet\": \"round\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": \"#00ffff\",\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-425070\",\n    \"valueField\": \"425070\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  }, {\n    \"id\": \"g4\",\n    \"valueAxis\": \"v1\",\n    \"lineThickness\": 2,\n    \"bullet\": \"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineColor\": \"#ff5755\",\n   // #ff5755\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-426643\",\n    \"valueField\": \"426643\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  }],*/\n  \"chartScrollbar\": {\n   // \"graph\": \"g4\",\n    \"oppositeAxis\": false,\n    \"offset\": 30,\n    \"scrollbarHeight\": 20,\n    \"backgroundAlpha\": 0,\n    \"selectedBackgroundAlpha\": 0.1,\n    \"selectedBackgroundColor\": \"#888888\",\n    \"graphFillAlpha\": 0,\n    \"graphLineAlpha\": 0.5,\n    \"selectedGraphFillAlpha\": 0,\n    \"selectedGraphLineAlpha\": 1,\n    \"autoGridCount\": true,\n    \"color\": \"#AAAAAA\"\n  },\n  \"chartCursor\": {\n    \"pan\": true,\n    \"valueLineEnabled\": true,\n    \"valueLineBalloonEnabled\": true,\n    \"cursorAlpha\": 0,\n    \"valueLineAlpha\": 0.2\n  },\n  \"categoryField\": \"timestamp\",\n  \"categoryAxis\": {\n    \"parseDates\": true,\n    \"minPeriod\":\"hh\",\n    \"dashLength\": 1,\n    \"minorGridEnabled\": true\n  },\n  \"legend\": {\n    \"useGraphSettings\": true,\n    \"position\": \"top\"\n  },\n  \"balloon\": {\n    \"borderThickness\": 1,\n    \"shadowAlpha\": 0,\n    \"fontSize\": 11,\n    \"verticalPadding\":0,\n    \"maxWidth\":10000\n  },\n  \"export\": {\n   \"enabled\": false\n  },\n  \"dataProvider\":chartDataProvider\n // \"dataProvider\":this.datasource.results.payload\n});\n}"
                            }
                        }
                    }
                },
                "tab": "2560592c-10df-4175-b26f-c9e3a2b1a89c",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "7774ae14-4132-42c7-bbf0-6a4b458a8b55": {
                "externalScripts": [],
                "id": "7774ae14-4132-42c7-bbf0-6a4b458a8b55",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "e189ae14-4d5d-4bd3-b370-b270b1e4dab7",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".full-alert-item:hover {\n    background-color: aliceblue !important;\n    cursor: pointer;\n}\n\nth.enabled-col {\n    width: 7em;\n}\n\nlabel {\n    margin-bottom: 0;\n}\n\n.rule:first-child .and-div {\n    display: none;\n}\n\n.settings-col {\n    width: 7rem;\n}\n\n/* .selected-alert-config {\n    font-weight: bold;\n} */",
                                "HTML": "\u003ch2\u003e\u003c/h2\u003e\n\n\u003cbutton type=\"button\" id=\"new-rule-btn\" class=\"btn btn-primary\" style=\"float:right\" data-toggle=\"modal\" data-target=\"#createRuleModal\" \u003e + New\u003c/button\u003e\n\u003cbr\u003e\n\u003cbr\u003e\n\u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eAlert Name\u003c/th\u003e\n      \u003cth scope=\"col\" class=\"enabled-col\"\u003eSettings\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"alert-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003c/div\u003e",
                                "JavaScript": "const listItems = this.datasource.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    return `\n    \u003ctr class=\"full-alert-item ${datasources.currentAlertConfigId.latestData() === data.item_id ? 'selected-alert-config' : ''}\"\u003e\n      \u003ctd class=\"alert-list-item\" data-item-id=\"${data.item_id}\"\u003e${data.name}\u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check settings-col\"\u003e\n          \u003cinput type=\"checkbox\" class=\"form-check-input enabled-check\" data-item-id=\"${data.item_id}\" ${data.disabled ? '' : 'checked'}\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 edit-alert\" data-toggle=\"modal\" data-target=\"#createRuleModal\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-pen\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-alert\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$('#alert-list').html(listItems)\n\nfunction updateAlertConfigs() {\n  datasources.getAlertConfigurations.sendData()\n}\n\n// window.addEventListener('popstate', function(e) {\n//   if(location.hash === '#/AlertConfig') {\n//     window.hasSetupAlertListeners = false;\n//   }\n// });\n\nif (!window.hasSetupAlertListeners) {\n  if ($('#alert-list').length \u003e 0) {\n    window.hasSetupAlertListeners = true\n  }\n\n  function TimeoutDiv(timeout) {\n    return `\u003cdiv\u003e\n        \u003cdiv class=\"input-group mb-2\"\u003e\n          \u003cdiv class=\"input-group-prepend\"\u003e\n            \u003cdiv class=\"input-group-text\"\u003eRule broken for\u003c/div\u003e\n          \u003c/div\u003e\n          \u003cinput type=\"number\" class=\"form-control\" id=\"timeout-minutes\" value=\"${timeout}\"\u003e\n          \u003cdiv class=\"input-group-append\"\u003e\n            \u003cdiv class=\"input-group-text\"\u003eminutes before alert\u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e`\n  }\n  const AndDiv = `\u003cdiv class=\"text-center text-muted mb-1 and-div\"\u003eAND\u003c/div\u003e`\n  const wordsFromOp = {\n    GT: 'is above',\n    LT: 'is below',\n    EQ: 'is exactly',\n  };\n  function PropertyDiv(rule, sensorType) {\n    return `\n      \u003cdiv class=\"input-group-prepend\"\u003e\n              \u003cselect class=\"custom-select\" id=\"property\"\u003e\n                \u003coption value=\"sensor_reading\" ${'sensor_reading' === rule.property ? 'selected' : ''}\u003e${sensorType.display_name}\u003c/option\u003e\n                \u003coption value=\"battery_level\" ${'battery_level' === rule.property ? 'selected' : ''}\u003eBattery\u003c/option\u003e\n              \u003c/select\u003e\n      \u003c/div\u003e\n  `\n  }\n  // -- SensorRuleDiv --\n  function SensorRuleDiv(rule = {}) {\n    if (!rule.sensor_id) {\n      return `\u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\" /\u003e`\n    }\n    const sensor = datasources.getSensors.latestData().results.payload.DATA.find((s) =\u003e s.sensor_id === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.payload.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n    if (rule.property === 'battery_level') {\n      return `\n    \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n      \u003cdiv class=\"input-group-prepend\"\u003e\n        ${PropertyDiv(rule, sensorType)}\n      \u003c/div\u003e\n\n      \u003cselect class=\"custom-select d-none\" id=\"operator\"\u003e\n          \u003coption value=\"LT\" selected\u003eis below\u003c/option\u003e\n      \u003c/select\u003e\n\n      \u003cdiv class=\"input-group-append\"\u003e\n        \u003cdiv class=\"input-group-text\"\u003eis below\u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cinput type=\"number\" class=\"form-control\" id=\"value\" value=\"${rule.value}\"\u003e\n\n      \u003cdiv class=\"input-group-append\"\u003e\n        \u003cdiv class=\"input-group-text\"\u003epercent\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e`\n    }\n    if (sensorType.data_type === 'int') {\n      return `\n      \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n        \u003cdiv class=\"input-group-prepend\"\u003e\n          ${PropertyDiv(rule, sensorType)}\n        \u003c/div\u003e\n\n        \u003cselect class=\"custom-select\" id=\"operator\"\u003e\n          ${Object.keys(wordsFromOp).map(op =\u003e (\n          `\u003coption value=\"${op}\" ${op === rule.operator ? 'selected' : ''}\u003e${wordsFromOp[op]}\u003c/option\u003e`\n        ))}\n        \u003c/select\u003e\n\n        \u003cinput type=\"number\" class=\"form-control\" id=\"value\" value=\"${rule.value}\"\u003e\n\n        \u003cdiv class=\"input-group-append\"\u003e\n          \u003cdiv class=\"input-group-text\"\u003e${sensorType.attributes}\u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e`\n    } else {\n      return `\n      \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n        \u003cdiv class=\"input-group-prepend\"\u003e\n          ${PropertyDiv(rule, sensorType)}\n        \u003c/div\u003e\n\n        \u003cselect class=\"custom-select\" id=\"value\"\u003e\n          \u003coption value=\"true\" ${rule.value === true ? 'selected' : ''}\u003eis open\u003c/option\u003e\n          \u003coption value=\"false\" ${rule.value === false ? 'selected' : ''}\u003eis closed\u003c/option\u003e\n        \u003c/select\u003e\n\n        \u003cinput class=\"d-none\" id=\"operator\" value=\"EQ\"\u003e\n      \u003c/div\u003e`\n    }\n  }\n  // --- RULE DIV ---\n  function RuleDiv(rule = {}) {\n    const sensor = datasources.getSensors.latestData().results.payload.DATA.find((s) =\u003e s.sensor_id === rule.sensor_id) || {}\n    let sensorOptions = datasources.getSensors.latestData().results.payload.DATA\n    if (window.asset_id) {\n      sensorOptions = sensorOptions.filter(s =\u003e s.asset_id === window.asset_id)\n    }\n    return `\n\u003cdiv class=\"rule\"\u003e\n  ${AndDiv}\n  \u003cdiv class=\"input-group\"\u003e\n    \u003cselect class=\"custom-select\" id=\"sensor\"\u003e\n      \u003coption selected\u003echoose sensor...\u003c/option\u003e\n      ${sensorOptions.map((s) =\u003e (\n        `\u003coption value=\"${s.sensor_id}\" ${s.sensor_id === rule.sensor_id ? 'selected' : ''}\u003e${s.sensor_label || s.sensor_name}\u003c/option\u003e`\n      ))}\n    \u003c/select\u003e\n    \u003cdiv class=\"input-group-append\"\u003e\n      \u003cdiv class=\"delete-alert-rule input-group-text\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  ${SensorRuleDiv(rule)}\n\u003c/div\u003e\n`\n  }\n  function AssetsSelect(asset_id = '') {\n    return `\n    \u003cselect class=\"form-control\" id=\"asset-id\"\u003e\n      \u003coption value=\"\"\u003e-- select --\u003c/option\u003e\n      ${datasources.getAssets.latestData().results.payload.DATA.map((a) =\u003e (\n        `\u003coption value=\"${a.item_id}\" ${a.item_id === asset_id ? 'selected' : ''}\u003e${a.name}\u003c/option\u003e`\n      )).join('')}\n    \u003c/select\u003e`\n  }\n  // --- FORM DIV ---\n  function FormDiv({ location = '', message = '', timeout = 0, asset_id = '', contacts = [], contact_method = '', name = '', priority = '', rules = [], item_id = '' } = {}) {\n    console.log({ location, contacts, contact_method, rules })\n    return `\n\u003cform\u003e\n\u003cdiv class=\"row\"\u003e\n  \u003cinput class=\"d-none\" id=\"item-id\" value=\"${item_id}\"\u003e\n\n  \u003cdiv class=\"form-group col-sm-6\"\u003e\n    \u003clabel for=\"name\"\u003eName\u003c/label\u003e\n    \u003cinput class=\"form-control\" id=\"name\" value=\"${name}\" aria-describedby=\"assetId\"\u003e\n  \u003c/div\u003e\n\n  \u003cdiv class=\"form-group col-sm-6\"\u003e\n    \u003clabel for=\"priority\"\u003ePriority\u003c/label\u003e\n    \u003cselect class=\"custom-select\" id=\"priority\"\u003e\n      \u003coption value=\"low\" ${priority === \"low\" ? 'selected' : ''}\u003eLow\u003c/option\u003e\n      \u003coption value=\"medium\" ${priority === \"medium\" ? 'selected' : ''}\u003eMedium\u003c/option\u003e\n      \u003coption value=\"high\" ${priority === \"high\" ? 'selected' : ''}\u003eHigh\u003c/option\u003e\n    \u003c/select\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003chr /\u003e\n\n\u003cdiv class=\"row\"\u003e\n  \u003cdiv class=\"form-group col-sm-6\"\u003e\n    \u003clabel for=\"location\"\u003eLocation\u003c/label\u003e\n      \u003cselect class=\"form-control\" id=\"location\"\u003e\n        \u003coption\u003e-- select --\u003c/option\u003e\n        ${datasources.getLocations.latestData().results.payload.DATA.map((loc) =\u003e (\n        `\u003coption value=\"${loc.item_id}\" ${loc.item_id === location ? 'selected' : ''}\u003e${loc.name}\u003c/option\u003e`\n      )).join('')}\n      \u003c/select\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"form-group col-sm-6\"\u003e\n    \u003clabel for=\"asset-id\"\u003eAsset\u003c/label\u003e\n    ${AssetsSelect(asset_id)}\n  \u003c/div\u003e\n  \n\u003c/div\u003e\n\n  \u003cdiv class=\"rules\"\u003e\n    ${rules.length === 0 ? RuleDiv() : rules.map(rule =\u003e RuleDiv(rule)).join('')}\n  \u003c/div\u003e\n\n  \u003cbutton type=\"button\" id=\"add-rule-btn\" class=\"btn btn-secondary my-3\"\u003e+ Add rule\u003c/button\u003e\n  ${TimeoutDiv(timeout)}  \n\n  \u003chr/\u003e\n\n  \u003cdiv class=\"form-group\"\u003e\n  \u003csmall class=\"form-text text-muted\"\u003eControl click to select multiple recipients\u003c/small\u003e\n    \u003cselect multiple class=\"form-control\" id=\"contacts\"\u003e\n      ${datasources.getEmployees.latestData().results.payload.map((contact) =\u003e (\n        `\u003coption value=\"${contact.email}\" ${contacts.includes(contact.email) ? 'selected' : ''}\u003e${contact.first_name} ${contact.last_name}\u003c/option\u003e`\n      )).join('')}\n    \u003c/select\u003e\n  \u003c/div\u003e\n  \n  \u003cdiv class=\"form-group mt-2\"\u003e\n    \u003clabel for=\"message\"\u003eMessage\u003c/label\u003e\n    \u003ctextarea class=\"form-control\" id=\"message\" rows=\"3\"\u003e${message}\u003c/textarea\u003e\n  \u003c/div\u003e\n\n\u003c/form\u003e\n    `\n  }\n\n  // -- ALERT LIST CLICKS --\n\n  $(\"body\").on('click', '.edit-alert', ({ currentTarget }) =\u003e {\n    const data_id = currentTarget.dataset.itemId\n    const alert = datasources.getAlertConfigurations.latestData().results.payload.DATA.find((data) =\u003e data.item_id === data_id)\n    alert.contacts = tryParse(alert.contacts) || []\n    alert.rules = tryParse(alert.rules) || []\n    $('#alert-settings-title').html('Edit Alert')\n    $('#submit-btn').html('Update')\n    $('#submit-btn').data({ isEdit: true })\n    $(\"#alert-settings\").html(() =\u003e {\n      return `\u003cdiv\u003e${FormDiv(alert)}\u003c/div\u003e`\n    })\n  })\n\n  $(\"body\").on('click', '.alert-list-item', ({ target }) =\u003e {\n    var the_configjson = {};\n    datasources.currentAlertConfigId.sendData(target.dataset.itemId);\n    console.log(target.dataset.itemId);\nthe_configjson.configuration_id =target.dataset.itemId;\ndatasources.getAlertHistory.sendData(the_configjson);\n     console.log(\"on clicking function \"+JSON.stringify(datasources.currentAlertConfigId.latestData()));\n  })\n\n  $(\"body\").on('click', '.delete-alert', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this rule?')) {\n      datasources.deleteAlertConfiguration.sendData({ item_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        updateAlertConfigs()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.enabled-check', ({ target }) =\u003e {\n    datasources.updateAlertConfiguration.sendData(\n      {\n        item_id: target.dataset.itemId,\n        alertConfiguration: { disabled: !!$(target).attr(\"checked\") }\n      },\n    ).then(() =\u003e updateAlertConfigs())\n  })\n\n  $('body').on('click', '#new-rule-btn', () =\u003e {\n    $('#alert-settings-title').html(() =\u003e \"New Alert\")\n    $('#submit-btn').html('Create')\n    $(\"#alert-settings\").html(() =\u003e {\n      return FormDiv()\n    })\n  })\n\n\n  // -- FORM CLICKS --\n\n  $('.modal-body').on('click', '#add-rule-btn', (e) =\u003e {\n    $(\".rules\").append(`\n    ${RuleDiv()}`)\n  })\n\n  $('.modal-body').on('click', '.delete-alert-rule', (e) =\u003e {\n    e.currentTarget.parentElement.parentElement.parentElement.remove()\n  })\n\n  $('.modal-body').on('change', '#location', (e) =\u003e {\n    const location_id = $(e.target).val();\n    datasources.getSensors.sendData({ location_id, customer_id: datasources.currentCustomer.latestData().item_id }).then(({ results }) =\u003e {\n      $(\".rules\").html(RuleDiv())\n    })\n\n    datasources.getAssets.sendData({ location_id }).then(({ results }) =\u003e {\n      $('#asset-id').html(AssetsSelect())\n    })\n  })\n\n  $('.modal-body').on('change', '#asset-id', (e) =\u003e {\n    window.asset_id = $(e.target).val();\n    $(\".rules\").html(RuleDiv());\n  })\n\n  $('.modal-body').on('change', '#sensor', (e) =\u003e {\n    const sensor_id = $(e.target).val();\n    $(e.target.parentElement.parentElement).find('#sensor-rule').replaceWith(SensorRuleDiv({ sensor_id }))\n  })\n\n  $('.modal-body').on('change', '#property', (e) =\u003e {\n    const property = $(e.target).val();\n    const ruleDiv = $(e.target.parentElement.parentElement.parentElement.parentElement)\n    const sensor_id = ruleDiv.find('#sensor').val()\n    ruleDiv.find('#sensor-rule').replaceWith(SensorRuleDiv({ sensor_id, property }))\n  })\n\n  // -- SUBMIT HANDLER --\n  $('.modal-footer').on('click', '#submit-btn', (e) =\u003e {\n    e.preventDefault();\n    const customer_id = datasources.currentCustomer.latestData().item_id\n\n    const rulesList = []\n    $(\".rule\").each((i, cond) =\u003e {\n      const $cond = $(cond)\n      const condObject = {\n        sensor_id: $cond.find(\"#sensor\").val(),\n        operator: $cond.find(\"#operator\").val(),\n        value: $cond.find(\"#value\").val(),\n        property: $cond.find(\"#property\").val(),\n      }\n      rulesList.push(condObject)\n    })\n\n    const alertConfiguration = {\n      // location: $(\"#location\").val(),\n      // assetId: $(\"#asset-id\").val(),\n      customer_id,\n      contacts: JSON.stringify($(\"#contacts\").val()),\n      message: $(\"#message\").val(),\n      priority: $(\"#priority\").val(),\n      name: $(\"#name\").val(),\n      timeout: $(\"#timeout-minutes\").val(),\n      // contact_method: $(\"input[name='contactMethod']:checked\").val(),\n      rules: JSON.stringify(rulesList),\n    }\n\n    if (e.target.textContent === 'Update') {\n      datasources.updateAlertConfiguration.sendData({ item_id: $(\"#item-id\").val(), alertConfiguration }).then(() =\u003e {\n        updateAlertConfigs()\n      })\n    } else {\n      datasources.createAlertConfiguration.sendData({ alertConfiguration }).then(() =\u003e {\n        updateAlertConfigs()\n      })\n    }\n  })\n\n}\n\nfunction tryParse(str) {\n  if (typeof str !== 'string') {\n    return str\n  }\n  try {\n    return JSON.parse(str)\n  } catch (e) {\n    console.log(str)\n    console.warn(e)\n  }\n}\n"
                            }
                        }
                    }
                },
                "tab": "bd2c6ee7-140b-4a67-93c8-f86d05d4708c",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "77759f8e-dcbd-44e7-ac97-1129c8d39190": {
                "externalScripts": [],
                "id": "77759f8e-dcbd-44e7-ac97-1129c8d39190",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".underline {\n  text-decoration: underline;\n}\n#mulchartdiv1 {\n  width: 100%;\n  height:45vh;\n}\t\t\t\t\t\t\n.amcharts-chart-div a{\n\tdisplay:none !important;\n}\n",
                                "HTML": "\u003cdiv id=\"mulchartdiv1\"\u003e\u003c/div\u003e\t",
                                "JavaScript": "//JavaScript\nif(Object.keys(this.datasource.results.payload).length)\n{\nvar chartDataProvider=[];\nvar sResult=this.datasource.results.payload;\n// var sResult=this.datasource;\nconsole.log(\"the sresult value is \" +JSON.stringify(sResult));\nsResult.map((dataObj)=\u003e{\n  dataObj.timestamp=(new Date(dataObj.timestamp)).toLocaleString();\n  chartDataProvider.push(dataObj);\n});\nvar graphs=[];\nvar barSize=0.4;\nvar chartData=this.datasource.results.payload;\nconst getLabelForSensorID = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id == sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\n\n// if(chartData.length\u003e0)\n// {\nvar sampleObject=chartData[chartData.length-1];\n\nvar timestampkey=\"timestamp\";\nvar listOfSensors=Object.keys(sampleObject).filter((k) =\u003e {\n        return timestampkey.indexOf(k) === -1;\n    });\n    var lineColors=[\"#ff1a1a\",\"#00ff00\",\"#ED7913\",\"#ffff00\",\"#b3b300\"];\n    var Barcolors=[\"#5EA4E0\",\"#e0e0eb\",\"grey\",\"greenyellow\",\"#800000\"];\n    var bulletType=[\"round\",\"square\"];\n    var dscount=tcount=hcount=0;\n    var gcount=1;\n    listOfSensors.map((sid,idx)=\u003e{\n      if(sid.indexOf(\"_\") != -1)\n      {\n        if(sid.indexOf(\"_d\") != -1){\n        doorStatusgraph(sid,dscount,gcount);\n         dscount++;\n         gcount++;\n        barSize=barSize+0.3;\n        }else if(sid.indexOf(\"_0\") != -1)\n        {\n        humidityGraph(sid,tcount,gcount);\n        hcount++;\n        gcount++;\n        }\n        \n      }else{\n        temperatureGraph(sid,tcount,gcount);\n        tcount++;\n        gcount++;\n      }\n    });\n function temperatureGraph(sensorId,coloridx,graphidx){\n  graphs.push({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"bullet\": (coloridx/2)?\"round\":\"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": lineColors[coloridx],\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": getLabelForSensorID(sensorId),\n    \"valueField\": sensorId,\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n\n};\nfunction humidityGraph(sensorId,coloridx,graphidx){\n  graphs.push({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"bullet\": (coloridx/2)?\"round\":\"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": lineColors[coloridx],\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": getLabelForSensorID(sensorId.slice(0, -2)),\n    \"valueField\": sensorId,\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n\n};\nfunction doorStatusgraph(sensorId,coloridx,graphidx){\ngraphs.unshift({\n    \"id\": \"g\"+graphidx,\n    \"valueAxis\": \"v1\",\n    \"lineColor\": Barcolors[coloridx],\n    \"fillColors\": Barcolors[coloridx],\n    //#87cefa\n    \"fillAlphas\": 0.9,\n     \"lineAlpha\": 0.2,\n     \"clustered\": false,\n    \"columnWidth\": barSize,\n    \"type\": \"column\",\n    \"title\": getLabelForSensorID(sensorId.slice(0, -2)),\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": sensorId,\n    \"balloonText\": \"[[title]] - [[timestamp]] - \u003cb style='font-size: 100%'\u003e[[value]]\u003c/b\u003e\"\n  });\n \n  //alert(barSize);\n};\n\n//console.log(JSON.stringify(graphs));\n//console.log(\"Result123:\"+JSON.stringify(this.datasource.results.payload));\nvar chart1 = AmCharts.makeChart(\"mulchartdiv1\", {\n  \"type\": \"serial\",\n  \"theme\": \"light\",\n // \"dataDateFormat\": \"YYYY-MM-DD\",\n  \"precision\": 2,\n  \"valueAxes\": [\n  /* {\n    \"id\": \"v1\",\n    \"title\": \"Sales\",\n    \"position\": \"left\",\n    \"autoGridCount\": false,\n    \"labelFunction\": function(value) {\n      return \"$\" + Math.round(value) + \"M\";\n    }\n  }, */ {\n    \"id\": \"v1\",\n    \"title\": \"Reading\",\n    \"gridAlpha\": 0,\n    \"position\": \"left\",\n    \"autoGridCount\": false\n  }],\n  \"graphs\": \n  graphs,\n  /*[\n    {\n    \"id\": \"g2\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e0e0eb\",\n    \"fillColors\": \"#e0e0eb\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.7,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380139\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380139_0\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[category]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  },\n     {\n    \"id\": \"g1\",\n    \"valueAxis\": \"v1\",\n    \"lineColor\": \"#e1ede9\",\n    \"fillColors\": \"#003333\",\n    //#87cefa\n    \"fillAlphas\": 1,\n     \"clustered\": false,\n    \"columnWidth\": 0.5,\n    \"type\": \"column\",\n    \"title\": \"Humidity - 380138\",\n    \"useLineColorForBulletBorder\": true,\n    \"valueField\": \"380138_0\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  },{\n    \"id\": \"g3\",\n    \"valueAxis\": \"v1\",\n    \"bullet\": \"round\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineThickness\": 2,\n    \"lineColor\": \"#00ffff\",\n    //#786c56\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-425070\",\n    \"valueField\": \"425070\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr/\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  }, {\n    \"id\": \"g4\",\n    \"valueAxis\": \"v1\",\n    \"lineThickness\": 2,\n    \"bullet\": \"square\",\n    \"bulletBorderAlpha\": 1,\n    \"bulletColor\": \"white\",\n    \"bulletSize\": 5,\n    \"useLineColorForBulletBorder\": true,\n    \"hideBulletsCount\": 500,\n    \"lineColor\": \"#ff5755\",\n   // #ff5755\n    \"type\": \"smoothedLine\",\n    \"title\": \"Temperature-426643\",\n    \"valueField\": \"426643\",\n    \"clustered\": false,\n    \"legendValueText\": \"[[value]]\",\n    \"balloonText\": \"[[title]]\u003cbr /\u003e[[timestamp]]\u003cbr/\u003e\u003cb style='font-size: 70%'\u003e[[value]]\u003c/b\u003e\"\n  }],*/\n  \"chartScrollbar\": {\n   // \"graph\": \"g4\",\n    \"oppositeAxis\": false,\n    \"offset\": 30,\n    \"scrollbarHeight\": 20,\n    \"backgroundAlpha\": 0,\n    \"selectedBackgroundAlpha\": 0.1,\n    \"selectedBackgroundColor\": \"#888888\",\n    \"graphFillAlpha\": 0,\n    \"graphLineAlpha\": 0.5,\n    \"selectedGraphFillAlpha\": 0,\n    \"selectedGraphLineAlpha\": 1,\n    \"autoGridCount\": true,\n    \"color\": \"#AAAAAA\"\n  },\n  \"chartCursor\": {\n    \"pan\": true,\n    \"valueLineEnabled\": true,\n    \"valueLineBalloonEnabled\": true,\n    \"cursorAlpha\": 0,\n    \"valueLineAlpha\": 0.2\n  },\n  \"categoryField\": \"timestamp\",\n  \"categoryAxis\": {\n    \"parseDates\": true,\n    \"minPeriod\":\"hh\",\n    \"dashLength\": 1,\n    \"minorGridEnabled\": true\n  },\n  \"legend\": {\n    \"useGraphSettings\": true,\n    \"position\": \"top\"\n  },\n  \"balloon\": {\n    \"borderThickness\": 1,\n    \"shadowAlpha\": 0,\n    \"fontSize\": 11,\n    \"verticalPadding\":0,\n    \"maxWidth\":10000\n  },\n  \"export\": {\n   \"enabled\": false\n  },\n  \"dataProvider\":chartDataProvider\n // \"dataProvider\":this.datasource.results.payload\n});\n}"
                            }
                        }
                    }
                },
                "tab": "d77a16c7-22b1-40e7-b263-879e5e951ab4",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "790d6b1c-0498-4655-957c-24968c757393": {
                "externalScripts": [],
                "id": "790d6b1c-0498-4655-957c-24968c757393",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "icon": {
                            "dataType": "string",
                            "display": true,
                            "key": "f8afb650-fd37-43a1-b295-eb584f58d9ae",
                            "label": "Icon",
                            "name": "icon",
                            "options": {},
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "4a65049d-84bf-45ec-af2d-de3079bf2e78",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 5
                        },
                        "maximum": {
                            "dataType": "string",
                            "display": true,
                            "key": "12dfb89b-f49d-40a1-811c-18c2c32c122f",
                            "label": "Max Temperature",
                            "name": "maximum",
                            "options": {
                                "errorText": "Must be a number",
                                "regexValidation": "^\\d*\\.?\\d*$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 3,
                            "widthPercent": 50
                        },
                        "minimum": {
                            "dataType": "string",
                            "display": true,
                            "key": "8e2bdd9e-a5f3-4eaa-8920-06d43746d0bf",
                            "label": "Min Temperature",
                            "name": "minimum",
                            "options": {
                                "errorText": "Must be a number",
                                "regexValidation": "^\\d*\\.?\\d*$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "key": "657e05b1-34ff-496a-945a-066c8080611b",
                            "label": "Name",
                            "name": "name",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget \u0026\u0026 this.widget.data) {\n    if (this.widget.data.item_id) { // inEdit\n        return getBase64($(\"input#icon\")[0].files[0]).then((icon) =\u003e {\n            datasources.updateFoodTestType.sendData(\n                {\n                    food_test_type_id: this.widget.data.item_id,\n                    food_test_type: {\n                        ...this.widget.data,\n                        icon,\n                    }\n                }).then(() =\u003e {\n                    datasources.getFoodTestTypes.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                    datasources.currentFoodTestType.sendData('none')\n                })\n        })\n    } else {\n        return getBase64($(\"input#icon\")[0].files[0]).then((icon) =\u003e {\n            datasources.createFoodTestType.sendData(\n                {\n                    food_test_type: {\n                        ...this.widget.data,\n                        icon,\n                    }\n                }\n            ).then((res) =\u003e {\n                datasources.getFoodTestTypes.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentFoodTestType.sendData(res.results.payload[0])\n            })\n        })\n    }\n\n}\n\nfunction getBase64(file) {\n    if (file) {\n       return new Promise((resolve, reject) =\u003e {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () =\u003e resolve(reader.result);\n            reader.onerror = error =\u003e reject(error);\n        }); \n    } else {\n        const currentType = datasources.getFoodTestTypes.latestData().results.payload.DATA.find(l =\u003e l.item_id === datasources.currentFoodTestType.latestData()) \n        return new Promise((resolve, reject) =\u003e {\n            if (currentType) {\n                resolve(currentType.icon);\n            } else {\n                resolve('');\n            }\n        });\n    }\n};"
                    },
                    "fontColor": "#000000",
                    "htmlId": "location-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2ef16576-6a46-4c13-83e4-7f6ecde41489",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\nlet data = { a: \"A\" }\nif(this.datasource.currentFoodTestType \u0026\u0026 this.datasource.currentFoodTestType !== 'none' \u0026\u0026 this.datasource.getFoodTestTypes) {\n    data = { ...this.datasource.getFoodTestTypes.results.payload.DATA.find(l =\u003e l.item_id === this.datasource.currentFoodTestType)}\n    data.icon = '';\n}\n$(\"input#icon\").removeClass(\"form-control\").attr(\"type\", \"file\");\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "0b67126f-3abc-4ae5-8743-d6e532f4174c",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "7db0df09-8bf0-43a6-9c12-426b23c7592e": {
                "externalScripts": [],
                "id": "7db0df09-8bf0-43a6-9c12-426b23c7592e",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n",
                            "HTML": "\u003cdiv class=\"form-group form-inline\"\u003e\n  \u003clabel for=\"gateway-group-by-select\"\u003eGroup gateways by\u0026nbsp;\u003c/label\u003e\n  \u003cselect class=\"form-control\" id=\"gateway-group-by-select\"\u003e\n    \u003coption value=\"location_name\"\u003eLocation\u003c/option\u003e\n    \u003c!-- \u003coption value=\"asset_type_name\"\u003eAsset Type\u003c/option\u003e --\u003e\n  \u003c/select\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\nconst defaultSelection = 'location_name';\nconst selectElem = $('#gateway-group-by-select');\nselectElem.val(defaultSelection);\ndatasources.gatewayListGroupByAttribute.sendData(defaultSelection);\n\nselectElem.off('change');\nselectElem.on('change', (e) =\u003e {\n    datasources.gatewayListGroupByAttribute.sendData(e.target.value);\n})"
                        }
                    }
                },
                "tab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef": {
                "externalScripts": [],
                "id": "7dfd1325-8a9e-40d9-9ec6-6d7b91b72cef",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {
                        "field1": {
                            "dataType": "string",
                            "display": false,
                            "key": "53e4b485-e185-41bd-bc0c-9ffc01bcbab1",
                            "name": "field1",
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "sensors-form",
                    "isReadOnly": true,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2a9ed067-8ae6-4459-b0e3-1465194c168f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const getLabelForSensor = (sensorInfo) =\u003e {\n    //alert(JSON.stringify(sensorInfo.sensor));\n    return sensorInfo.sensor.sensor_label;\n}\nlet doorCount;\nconst getDoorStatusCount=(sid)=\u003e{\n    $(\".field-\"+sid).addClass(\"doorSensorCss\");\nconst eTime = new Date();\n    const sTime = new Date();\n    sTime.setDate(eTime.getDate() - 1);\ndatasources.getHistoryForDoorSensor.sendData({\n                    sensor_ids: [sid],\n                    startTime: sTime.toISOString(),\n                    endTime: eTime.toISOString()\n                }).then((result)=\u003e{\n                    var readingsAry=result.results.payload;\n                     var doorOpenCount=0;\n                     readingsAry.forEach(function(readingObj){\n                         if(!readingObj[sid+\"_d\"])\n                         doorOpenCount++;\n                     });\n                     //alert(doorOpenCount);\n                     doorCount=doorOpenCount;\n                     //return doorOpenCount;\n                     $(\"#door-open-count\").html(\"Door has been opened \"+doorOpenCount+\" Times in last 24 hours\");\n                    });\n}\n\n\nconst getDataFromSensors = () =\u003e {\n    let rtn = {};\n    const sensors = this.datasource;\n    for (const id in sensors) {\n        try {\n            rtn = {\n                ...rtn,\n                [id]: window.parseDataFromSensor(sensors[id])\n            }\n        } catch (e) {\n            console.warn(`Unable to get data for sensor '${id}'`, sensors, e);\n        }\n    }\n    return rtn;\n}\n\nconst getWidthPercentForSensors = (count) =\u003e {\n    if (count === 1) {\n        return '100';\n    } else if (count === 2) {\n        return '50';\n    } else if (count === 3) {\n        return '33';\n    } else if (count \u003e= 4) {\n        return '50';\n    }\n    return '100';\n}\n\nconst getUnitsForSensor = (sensorInfo) =\u003e {\n    switch (sensorInfo.sensorType.attributes) {\n        case 'degrees':\n            return 'º';\n        case 'percent':\n            return '%';\n        default:\n            return ''\n    }\n}\n\nconst buildBooleanFieldParser = (sensorInfo) =\u003e {\n    const value = window.parseDataFromSensor(sensorInfo);\n    return {\n        HTML: `\u003cspan id=\"door-open-container\"\u003e\n        \u003cdiv\u003e\n        \u003csmall\u003e\n        ${getLabelForSensor(sensorInfo)}\n        \u003c/small\u003e\n        \u003c/div\u003e\n  \u003cdiv\u003e\u003ci class=\"fas ${!value === true ? 'fa-door-open' : 'fa-door-closed'}\" id=\"door-status-icon\"\u003e\u003c/i\u003e\u003c/div\u003e\n  \u003cp id=\"door-status-text\"\u003e\u003cb\u003eStatus:\u003c/b\u003e\n    ${!value === true ? 'DOOR OPEN' : 'DOOR CLOSED'}\n  \u003c/p\u003e\n  \u003cdiv class=\"message-time\"\u003e\n  \u003cp style=\"color:black;\"\u003e\u003cb\u003eReading On\u003c/b\u003e\u003c/p\u003e\n  \u003csmall\u003e\n  ${(new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString()}\n  \u003c/small\u003e\n  \u003c/div\u003e\n  \u003cdiv id=\"door-open-count\"\u003e\n  ${getDoorStatusCount(sensorInfo.message.sensor_message.sensorID)}\n  \u003c/div\u003e\n\u003c/span\u003e`,\n        CSS: '.message-time { color: grey } #door-open-container .fas{font-size:60px;} .doorSensorCss{width: calc(50% - 1em) !important;float:right;}',\n        JS: ''\n    }\n}\n\nconst messageTimeElem = (sensorInfo) =\u003e {\n    const msgTime = $('\u003cspan\u003e\u003c/span\u003e');\n    msgTime.addClass('message-time')\n    msgTime.text((new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString());\n    msgTime.css({\n        width: '100%',\n        'text-align': 'center',\n        top: '-13px',\n        position: 'relative',\n        color: 'rgb(153, 153, 153)',\n        'font-size': '.75rem'\n    })\n    return msgTime;\n}\n\nconst replaceLabel = (sensorElem, sensorInfo) =\u003e {\n    window.tryAgain(() =\u003e sensorElem.find('svg text').first().length, () =\u003e {\n        sensorElem.find('svg text').first().html(getLabelForSensor(sensorInfo));\n    }, 500, 15);\n    \n}\n\nconst addInfoToGauge = (sensorInfo) =\u003e {\n    try {\n        const sensorElem = $(`#sensors-form .field-${sensorInfo.id} .row`);\n        sensorElem.off('click');\n        sensorElem.on('click', () =\u003e {\n            datasources.currentSensorGauge.sendData(sensorInfo);\n        })\n        sensorElem.addClass('c-pointer')\n        sensorElem.find('.message-time').remove();\n        const msgTime = messageTimeElem(sensorInfo);\n        replaceLabel(sensorElem, sensorInfo);\n        sensorElem.append(msgTime);\n    } catch (e) {\n        console.warn('Unable to append time to sensor gauge', e, sensorInfo);\n    }\n}\n\nconst buildFieldForSensor = (sensorInfo, widthPercent) =\u003e {\n    const name = sensorInfo.id;\n    switch (sensorInfo.sensorType.data_type) {\n        case 'int':\n            const progressColor = window.getFillColorForSensor(sensorInfo.alertConfig, window.parseDataFromSensor(sensorInfo));\n            const units = getUnitsForSensor(sensorInfo);\n            setTimeout(() =\u003e {\n                addInfoToGauge(sensorInfo);\n            }, 1500);\n            return {\n                orderIdx: 1, name, dataType: 'number', display: true, key: sensorInfo.id, inputType: 'RADIAL_GAUGE', widthPercent, progressColor, units\n            }\n        case 'bool':\n            return {\n                orderIdx: 0, name, dataType: 'bool', display: true, key: sensorInfo.id, widthPercent, inputType: 'HTML', parser: buildBooleanFieldParser(sensorInfo)\n            }\n    }\n\n}\n\nconst getFieldSettingsFromSensors = () =\u003e {\n    let rtn = {};\n    const sensors = this.datasource;\n    const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\n    for (const id in sensors) {\n        const label = getLabelForSensor(sensors[id]);\n        try {\n            rtn = {\n                ...rtn,\n                [id]: buildFieldForSensor(sensors[id], widthPercent)\n            }\n        } catch (e) {\n            console.warn(`Unable to get field settings for '${id}'`, sensors, e);\n        }\n    }\n    return rtn;\n}\n\n/**\n * @type {FormSourceObj}\n */\nif(!jQuery.isEmptyObject(this.datasource))\n{\nvar formSourceObj = {\n    // the initial data the form has when loaded\n    data: getDataFromSensors(),\n\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\n    // useful for adding dynamic things like dropdown options from a collection\n    overrideFieldSettings: getFieldSettingsFromSensors()\n};\n}else{\nvar formSourceObj = {\n    // the initial data the form has when loaded\n    data: {\"noSensors\":\"No sensors Associated to gateway\"},\n\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\n    // useful for adding dynamic things like dropdown options from a collection\n    overrideFieldSettings: {\n                       \"noSensors\":{\n                        \"dataType\": \"bool\",\n                        \"display\": true,\n                        \"inputType\": \"HTML\",\n                        \"key\": \"noSensors\",\n                        \"name\": \"noSensors\",\n                        \"parser\":{\"HTML\":\"\u003ch2\u003eNo sensors Associated to gateway\u003c/h2\u003e\"},\n                        \"orderIdx\": 1\n                        // \"progressColor\": \"red\",\n                        // \"units\": \"%\",\n                        // \"widthPercent\": \"50\"\n                      }\n               }\n}\n}\nconsole.log(formSourceObj);\nreturn formSourceObj"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "4edd96aa-390c-4655-b192-6bf4adb47bfa",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "7ea9a978-563d-4f64-af02-beac9fd6be47": {
                "externalScripts": [],
                "id": "7ea9a978-563d-4f64-af02-beac9fd6be47",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\"  type=\"button\" class=\"btn btn-info\"\u003e Download CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e name  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e attributes \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e description \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e data_type \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e display_name \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e icon \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e is_probe \u003c/b\u003e\u003c/td\u003e\n            \n\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"7\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "78c74ae2-55f8-48b5-96fc-2dc5c825b208",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "84322d3a-7a90-4bb9-9eec-3cadff344fbd": {
                "externalScripts": [],
                "id": "84322d3a-7a90-4bb9-9eec-3cadff344fbd",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {
                        "item_id": {
                            "dataType": "uuid",
                            "display": false,
                            "inputType": "copy",
                            "isReadOnly": true,
                            "key": "65fd128f-0c8e-4d28-850e-2133e52f8096",
                            "label": "Item  id",
                            "name": "item_id",
                            "orderIdx": 0
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "dropdownOptions": [
                                null
                            ],
                            "inputType": "option",
                            "key": "71f252b6-79e3-4f0d-9eb8-5d33204f6148",
                            "label": "Location ",
                            "name": "location_id",
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "key": "70b994a9-6cb7-4c61-ab9b-e4d766a1dc79",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 1,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget) {\n    if (this.widget.data.item_id) { \n        datasources.updateZone.sendData(\n            {\n                zone_id:datasources.currentZoneId.latestData(),\n                  zone:{\n                 ...this.widget.data\n                }\n                // location: this.widget.data.location_id,\n                //     name :this.widget.data.name\n            })\n    } else {\n        datasources.createZone.sendData(\n            {\n                zone:{\n                 ...this.widget.data\n                }\n                \n              // location: this.widget.data.location_id,\n                 //name :this.widget.data.name\n            }\n        ).then((res) =\u003e {\n          //  datasources.getZones.sendData({ zone_id:res.results.payload[0] })\n            datasources.currentZoneId.sendData(res.results.payload[0])\n        })\n    }\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "location-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "bd48c4e7-a180-4624-b1d0-9d5fd166f1de",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\nlet data = { a: \"A\" }\nif(this.datasource.currentZoneId === 'empty') {\n    return { data: { name: '', description: ''}}\n}\nif(this.datasource.currentZoneId \u0026\u0026 this.datasource.currentZoneId !== 'none' \u0026\u0026 this.datasource.getZones) {\n    data = this.datasource.getZones.results.payload.DATA.find(l =\u003e l.item_id === this.datasource.currentZoneId)\n}\n\n\nconst locationList = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#location_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${locationList.join('')}`)\n\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "ff8f563a-5de6-4aa3-86a2-710787850d2d",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "84d45ced-4bd8-4438-8067-50395f90c92a": {
                "externalScripts": [],
                "id": "84d45ced-4bd8-4438-8067-50395f90c92a",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "f505a446-21a3-43d4-ab69-d2a71d50beee",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"food-test-type-list-title\"\u003eAdd Food Type\u003c/h2\u003e",
                                "JavaScript": "$(\"#food-test-type-list-title\").html(\n    (this.datasource \u0026\u0026 this.datasource !== 'none') ? `\nUpdate Food Type\n\u003cbutton id=\"switch-to-add-food-test-type\" class=\"btn btn-link\"\u003eAdd Food Type\u003c/button\u003e\n` : 'Add Food Type')\n\n$('#switch-to-add-food-test-type').click(function () {\n    datasources.currentFoodTestType.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "0b67126f-3abc-4ae5-8743-d6e532f4174c",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "881fe09f-5c10-4b97-a6ab-d53e6cd816d4": {
                "externalScripts": [],
                "id": "881fe09f-5c10-4b97-a6ab-d53e6cd816d4",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2ef16576-6a46-4c13-83e4-7f6ecde41489",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eFood Test Types\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e      \n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"food-test-type-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if(!this.datasource.getFoodTestTypes) return\n\nconst listItems = this.datasource.getFoodTestTypes.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentFoodTestType === data.item_id\n    return `\n    \u003ctr class=\"food-test-type-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e\n      ${data.icon \u0026\u0026 `\u003cimage src=${data.icon} style=\"height:60px;\"/\u003e`}      \n\n      \u003c/td\u003e\n    \n      \u003ctd\u003e\n      ${data.name}\n      \u003cdiv class=\"text-muted\"\u003e${data.minimum}°C - ${data.maximum}°C\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-food-test-type\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#food-test-type-list\").html(listItems)\n\nif (!window.hasSetupFoodTestTypeListListeners) {\n  window.hasSetupFoodTestTypeListListeners = true\n  // $(\"#food-test-type-list\").html(listItems)\n  $(\"body\").on('click', '.delete-food-test-type', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this food_test_type?')) {\n      datasources.deleteFoodTestType.sendData({ item_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getFoodTestTypes.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.food-test-type-item', ({ currentTarget }) =\u003e {\n    datasources.currentFoodTestType.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "78c74ae2-55f8-48b5-96fc-2dc5c825b208",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "88ef26d9-2dc8-46fb-b1f9-3f13c3bf0723": {
                "externalScripts": [],
                "id": "88ef26d9-2dc8-46fb-b1f9-3f13c3bf0723",
                "props": {
                    "addItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "allowAdd": false,
                    "allowDelete": false,
                    "allowExport": false,
                    "allowHighlight": false,
                    "allowSearch": false,
                    "allowUpdate": false,
                    "deleteItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "editCells": {
                        "compliant3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "1cda0c73-23a1-44ff-8e0f-c001156ae8f8",
                            "label": "Result",
                            "name": "compliant3",
                            "orderIdx": 2
                        },
                        "customer3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "f32ee755-f7bb-44d0-860f-c085a1a8d521",
                            "label": "Customer",
                            "name": "customer3",
                            "orderIdx": 1
                        },
                        "end_date3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "54093074-a534-4af5-9252-0faa4b6546be",
                            "label": "End",
                            "name": "end_date3",
                            "orderIdx": 6
                        },
                        "location3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "ca01b063-0801-4703-a37d-af857013a169",
                            "label": "Location",
                            "name": "location3",
                            "orderIdx": 4
                        },
                        "sensor3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "e2232460-5fff-4b1b-b115-5f3277061439",
                            "label": "Sensor",
                            "name": "sensor3",
                            "orderIdx": 9
                        },
                        "sensor_payload": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "f9b33fe0-3458-4a10-829a-97d24780593b",
                            "label": "Temperature",
                            "name": "sensor_payload",
                            "orderIdx": 8
                        },
                        "start_date3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "b6386d1e-5fd4-4d08-8c28-0dd8493ff673",
                            "label": "Start",
                            "name": "start_date3",
                            "orderIdx": 5
                        },
                        "test_type3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "4cd1f03b-592b-4b10-aa16-5b7dd3db88f8",
                            "label": "Type",
                            "name": "test_type3",
                            "orderIdx": 7
                        },
                        "tester_id3": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "0b2f47b7-be7f-4222-8b84-63190cf31a73",
                            "label": "Tester",
                            "name": "tester_id3",
                            "orderIdx": 3
                        }
                    },
                    "enableSorting": false,
                    "evenStripeColor": "#F7F7F7",
                    "fetchGridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "gridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const rtn = {\r\n  keyColumn: \"item_id\",\r\n  data: [],\r\n  count: 0,\r\n};\r\n if(this.datasource.cruidgridlocvar){\r\n\r\nconsole.log(\" cruid grid has value \", JSON.stringify(this.datasource.cruidgridlocvar));\r\n rtn.data = this.datasource.cruidgridlocvar.map((t)=\u003e({\r\n       customer3: getCustomerById.call(this, t.customer_id),\r\n        location3:  getLocationById.call(this, t.location_id),\r\n        compliant3:t.compliant? \"PASS\":\"FAIL\",\r\n        test_type3:getTestTypeById.call(this, t.type_id),\r\n        sensor3: getSensorById.call(this, t.sensor_id),\r\n        tester_id3 : getNameByEmail.call(this,t.tester_id),\r\n        start_date3: (new Date(t.start_date)).toLocaleString().replace(\",\",\"\"),\r\n        end_date3: (new Date(t.end_date)).toLocaleString().replace(\",\",\"\")\r\n    \r\n }))\r\n console.log(\"motham data lesser\"); \r\n\r\n\r\nreturn rtn;\r\n \r\n }else{\r\n     console.log(\"cruid grid doesnt have value\",JSON.stringify(this.datasource));\r\nconsole.log(\"Emp list:\"+datasources.getEmployeeName.latestData());\r\nif (this.datasource.LoCuSenFootestTest.getLocations \u0026\u0026 this.datasource.LoCuSenFootestTest.getCustomers \u0026\u0026 this.datasource.LoCuSenFootestTest.getTests \u0026\u0026 this.datasource.LoCuSenFootestTest.getFoodTestTypes \u0026\u0026 this.datasource.LoCuSenFootestTest.getSensors) {\r\n    // console.log('asdf', this.datasource.getTests.results)\r\n    rtn.data = this.datasource.LoCuSenFootestTest.getTests.results.payload.DATA.map((t) =\u003e ({\r\n        ...t,\r\n        customer3: getCustomerById.call(this, t.customer_id),\r\n        location3: getLocationById.call(this, t.location_id),\r\n        compliant3:t.compliant? \"PASS\":\"FAIL\",\r\n        test_type3: getTestTypeById.call(this, t.type_id),\r\n        sensor3: getSensorById.call(this, t.sensor_id),\r\n        tester_id3 : getNameByEmail.call(this,t.tester_id),\r\n        start_date3: (new Date(t.start_date)).toLocaleString().replace(\",\",\"\"),\r\n        end_date3: (new Date(t.end_date)).toLocaleString().replace(\",\",\"\")\r\n      }))\r\n    rtn.count = this.datasource.LoCuSenFootestTest.getTests.results.payload.TOTAL;\r\n}\r\n//alert($(\"#foodTestData .ReactTable .rt-table .rt-body .crud-row .rt-tr .rt-td:nth-child(2) .input-section span\").text());\r\n// console.log(\"this is rtn value\"+JSON.stringify(rtn));\r\nreturn rtn;\r\n\r\n\r\n }\r\n\r\nfunction getLocationById(id) {\r\n    try {\r\n        const locs = this.datasource.LoCuSenFootestTest.getLocations.results.payload.DATA;\r\n        for (let i=0, len = locs.length; i \u003c len; i++) {\r\n            if(locs[i].item_id === id) {\r\n                return locs[i].name;\r\n            }\r\n        }\r\n    } catch(e) {}\r\n    return id;\r\n}\r\n\r\nfunction getcolorforresult(resul){\r\n    try{\r\n        console.log(\"this is resul\"+ JSON.stringify(resul));\r\n        if(resul){\r\nconsole.log(\"the result is\"+ JSON.stringify(resul));\r\n        }else{\r\nconsole.log(\"the result is \"+ JSON.stringify(resul));\r\n        }\r\n    }catch(e) {\r\n        console.log(\"this is exeception\"+e);\r\n    }\r\n\r\n}\r\n\r\nfunction getCustomerById(id) {\r\n    try {\r\n        const customers = this.datasource.LoCuSenFootestTest.getCustomers.results.payload.DATA;\r\n        for (let i=0, len = customers.length; i \u003c len; i++) {\r\n            if(customers[i].item_id === id) {\r\n                return customers[i].name;\r\n            }\r\n        }\r\n    } catch(e) {}\r\n    return id;\r\n}\r\n\r\nfunction getTestTypeById(id) {\r\n    try {\r\n        const testTypes = this.datasource.LoCuSenFootestTest.getFoodTestTypes.results.payload.DATA;\r\n        for (let i=0, len = testTypes.length; i \u003c len; i++) {\r\n            if(testTypes[i].item_id === id) {\r\n                return testTypes[i].name;\r\n            }\r\n        }\r\n    } catch(e) {}\r\n    return id;\r\n}\r\n\r\nfunction getSensorById(id) {\r\n    try {\r\n        const sensors = this.datasource.LoCuSenFootestTest.getSensors.results.payload.DATA;\r\n        for (let i=0, len = sensors.length; i \u003c len; i++) {\r\n            if(sensors[i].item_id === id) {\r\n                return sensors[i].sensor_label;\r\n            }\r\n        }\r\n    } catch(e) {}\r\n    return id;\r\n}\r\n\r\nfunction getNameByEmail(email){\r\n   var allUsersList=datasources.getEmployeeName.latestData();\r\n    try{\r\n        for(emp=0;emp\u003callUsersList.length;emp++)\r\n        {\r\n          if(allUsersList[emp].email === email)\r\n          {\r\n           return allUsersList[emp].first_name; \r\n          }\r\n        }\r\n        // emploName.then((res)=\u003e {\r\n        //    getFristName = res.results.payload[0].first_name;\r\n        //     return getFristName;\r\n        // })\r\n    } catch(e) {}\r\n   \r\n}\r\n$(function(){\r\n$(\"#foodTestData .ReactTable .rt-table .rt-body .crud-row .rt-tr .rt-td:nth-child(2) .input-section span\").css(\"color\",\"green\");\r\n});\r\n"
                        }
                    },
                    "hidePaginationWhenNotNeeded": false,
                    "highlightColor": "#b7cad9",
                    "highlightItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "oddStripeColor": "#FFFFFF",
                    "pageSize": 25,
                    "updateItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5b813a78-7376-4831-b791-a1c52a4c9659",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    }
                },
                "tab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                "type": "CrudgridWidget"
            },
            "894e25af-e428-44ac-90c5-fd5375478381": {
                "externalScripts": [],
                "id": "894e25af-e428-44ac-90c5-fd5375478381",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2e1db52a-ec67-412b-a704-abc0fc865224",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"gateway-list-title\"\u003eAdd Gateway\u003c/h2\u003e\n\u003cdiv id=\"gateway-orphan-message\"\u003e\n\u003c/div\u003e",
                                "JavaScript": "$(\"#gateway-orphan-message\").html(\n    this.datasource.getOrphanGatewayData \u0026\u0026 this.datasource.getOrphanGatewayData.results.DATA \u0026\u0026 this.datasource.getOrphanGatewayData.results.DATA[0] ? `We received data in that is missing a corresponding gateway. \u003cbutton class=\"btn btn-primary\" id=\"add-orphan\"\u003eAdd it now?\u003c/button\u003e` : ''\n)\n\n$('#add-orphan').click(({ currentTarget }) =\u003e {\n    datasources.currentGatewayId.sendData('orphan')\n})\n\n$(\"#gateway-list-title\").html(\n    (this.datasource.currentGatewayId \u0026\u0026 this.datasource.currentGatewayId !== 'none') ? `\n${this.datasource.currentGatewayId === 'orphan' ? 'Add' : 'Update'} Gateway \n\u003cbutton id=\"switch-to-add-gateway\" class=\"btn btn-link\"\u003e${\n    this.datasource.currentGatewayId === 'orphan' ? 'Clear' : 'Add Gateway'}\u003c/button\u003e\n` : 'Add Gateway')\n\n$('#switch-to-add-gateway').click(function() {\n    datasources.currentGatewayId.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "b233d829-acc4-46db-bf8a-adc0582d4f17",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "8ecaa3be-9cef-4efd-9269-615ba42eb297": {
                "externalScripts": [],
                "id": "8ecaa3be-9cef-4efd-9269-615ba42eb297",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput accept=\".csv\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        name: d.name,\n                        minimum: d.minimum,\n                        maximum: d.maximum,\n                        icon: d.icon,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createFoodTestType.sendData({ food_test_types: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getFoodTestTypes.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    reader.readAsText(f);\n})\n"
                        }
                    }
                },
                "tab": "78c74ae2-55f8-48b5-96fc-2dc5c825b208",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "92bce78b-084c-474d-9d23-107e77354b4c": {
                "externalScripts": [],
                "id": "92bce78b-084c-474d-9d23-107e77354b4c",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n.underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n\n#secondtab{\n  margin-top: 1ch\n}\n\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\" type=\"button\" class=\"btn btn-info\"\u003eDownload CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered table-Responsive' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e customer_id  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e employee_id \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e gateway_description \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e gateway_label \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e gateway_id \u003c/b\u003e\u003c/td\u003e\n              \u003ctd\u003e\u003cb\u003e gateway_name \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e location_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e network_id \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e notes \u003c/b\u003e\u003c/td\u003e         \n           \u003ctd\u003e\u003cb\u003e signal_strength \u003c/b\u003e\u003c/td\u003e\n    \n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"10\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "b782f872-9afb-4d2a-ac3e-c0520c5e2b82",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "955ce274-fb4d-4b66-8e8b-9937194767b3": {
                "externalScripts": [],
                "id": "955ce274-fb4d-4b66-8e8b-9937194767b3",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "a028911d-bb3e-47eb-b82a-59f27d481fdb",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "\n",
                                "HTML": "\n",
                                "JavaScript": "//JavaScript\nlet listOfDSensors=this.datasource;\nif(listOfDSensors.length \u003e 6)\n{\n  listOfDSensors=listOfDSensors.replace(\"NoData,\",\"\");\n  $(\"head\").append(\"\u003cstyle\u003e\"+listOfDSensors+\"{width: calc(50% - 1em) !important;float:right !important;}\u003c/style\u003e\");\n}"
                            }
                        }
                    }
                },
                "tab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "97ca5065-c895-479f-aaa1-02fd8942e20a": {
                "externalScripts": [],
                "id": "97ca5065-c895-479f-aaa1-02fd8942e20a",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "c79fcbba-882d-4147-b0c1-841b1302784f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eEmployees\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"employee-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getEmployees) return\nconst listItems = this.datasource.getEmployees.results.payload\n  .sort((d1, d2) =\u003e d1.first_name \u003e d2.first_name)\n  .map((data) =\u003e {\n    const selected = data.email === this.datasource.currentEmployeeAdminPage;\n    console.log(selected, data.email)\n    return `\n    \u003ctr class=\"employee-item selectable-list-item ${selected ? 'selected' : ''}\" data-email=\"${data.email}\"\u003e\n      \u003ctd\u003e\n      ${data.photo \u0026\u0026 `\u003cimage src=${data.photo} style=\"height:60px;\"/\u003e`} \n      \u003c/td\u003e\n      \u003ctd\u003e\n      ${data.first_name} ${data.last_name}\n      \u003cdiv class=\"text-muted\"\u003e${data.email}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-employee\" data-email=\"${data.email}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#employee-list\").html(listItems)\n\nif (!window.hasSetupEmployeeListListeners) {\n  window.hasSetupEmployeeListListeners = true\n  $(\"#employee-list\").html(listItems)\n  $(\"body\").on('click', '.delete-employee', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this employee?')) {\n      \n      datasources.deleteEmployee.sendData({ email: currentTarget.dataset.email }).then(() =\u003e {\n        datasources.getEmployees.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.employee-item', ({ currentTarget }) =\u003e {\n    datasources.currentEmployeeAdminPage.sendData(currentTarget.dataset.email)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "9903f84b-5711-4e23-96a7-4fc846ef582d": {
                "externalScripts": [],
                "id": "9903f84b-5711-4e23-96a7-4fc846ef582d",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput accept=\".csv\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        user: {\n                            email: d.email,\n                            password: d.password,\n                        },\n                        employee: {\n                            assets: d.assets,\n                            customer_id: d.customer_id,\n                            first_name: d.first_name,\n                            last_name: d.last_name,\n                            locations: d.locations,\n                            phone_number: d.phone_number,\n                            photo: d.photo,\n                        },\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createEmployee.sendData({ employees: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getEmployees.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    reader.readAsText(f);\n})\n"
                        }
                    }
                },
                "tab": "d3b82035-0d9e-4e00-a5ff-6ccace8d72f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "9d300546-bff0-4297-883f-7a3571f96fa8": {
                "externalScripts": [],
                "id": "9d300546-bff0-4297-883f-7a3571f96fa8",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {},
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "4592a60c-0d95-4221-a020-caa0a9e57c58",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let objectToProcess;\r\nconst getLabelForSensor = (sensorInfo) =\u003e {\r\n    //alert(JSON.stringify(sensorInfo.sensor));\r\n    return sensorInfo.sensor.sensor_label;\r\n}\r\nlet doorCount;\r\nconst getDoorStatusCount=(sid)=\u003e{\r\n    $(\".field-\"+sid).addClass(\"doorSensorCss\");\r\nconst eTime = new Date();\r\n    const sTime = new Date();\r\n    sTime.setDate(eTime.getDate() - 1);\r\ndatasources.getHistoryForDoorSensor.sendData({\r\n                    sensor_ids: [sid],\r\n                    startTime: sTime.toISOString(),\r\n                    endTime: eTime.toISOString()\r\n                }).then((result)=\u003e{\r\n                    var readingsAry=result.results.payload;\r\n                     var doorOpenCount=0;\r\n                     readingsAry.forEach(function(readingObj){\r\n                         if(!readingObj[sid+\"_d\"])\r\n                         doorOpenCount++;\r\n                     });\r\n                     //alert(doorOpenCount);\r\n                     doorCount=doorOpenCount;\r\n                     //return doorOpenCount;\r\n                     $(\"#door-open-count\").html(\"Door has been opened \"+doorOpenCount+\" Times in last 24 hours\");\r\n                    });\r\n}\r\n\r\n\r\nconst getDataFromSensors = () =\u003e {\r\n    let rtn = {};\r\n     $.each(objectToProcess,function(k,v){\r\n    const sensors = v.sensors;\r\n    Object.keys(sensors).length;\r\n    for (const id in sensors) {\r\n        try {\r\n            rtn = {\r\n                ...rtn,\r\n                [id]: window.parseDataFromSensor(sensors[id])\r\n            }\r\n        } catch (e) {\r\n            console.warn(`Unable to get data for sensor '${id}'`, sensors, e);\r\n        }\r\n    }\r\n    rtn = {\r\n         ...rtn,\r\n         [v.assetDetails.name]:v.assetDetails.name,\r\n         [v.assetDetails.name+\"END\"]:v.assetDetails.name+\"END\"\r\n    };\r\n     });\r\n    return rtn;\r\n}\r\n\r\nconst getWidthPercentForSensors = (count) =\u003e {\r\n    if (count === 1) {\r\n       // return '100';\r\n        return '100';\r\n    } else if (count === 2) {\r\n       //  return '50';\r\n        return '50';\r\n    } else if (count === 3) {\r\n        // return '33';\r\n        return '50';\r\n    } else if (count \u003e= 4) {\r\n        // return '50';\r\n        return '50';\r\n    }\r\n    return '100';\r\n}\r\n\r\nconst getUnitsForSensor = (sensorInfo) =\u003e {\r\n    switch (sensorInfo.sensorType.attributes) {\r\n        case 'degrees':\r\n            return 'º';\r\n        case 'percent':\r\n            return '%';\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst buildAssetFieldParser=(assetName)=\u003e{\r\n     return {\r\n        HTML: `\u003ch4 class='text-center'\u003e${assetName}\u003c/h4\u003e`\r\n     }\r\n}\r\nconst buildBooleanFieldParser = (sensorInfo) =\u003e {\r\n    const value = window.parseDataFromSensor(sensorInfo);\r\n    return {\r\n        HTML: `\u003cspan id=\"door-open-container\"\u003e\r\n        \u003cdiv\u003e\r\n        \u003csmall\u003e\r\n        ${getLabelForSensor(sensorInfo)}\r\n        \u003c/small\u003e\r\n        \u003c/div\u003e\r\n  \u003cdiv\u003e\u003ci class=\"fas ${!value === true ? 'fa-door-open' : 'fa-door-closed'}\" id=\"door-status-icon\"\u003e\u003c/i\u003e\u003c/div\u003e\r\n  \u003cp id=\"door-status-text\"\u003e\u003cb\u003eStatus:\u003c/b\u003e\r\n    ${!value === true ? 'DOOR OPEN' : 'DOOR CLOSED'}\r\n  \u003c/p\u003e\r\n  \u003cdiv class=\"message-time\"\u003e\r\n  \u003cp style=\"color:black;\"\u003e\u003cb\u003eReading On\u003c/b\u003e\u003c/p\u003e\r\n  \u003csmall\u003e\r\n  ${(new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString()}\r\n  \u003c/small\u003e\r\n  \u003c/div\u003e\r\n  \u003cdiv id=\"door-open-count\"\u003e\r\n  ${getDoorStatusCount(sensorInfo.message.sensor_message.sensorID)}\r\n  \u003c/div\u003e\r\n\u003c/span\u003e`,\r\n        CSS: '.message-time { color: grey } #door-open-container .fas{font-size:60px;} .doorSensorCss{width: calc(30% - 1em) !important;float:right;}',\r\n        JS: ''\r\n    }\r\n}\r\n\r\nconst messageTimeElem = (sensorInfo) =\u003e {\r\n    const msgTime = $('\u003cspan\u003e\u003c/span\u003e');\r\n    msgTime.addClass('message-time')\r\n    msgTime.text((new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString());\r\n    msgTime.css({\r\n        width: '100%',\r\n        'text-align': 'center',\r\n        top: '-13px',\r\n        position: 'relative',\r\n        color: 'rgb(153, 153, 153)',\r\n        'font-size': '.75rem'\r\n    })\r\n    return msgTime;\r\n}\r\n\r\nconst replaceLabel = (sensorElem, sensorInfo) =\u003e {\r\n    window.tryAgain(() =\u003e sensorElem.find('svg text').first().length, () =\u003e {\r\n        sensorElem.find('svg text').first().html(getLabelForSensor(sensorInfo));\r\n    }, 500, 15);\r\n    \r\n}\r\n\r\nconst addInfoToGauge = (sensorInfo) =\u003e {\r\n    try {\r\n        const sensorElem = $(`#sensors-form .field-${sensorInfo.id} .row`);\r\n        sensorElem.off('click');\r\n        sensorElem.on('click', () =\u003e {\r\n            datasources.currentSensorGauge.sendData(sensorInfo);\r\n        })\r\n        sensorElem.addClass('c-pointer')\r\n        sensorElem.find('.message-time').remove();\r\n        const msgTime = messageTimeElem(sensorInfo);\r\n        replaceLabel(sensorElem, sensorInfo);\r\n        sensorElem.append(msgTime);\r\n    } catch (e) {\r\n        console.warn('Unable to append time to sensor gauge', e, sensorInfo);\r\n    }\r\n}\r\n\r\nconst buildFieldForSensor = (sensorInfo, widthPercent) =\u003e {\r\n    const name = sensorInfo.id;\r\n    switch (sensorInfo.sensorType.data_type) {\r\n        case 'int':\r\n            const progressColor = window.getFillColorForSensor(sensorInfo.alertConfig, window.parseDataFromSensor(sensorInfo));\r\n            const units = getUnitsForSensor(sensorInfo);\r\n            setTimeout(() =\u003e {\r\n                addInfoToGauge(sensorInfo);\r\n            }, 1500);\r\n            return {\r\n                orderIdx: 1, name, dataType: 'number', display: true, key: sensorInfo.id, inputType: 'RADIAL_GAUGE', widthPercent, progressColor, units\r\n            }\r\n        case 'bool':\r\n            return {\r\n                orderIdx: 0, name, dataType: 'bool', display: true, key: sensorInfo.id, widthPercent, inputType: 'HTML', parser: buildBooleanFieldParser(sensorInfo)\r\n            }\r\n    }\r\n\r\n}\r\n\r\nconst getFieldSettingsFromSensors = () =\u003e {\r\n    let rtn = {};\r\n     let count=0;\r\n    $.each(objectToProcess,function(k,v){\r\n\r\nlet assetName=v[\"assetDetails\"][\"name\"];\r\n      rtn = {\r\n                ...rtn,\r\n               [assetName]:{\r\n            \"dataType\":\"string\",\r\n            \"display\":true,\r\n            \"inputType\":\"HTML\",\r\n            \"key\":assetName,\r\n            \"name\":assetName,\r\n            \"orderIdx\":count,\r\n            \"parser\":buildAssetFieldParser(assetName),\r\n            \"widthPercent\":\"100\"\r\n                }\r\n            }\r\n          count++;\r\n\r\n      const sensors = v.sensors;\r\n    const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\r\n    for (const id in sensors) {\r\n        const label = getLabelForSensor(sensors[id]);\r\n        try {\r\n            count++;\r\n            rtn = {\r\n                ...rtn,\r\n                [id]: buildFieldForSensor(sensors[id], widthPercent)\r\n            }\r\n        } catch (e) {\r\n            console.warn(`Unable to get field settings for '${id}'`, sensors, e);\r\n        }\r\n    }\r\n    rtn = {\r\n                ...rtn,\r\n               [assetName+\"End\"]:{\r\n            \"dataType\":\"string\",\r\n            \"display\":true,\r\n            \"inputType\":\"HTML\",\r\n            \"key\":assetName+\"End\",\r\n            \"name\":assetName+\"End\",\r\n            \"orderIdx\":count,\r\n            \"parser\":{HTML:\"\u003chr/\u003e\"},\r\n            \"widthPercent\":\"100\"\r\n                }\r\n            }\r\n            count++;\r\n    });\r\n    // const sensors = this.datasource;\r\n    // const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\r\n    // for (const id in sensors) {\r\n    //     const label = getLabelForSensor(sensors[id]);\r\n    //     try {\r\n    //         rtn = {\r\n    //             ...rtn,\r\n    //             [id]: buildFieldForSensor(sensors[id], widthPercent)\r\n    //         }\r\n    //     } catch (e) {\r\n    //         console.warn(`Unable to get field settings for '${id}'`, sensors, e);\r\n    //     }\r\n    // }\r\n    return rtn;\r\n}\r\n\r\n/**\r\n * @type {FormSourceObj}\r\n */\r\nif(!jQuery.isEmptyObject(this.datasource))\r\n{\r\n    let modifiedAssetList={};\r\n    let assetsList=this.datasource;\r\n    let sensorsList=datasources.testDatasourceSensors.latestData();\r\n    $.each(assetsList,function(assetKey,assetVal){\r\n       assetVal[\"sensors\"]={};\r\n        let sList=assetVal[\"assetDetails\"][\"sensors\"];\r\n       $.each(sList,function(i,v){\r\n         assetVal[\"sensors\"][v]=sensorsList[v];\r\n       });\r\n      assetsList.assetKey=assetVal;\r\n    });\r\n    objectToProcess=assetsList;\r\n    // var formSourceObj = {}\r\nvar formSourceObj = {\r\n    // the initial data the form has when loaded\r\n    data: getDataFromSensors(),\r\n\r\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\r\n    // useful for adding dynamic things like dropdown options from a collection\r\n    overrideFieldSettings: getFieldSettingsFromSensors()\r\n};\r\n}else{\r\nvar formSourceObj = {\r\n    // the initial data the form has when loaded\r\n    data: {\"noSensors\":\"No sensors Associated to gateway\"},\r\n\r\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\r\n    // useful for adding dynamic things like dropdown options from a collection\r\n    overrideFieldSettings: {\r\n                       \"noSensors\":{\r\n                        \"dataType\": \"bool\",\r\n                        \"display\": true,\r\n                        \"inputType\": \"HTML\",\r\n                        \"key\": \"noSensors\",\r\n                        \"name\": \"noSensors\",\r\n                        \"parser\":{\"HTML\":\"\u003ch2\u003eNo sensors Associated to gateway\u003c/h2\u003e\"},\r\n                        \"orderIdx\": 1\r\n                        // \"progressColor\": \"red\",\r\n                        // \"units\": \"%\",\r\n                        // \"widthPercent\": \"50\"\r\n                      }\r\n               }\r\n}\r\n}\r\nconsole.log(formSourceObj);\r\nreturn formSourceObj"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "a0369f10-7f90-4a17-82b7-3f5ce93bde24": {
                "externalScripts": [],
                "id": "a0369f10-7f90-4a17-82b7-3f5ce93bde24",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "",
                            "HTML": "\u003cdiv id=\"weather\"\u003e\n\n\u003ciframe id=\"weatherFrame\" title=\"Environment Canada Weather\" width=\"100%\" height=\"180px\" src=\"//weather.gc.ca/wxlink/wxlink.html?cityCode=on-24\u0026amp;lang=e\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"no\"\u003e\u003c/iframe\u003e\n\n\u003c/div\u003e",
                            "JavaScript": ""
                        }
                    }
                },
                "tab": "2331744e-21a8-41af-898e-11d7ef074411",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "a0d8f319-9c9e-4081-90ac-f554a8848f76": {
                "externalScripts": [],
                "id": "a0d8f319-9c9e-4081-90ac-f554a8848f76",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "activeItemBackgroundColor": "#428bca",
                    "activeItemFontColor": "#ffffff",
                    "activeStatusBulletColor": "green",
                    "allowFilters": false,
                    "allowSearch": true,
                    "bulletColor": "#000000",
                    "displayAttribute": "name",
                    "displayBullets": true,
                    "displayStatusIndicators": false,
                    "enableListAutoSelect": true,
                    "eventTarget": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "8fbcbb2f-a293-4381-b7de-6d0790af233e",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "// datasources.getAssets.sendData({\"zone_id\":this.widget.item_id})\r\n// .then((res)=\u003e{\r\n//     // let assetsList=res.results.payload.DATA;\r\n//     // let assetsListArray=[];\r\n//     // assetsList.map((asset)=\u003e{\r\n//     // datasources.getGateways.latestData().filter((g)=\u003e{})\r\n//     // });\r\n// datasources.currentZoneAssetsList.sendData(res.results.payload.DATA);\r\n// });\r\n\r\n//JavaScript\r\n\r\n\r\nconst cgetSensorTypeById = (types, id) =\u003e {\r\n    return types.filter((t) =\u003e t.item_id === id)[0];\r\n}\r\n\r\nconst cgetSensorSubscription = (topic) =\u003e {\r\n    return window.sensorSubscriptions.filter((sub) =\u003e sub.topic === topic)[0];\r\n}\r\nconst cgetLabelForSensor = (sensorMsg) =\u003e {\r\n    try {\r\n        if (datasources.getSensors.lastUpdated) {\r\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\r\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\r\n                if (sensors[i].sensor_id === sensorMsg.sensorID) {\r\n                    return sensors[i].sensor_label;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n    return sensorMsg.sensorName;\r\n}\r\n\r\nconst cgetSensorById = (id) =\u003e {\r\n    const sensors = datasources.getSensors.latestData().results.payload.DATA;\r\n    for (let i = 0, len = sensors.length; i \u003c len; i++) {\r\n        if (sensors[i].sensor_id === id) {\r\n            return sensors[i];\r\n        }\r\n    }\r\n}\r\n\r\nconst cmessageReceived = (msg) =\u003e {\r\n    let parsedMsg;\r\n    try {\r\n        parsedMsg = JSON.parse(msg);\r\n    } catch (e) {\r\n        console.error('Failed to parse message', e);\r\n    }\r\n    if (parsedMsg \u0026\u0026 parsedMsg.sensor_message.sensorID) {\r\n        try {\r\n            const id = parsedMsg.sensor_message.sensorID;\r\n            const sensor = cgetSensorById(id);\r\n            const sensorType = cgetSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, sensor.sensor_type_id);\r\n            const alertConfig = getAlertConfigForSensorById(id);\r\n            \r\n            datasources.testDatasourceSensors.sendData({\r\n                ...datasources.testDatasourceSensors.latestData(),\r\n                [id]: {\r\n                    id,\r\n                    sensorType,\r\n                    sensor,\r\n                    message: parsedMsg,\r\n                    alertConfig\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.error('Unable to update testDatasourceSensors', id, sensorType, sensor, e)\r\n        }\r\n    }\r\n}\r\n\r\nconst csetupMessaging = () =\u003e {\r\n    return new Promise((resolve) =\u003e {\r\n        if (!window.messagingObjectForSensors) {\r\n            window.sensorSubscriptions = [];\r\n            window.messagingObjectForSensors = CB_PORTAL.ClearBlade.Messaging({ useSSL: true }, resolve);\r\n        } else {\r\n            window.sensorSubscriptions.forEach((sub) =\u003e {\r\n                try {\r\n                    window.messagingObjectForSensors.unsubscribe(sub.topic, {});\r\n                } catch (e) {\r\n                    console.error('Unable to unsub from topics', e);\r\n                }\r\n            })\r\n\r\n            window.sensorSubscriptions = [];\r\n            resolve();\r\n        }\r\n    })\r\n}\r\n\r\nconst cmessageHistoryCallback = (err, data) =\u003e {\r\n    if (!err) {\r\n        if (data \u0026\u0026 data[0]) {\r\n            cmessageReceived(data[0].message);\r\n        }\r\n    }\r\n}\r\n\r\nconst cresetGauges = () =\u003e {\r\n    datasources.testDatasourceSensors.sendData({});\r\n}\r\n\r\nconst cupdateGauges = (sensors) =\u003e {\r\n    cresetGauges();\r\n\r\n    sensors.forEach((s) =\u003e {\r\n        const sensorType = cgetSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, s.sensor_type_id);\r\n        const topicName = `monnit-webhook-adapter/${s.sensor_id}`;\r\n\r\n        window.sensorSubscriptions.push({ topic: topicName });\r\n        window.messagingObjectForSensors.subscribe(topicName, {}, cmessageReceived);\r\n        CB_PORTAL.ClearBlade.MessagingStats().getMessageHistory(topicName, new Date().getTime(), 1, cmessageHistoryCallback)\r\n    })\r\n}\r\nlet sensorsAryForHistory=[];\r\nfunction cfilterSensors(data)\r\n{\r\n    let sensors;\r\n    let probType=\"4ebd356c-b35d-4b7d-a2be-2b6854973057\";\r\n    try {\r\n        sensors = data.sensors;\r\n        sensors = sensors.filter((s)=\u003es.sensor_type_id != probType);\r\n        //let sensorsAry=sensors.map((sensor)=\u003e{if(sensor.sensor_type_id != probType) return sensor});\r\n       // sensors=sensorsAry;\r\n       //console.log(sensors);\r\n    } catch (e) {\r\n        console.error('error parsing sensors after selecting asset', e);\r\n    }\r\n    if (sensors \u0026\u0026 Array.isArray(sensors)) {\r\n       sensorsAryForHistory=sensorsAryForHistory.concat(sensors);\r\n       sensors=sensorsAryForHistory;\r\n        // update the history line chart\r\n        try {\r\n            datasources.sensorHistoryIds.sendData(sensors.map((s) =\u003e s.sensor_id))\r\n            if (datasources.sensorHistoryTimeRange.lastUpdated) {\r\n                const timeRange = datasources.sensorHistoryTimeRange.latestData();\r\n                datasources.getHistoryForSensors.sendData({\r\n                    sensor_ids: datasources.sensorHistoryIds.latestData(),\r\n                    startTime: timeRange.startDate.toISOString(),\r\n                    endTime: timeRange.endDate.toISOString()\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.error('error parsing sensors after selecting asset', e);\r\n        }\r\n        csetupMessaging().then(() =\u003e {\r\n            // update the 'latest data' gauges\r\n            try {\r\n                cupdateGauges(sensors);\r\n            } catch (e) {\r\n                console.error('error updating gauges', e);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nlet zoneAssets=[];\r\nlet currentObj=this.widget;\r\nlet gatewayList=[];\r\nlet sensorList=[];\r\nlet assetsList=[];\r\nif(datasources.getGateways.lastUpdated\u0026\u0026datasources.getSensors.lastUpdated\u0026\u0026datasources.getAssets.lastUpdated){\r\ngetZoneDetails(currentObj);\r\n}else{\r\n   datasources.getGateways.latestData.subscribe();\r\n   datasources.getSensors.latestData.subscribe();\r\n   datasources.getAssets.latestData.subscribe();\r\n   getZoneDetails(currentObj);\r\n}\r\nfunction getZoneDetails(){\r\ndatasources.getGateways.latestData().results.payload.DATA.map((g)=\u003e{\r\nif(g.zone_id == currentObj.item_id) gatewayList.push(g);\r\n});\r\ndatasources.getSensors.latestData().results.payload.DATA.map((s)=\u003e{\r\nif(s.zone_id == currentObj.item_id) sensorList.push(s);\r\n});\r\ndatasources.getAssets.latestData().results.payload.DATA.map((a)=\u003e{\r\nif(a.zone_id == currentObj.item_id) assetsList.push(a);\r\n});\r\nzoneAssets=assetsList.map((asset)=\u003e{\r\nreturn {\r\n    ...asset,\r\n    \"gateways\":gatewayList.filter((gw)=\u003egw.asset_id == asset.item_id),\r\n    \"sensors\": sensorList.filter((s)=\u003es.asset_id == asset.item_id)\r\n}\r\n});\r\ndatasources.assetDetails.sendData({});\r\n$.each(zoneAssets,function(index,value){\r\n    // if(!datasources.assetDetails.lastUpdated)\r\n    //    datasources.assetDetails.sendData({});\r\n    var assetdetailsObj={};\r\n    var sensorsArray=[];\r\n    if(value.sensors.length\u003e0){\r\n        cfilterSensors(value);\r\n        var sObj=value.sensors;\r\n     $.each(sObj,function(i,v){\r\n          if(!(v.sensor_type_id ==\"4ebd356c-b35d-4b7d-a2be-2b6854973057\"))\r\n        sensorsArray.push(v.sensor_id);\r\n    });\r\n         \r\n    }\r\n    value.sensors=sensorsArray;\r\n   var latestDataObj=datasources.assetDetails.latestData();\r\n   latestDataObj[value.name]={\"assetDetails\":value};\r\n   setTimeout(function(){\r\n   datasources.assetDetails.sendData(latestDataObj);\r\n   },5000)\r\n   \r\n\r\n});\r\n\r\nconsole.log(\"Assets List:\"+JSON.stringify(zoneAssets));\r\ndatasources.currentZoneAssetsList.sendData(zoneAssets);\r\ndatasources.testDatasource.sendData(zoneAssets);\r\ndatasources.zoneAndassetInfo.sendData({\r\n    ...currentObj,\r\n    \"assets\":assetsList,\r\n    \"gateways\":gatewayList,\r\n    \"sensors\":sensorList\r\n});\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  $(\"#zoneAssetsTable tbody tr:first-child\").click();\r\n\r\n\r\n\r\nreturn {\r\n    ...currentObj,\r\n    \"assets\":assetsList,\r\n    \"gateways\":gatewayList,\r\n    \"sensors\":sensorList\r\n};\r\n"
                        }
                    },
                    "fontColor": "#000000",
                    "groupByAttributes": [
                        "location_name",
                        null
                    ],
                    "inactiveStatusBulletColor": "darkred",
                    "listItemBackgroundColor": "#ffffff",
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "10a9da0c-4373-4e54-9c5e-891e5982f0f3",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "if (!datasources.sensorHistoryTimeRange.lastUpdated) {\r\n    const now = new Date();\r\n    const yesterday = new Date();\r\n    yesterday.setDate(now.getDate() - 1);\r\n    console.log('now', now);\r\n    datasources.sensorHistoryTimeRange.sendData({\r\n        startDate: yesterday,\r\n        endDate: now\r\n    })\r\n}\r\n\r\nconst getLocationNameById = (locs, id) =\u003e {\r\n    const found = locs.filter((l) =\u003e l.item_id === id)[0];\r\n    if (found) {\r\n        return found.name;\r\n    }\r\n    return 'Location not found'\r\n}\r\n\r\nconst getAssetTypeNameById = (id) =\u003e {\r\n    const assetTypes = this.datasource.getAssetTypes.results.payload.DATA;\r\n    const found = assetTypes.filter((t) =\u003e t.item_id === id)[0];\r\n    if (found) {\r\n        return found.name;\r\n    }\r\n    return 'Asset type not found';\r\n}\r\n\r\nconst buildGatewayListByAssetType = (gateways = []) =\u003e {\r\n    const promises = gateways.map((g) =\u003e {\r\n        return datasources.getSensorByGatewayId.sendData({\r\n            gateway_id: g.gateway_id\r\n        }).then((data) =\u003e {\r\n            try {\r\n                const assetIds = [];\r\n                const sensors = data.results.payload.DATA;\r\n                sensors.forEach((s) =\u003e {\r\n                    if (assetIds.indexOf(s.asset_id) === -1) {\r\n                        assetIds.push(s.asset_id);\r\n                    }\r\n                })\r\n                const assetsTypeIdForGateway = this.datasource.getAssets.results.payload.DATA.filter((a) =\u003e {\r\n                    return assetIds.indexOf(a.item_id) \u003e -1;\r\n                }).map((a) =\u003e a.asset_type_id)[0];\r\n\r\n                return {\r\n                    ...g,\r\n                    asset_type_name: getAssetTypeNameById(assetsTypeIdForGateway)\r\n                }\r\n            } catch (e) {\r\n                console.error('Unable to get asset type name for gateway', e, g);\r\n                return g;\r\n            }\r\n        })\r\n    })\r\n    return Promise.all(promises).then((data) =\u003e {\r\n        console.log('alll', data);\r\n        return data;\r\n    });\r\n}\r\n\r\nif (this.datasource.getLocations \u0026\u0026 this.datasource.getLocations.results \u0026\u0026 this.datasource.getAssets \u0026\u0026 this.datasource.getAssets.results \u0026\u0026 this.datasource.getAssetTypes \u0026\u0026 this.datasource.getAssetTypes.results \u0026\u0026 this.datasource.getGateways \u0026\u0026 this.datasource.getGateways.results\u0026\u0026this.datasource.getZones\u0026\u0026this.datasource.getZones.results) {\r\n    const gateways = this.datasource.getGateways.results.payload.DATA;\r\n    const zones = this.datasource.getZones.results.payload.DATA;\r\n    console.log('settings', this.model.settings())\r\n    this.model.settings({\r\n        ...this.model.settings(),\r\n        groupByAttributes: [this.datasource.gatewayListGroupByAttribute, null]\r\n    })\r\n    if (this.datasource.gatewayListGroupByAttribute === 'location_name') {\r\n        return zones.map((a) =\u003e ({\r\n            ...a,\r\n            location_name: getLocationNameById(this.datasource.getLocations.results.payload.DATA, a.location_id)\r\n        }))\r\n    } else if (this.datasource.gatewayListGroupByAttribute === 'asset_type_name') {\r\n        return buildGatewayListByAssetType(gateways);\r\n    }\r\n} else {\r\n    return [];\r\n}\r\n"
                        }
                    },
                    "titleColor": "#000000",
                    "trackingColumnName": "item_id"
                },
                "tab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                "type": "GROUPING_LIST_WIDGET_COMPONENT"
            },
            "a3a95deb-913f-419f-87d2-e6bf1d342ed3": {
                "externalScripts": [],
                "id": "a3a95deb-913f-419f-87d2-e6bf1d342ed3",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "d0076a83-4237-4bfa-9fea-19cbe248c81c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"sensor-list-title\"\u003eCreate Sensor\u003c/h2\u003e\n\u003cdiv id=\"sensor-orphan-message\"\u003e\n\u003c/div\u003e\n\n\u003cpre id=\"orphan\"\u003e\n\u003c/pre\u003e",
                                "JavaScript": "$(\"#sensor-orphan-message\").html(\n    this.datasource.getOrphanSensorData \u0026\u0026 this.datasource.getOrphanSensorData.results.DATA \u0026\u0026 this.datasource.getOrphanSensorData.results.DATA[0] ? `We received data that is missing a corresponding sensor. \u003cbutton class=\"btn btn-primary\" id=\"add-orphan\"\u003eAdd it now?\u003c/button\u003e` : ''\n)\n\n$('#add-orphan').click(({ currentTarget }) =\u003e {\n    datasources.currentSensor.sendData('orphan')\n})\n\n\n\n///\n$(\"#sensor-list-title\").html(\n    (this.datasource.currentSensor \u0026\u0026 this.datasource.currentSensor !== 'none') ? `\n${this.datasource.currentSensor === 'orphan' ? 'Add' : 'Update'} Sensor \n\u003cbutton id=\"switch-to-add-sensor\" class=\"btn btn-link\"\u003e${this.datasource.currentSensor === 'orphan' ? 'Clear' : 'Add Sensor'}\u003c/button\u003e\n` : 'Add Sensor')\n\n$('#switch-to-add-sensor').click(function() {\n    datasources.currentSensor.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "2c4e19ad-405b-434d-a7cf-86daf7af9a5d",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "a4c046fd-8aed-4c92-ad11-be52a547d1f5": {
                "externalScripts": [],
                "id": "a4c046fd-8aed-4c92-ad11-be52a547d1f5",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2d0bb3bd-46cf-4edd-9a29-d4da346933b2",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "body{\n font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n font-size: 14px;\n width: 100%;\n   }\n   #showthetablesss table{\n       width: 100%;\n   }\n .underline {\n   text-decoration: underline;\n   }\n   #previous[disabled=\"disabled\"],#next[disabled=\"disabled\"]{\n     background:red;\n     color:white;\n     }\n            .btn.focus,.btn-outline-primary:focus, .active:focus{\n                box-shadow:none;\n            }\n            #accordion .card-link{\n                color:white;\n            }\n            #devicesData table{\n                font-size:1vw;\n                width:100%;\n            }\n\t\t\t#devicesData table td{\n                padding:5px 1px;\n            }\n\t\t\t #paginationdiv .btn-group{\n\t\t\tjustify-content: center;\n\t\t\tdisplay:flex;\n\t\t\t}\n\t\t\t[name='deviceSearchForm']{\n\t\t\tjustify-content:center;\n\t\t\tdisplay:flex;\n\t\t\t}\n\t\t\t.gwFirmwareReform,.gwFirmwareMACad{padding:1px;}\n            .sensorInfoTbl tr td:nth-child(4),.sensorInfoTbl tr td:nth-child(5){\n                text-align: center;\n            }\n            .fa-bolt{\n                font-size:20px;\n                color:#6bd827;\n                padding-left:5px;\n            }\n\t\t\t\n\t\t\t\n\t\t\t",
                                "HTML": "\u003cdiv id=\"responddataidthead\"\u003e\u003c/div\u003e\n\u003cdiv id=\"showthetablesss\"\u003e\u003c/div\u003e\n\t\t\t\u003c!-- \u003cdiv class=\"modal\" id=\"authModal\"\u003e\n  \u003cdiv class=\"modal-dialog modal-sm\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e --\u003e\n\n      \u003c!-- Modal Header --\u003e\n      \u003c!-- \u003cdiv class=\"modal-header\"\u003e\n        \u003ch4 class=\"modal-title\"\u003eAthentication\u003c/h4\u003e\n        \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\"\u003e\u0026times;\u003c/button\u003e\n      \u003c/div\u003e --\u003e\n\n      \u003c!-- Modal body --\u003e\n      \u003c!-- \u003cdiv class=\"modal-body\"\u003e\n        \u003cform name='imonnitAuth'\u003e\n\t\t\u003cdiv class=\"form-group\"\u003e\n\t\t\u003clabel\u003eUsername\u003c/label\u003e\n\t\t\u003cinput type=\"text\" name=\"imuname\" class=\"form-control\" required/\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"form-group\"\u003e\n\t\t\u003clabel\u003ePassword\u003c/label\u003e\n\t\t\u003cinput type=\"password\" name=\"imupwd\" class=\"form-control\" required/\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cbutton type=\"button\" class=\"btn btn-danger float-right\" data-dismiss=\"modal\"\u003eClose\u003c/button\u003e\n\t\t\u003cbutton type=\"button\" class=\"btn btn-success float-right mr-1\" id=\"authSubmit\"\u003eSubmit\u003c/button\u003e\n\t\t\u003c/form\u003e\n      \u003c/div\u003e\n\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e --\u003e",
                                "JavaScript": "//JavaScript\nvar authModal=\t'\u003cdiv class=\"modal\" id=\"authModal\"\u003e'\n  +'\u003cdiv class=\"modal-dialog modal-sm\"\u003e'\n   +' \u003cdiv class=\"modal-content\"\u003e'\n\n     +' \u003c!-- Modal Header --\u003e'\n     +' \u003cdiv class=\"modal-header\"\u003e'\n       +' \u003ch4 class=\"modal-title\"\u003eAthentication\u003c/h4\u003e'\n        +'\u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\"\u003e\u0026times;\u003c/button\u003e'\n     +' \u003c/div\u003e'\n\n      +'\u003c!-- Modal body --\u003e'\n     +' \u003cdiv class=\"modal-body\"\u003e'\n        +'\u003cform name=\"imonnitAuth\"\u003e'\n\t\t+'\u003cdiv class=\"form-group\"\u003e'\n\t\t+'\u003clabel\u003eUsername\u003c/label\u003e'\n\t\t+'\u003cinput type=\"text\" name=\"imuname\" class=\"form-control\" required/\u003e'\n\t\t+'\u003c/div\u003e'\n\t\t+'\u003cdiv class=\"form-group\"\u003e'\n\t\t+'\u003clabel\u003ePassword\u003c/label\u003e'\n\t\t+'\u003cinput type=\"password\" name=\"imupwd\" class=\"form-control\" required/\u003e'\n\t\t+'\u003c/div\u003e'\n\t\t+'\u003cbutton type=\"button\" class=\"btn btn-danger float-right\" data-dismiss=\"modal\"\u003eClose\u003c/button\u003e'\n\t\t+'\u003cbutton type=\"button\" class=\"btn btn-success float-right mr-1\" id=\"authSubmit\"\u003eSubmit\u003c/button\u003e'\n\t\t+'\u003c/form\u003e'\n     +' \u003c/div\u003e'\n\n   +' \u003c/div\u003e'\n  +'\u003c/div\u003e'\n+'\u003c/div\u003e'\n\n// var authModalSec=\"\u003cdiv id='authForm'\u003e\u003c/div\u003e\";\n// if(!$(\"body #authForm\")){\n// $(\"body\").append(authModalSec);\n// $(\"#authForm\").html(authModal);\n// }else{\n//     $(\"#authForm\").html(authModal);\n// }\n\n$(\"body\").append(authModal);\n\nthis.model.settings({\n    ...this.model.settings(),\n    listTitle: this.datasource.gateway_name\n})\nlet customerName = '';\nif (datasources.currentCustomer.lastUpdated) {\n    try {\n        customerName = datasources.currentCustomer.latestData().name;\n    } catch(e) {\n    }\n}\nconst data = {\n    ...this.datasource,\n    customer_name: customerName\n}\n// $(\"#responddataidthead\").html(JSON.stringify(data));\nvar listOfGateways = data;\n\n var gatewayCard = \"\u003cdiv\u003e\";\n gatewayCard += \"\u003ctable class='table-bordered'\u003e\";\n  gatewayCard += \"\u003ctr\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eGatewayID: \u003c/b\u003e\" + listOfGateways.gateway_id + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eGatewayName : \u003c/b\u003e \" + listOfGateways.gateway_name + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003c/tr\u003e\";\n   gatewayCard += \"\u003ctr\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eNetwork ID : \u003c/b\u003e\" +  listOfGateways.network_id + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eCustomer Name : \u003c/b\u003e\" +  listOfGateways.customer_name + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003c/tr\u003e\";\n   gatewayCard += \"\u003ctr\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eBattery Level :\u003c/b\u003e\" +  listOfGateways.battery_level + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003ctd\u003e\u003cb\u003eSignal Strength : \u003c/b\u003e\" +  listOfGateways.signal_strength + \"\u003c/td\u003e\";\n   gatewayCard += \"\u003c/tr\u003e\";\n\n   gatewayCard += \"\u003ctr\u003e\";\n   gatewayCard += \"\u003ctd id= 'tablekimacaddress'\u003e\u003cb\u003eMAC Address :\u003c/b\u003e\u003c/td\u003e\";\n   gatewayCard += \"\u003ctd id = 'tablekiheartbeat'\u003e\u003cb\u003eHeartBeat : \u003c/b\u003e\u003c/td\u003e\";\n   gatewayCard += \"\u003c/tr\u003e\";\n   gatewayCard += \" \u003c/tbody\u003e\";\n   gatewayCard += \"\u003c/table\u003e\";\n   gatewayCard += \"\u003c/div\u003e\";\n     gatewayCard += \"\u003ctr\u003e\";\n    gatewayCard += \"\u003c/tr\u003e\";\n    \n       \n       gatewayCard += \"\u003c/div\u003e\u003cbr/\u003e\";\n        \ngatewayCard +=\"\u003ctd\u003e\u003cbutton class='btn btn-info gwFirmwareReform mr-2 float-right' data-gwid=\"+listOfGateways.gateway_id+\" data-method='update'\u003eUpdate Firmware\u003c/button\u003e\";\ngatewayCard +=\"\u003cbutton class='btn btn-info gwFirmwareReform mr-2 float-right' data-gwid=\"+listOfGateways.gateway_id+\" data-method='reform'\u003eReform\u003c/button\u003e\";\ngatewayCard +=\"\u003cbutton class='btn btn-info gwFirmwareMACad mr-2 float-right' data-gwid=\"+listOfGateways.gateway_id+\" data-method='getmacaddress'\u003eGet More Details\u003c/button\u003e\";\n      \n       gatewayCard += \"\u003c/div\u003e\";\n// alert(this.datasource.gateway_id);\n $(\"#showthetablesss\").html(gatewayCard);\n$(document).on(\"click\",\".gwFirmwareReform,.gwFirmwareMACad\",function(e){\n\t\t\t\tgwUpRfmObj={\n\t\t\t\t \"method\": $(this).data(\"method\"),\n                 \"gateway_id\":$(this).data(\"gwid\"),\n\t\t\t\t}; \n\t$(\"#authModal\").modal(\"show\");\n    $('body .modal-backdrop').remove();\n     $(\"body form[name='imonnitAuth']\")[0].reset();\n    \t\t\t\t});\n     $(\"#authSubmit\").off(\"click\");\n\t\t\t\t$(\"#authSubmit\").click(function(){\n\t\t\t\tvar sresult;\n\t\t\t\tvar authForm=$(\"form[name='imonnitAuth']\");\t\n\t\t\t\tgwUpRfmObj.username=$(\"input[name='imuname']\").val();\n\t\t\t\tgwUpRfmObj.password=$(\"input[name='imupwd']\").val();\n                 \n\t\t\t\t//datasources.name.senddata(imCredentials);\n                if(gwUpRfmObj.method===\"getmacaddress\")\n                {\n                  var respo = datasources.GetGatewayMACandHBandType.sendData(gwUpRfmObj);\n                respo.then(result =\u003e{\n                   // console.log(result);\n\t\t\t\tvar result_obj = result.results;\n                var update_macAdrs = result_obj.MacAddress;\n                $(\"#tablekimacaddress\").html(\"\u003cb\u003eMAC Address : \u003c/b\u003e\"+update_macAdrs);\n                $(\"#tablekiheartbeat\").html(\"\u003cb\u003eHeart Beat : \u003c/b\u003e\"+result_obj.Heartbeat);\n\t\t\t\tauthForm[0].reset();\n\t\t\t\t$(\"#authModal\").modal(\"hide\");\n                });\n                }else{\n\t\t\t\tvar res = datasources.gatewayRfmUpDlt.sendData(gwUpRfmObj);\n                res.then(result =\u003e{\n                   \n\t\t\t\tsresult=result.results.results;\n\t\t\t\tif(sresult==\"Success\")\n\t\t\t\t{\n\t\t\t\talert(\"Gateway Updated Successfully!\");\n\t\t\t\t}else{\n\t\t\t\talert(sresult);\n\t\t\t\t}\n\t\t\t\tauthForm[0].reset();\n\t\t\t\t$(\"#authModal\").modal(\"hide\");\n                });\n                }\n\t\t\t\t });    "
                            }
                        }
                    },
                    "listTitle": "CGW3 3g North America - 913529"
                },
                "tab": "90c50b68-ea13-44fa-ae03-530a2a02a0d8",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "a574bcfd-533d-4d90-9e46-e512f6ddb0b8": {
                "externalScripts": [],
                "id": "a574bcfd-533d-4d90-9e46-e512f6ddb0b8",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "compactForm": true,
                    "displayColumn": "name",
                    "editColumns": {
                        "field1": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "key": "bddec3be-983d-49b4-a7b3-6ee8aeb53485",
                            "name": "field1",
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "zone-and-asset-info",
                    "isReadOnly": true,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5c415bd6-f0b5-43ec-b066-166346c2374e",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let formTitle;\r\nlet assetTypeName;\r\nlet assetTypeId;\r\n\r\nconst getSensorType=(sTypeId)=\u003e{\r\n    let sTypeObj=datasources.getSensorTypes.latestData().results.payload.DATA.filter((st)=\u003est.item_id == sTypeId)[0]\r\n return sTypeObj.name;\r\n}\r\n\r\nfunction gatewaysrows(gAry){\r\n    $.each(gAry,function(i,v){\r\n      $(\"#gateways_sensors_info .modal-body tbody\").append(`\r\n      \u003ctr\u003e\r\n      \u003ctd\u003e${v.gateway_label}\u003c/td\u003e\r\n      \u003ctd\u003e${v.gateway_id}\u003c/td\u003e\r\n      \u003ctd\u003e${v.network_id}\u003c/td\u003e\r\n      \u003ctd\u003e${v.battery_level}\u003c/td\u003e\r\n      \u003ctd\u003e${v.signal_strength}\u003c/td\u003e\r\n      \u003ctd\u003e${v.employee_id}\u003c/td\u003e\r\n      \u003c/tr\u003e`);\r\n    });\r\n}\r\n\r\nfunction sensorsrows(sAry){\r\n    $.each(sAry,function(i,v){\r\n      $(\"#gateways_sensors_info .modal-body tbody\").append(`\r\n      \u003ctr\u003e\r\n      \u003ctd\u003e${v.sensor_label}\u003c/td\u003e\r\n      \u003ctd\u003e${v.sensor_id}\u003c/td\u003e\r\n      \u003ctd\u003e${getSensorType(v.sensor_type_id)}\u003c/td\u003e\r\n      \u003ctd\u003e${v.battery_level}\u003c/td\u003e\r\n      \u003ctd\u003e${v.signal_strength}\u003c/td\u003e\r\n      \u003ctd\u003e${v.latest_payload}\u003c/td\u003e\r\n      \u003ctd\u003e${v.last_active}\u003c/td\u003e\r\n      \u003c/tr\u003e`);\r\n    });\r\n}\r\n\r\n$(document).on(\"click\",\"#gInfo\",function(){\r\n    let gatewaysAry=datasources.zoneAndassetInfo.latestData().gateways;\r\n   let tableObj=`\r\n   \u003ctable class=\"table\"\u003e\r\n    \u003cthead class=\"thead-light\"\u003e\r\n      \u003ctr\u003e\r\n        \u003cth\u003eName\u003c/th\u003e\r\n        \u003cth\u003eGatewayID\u003c/th\u003e\r\n        \u003cth\u003eNetworkID\u003c/th\u003e\r\n        \u003cth\u003eBatteryLevel\u003c/th\u003e\r\n        \u003cth\u003eSignalStrength\u003c/th\u003e\r\n        \u003cth\u003eEmloyee\u003c/th\u003e\r\n      \u003c/tr\u003e\r\n    \u003c/thead\u003e\r\n    \u003ctbody\u003e\r\n    \u003c/tbody\u003e\r\n  \u003c/table\u003e`;\r\n   \r\n$(\"#gateways_sensors_info .modal-title\").text(\"Gateways Details\");\r\n$(\"#gateways_sensors_info .modal-body\").html(tableObj);\r\ngatewaysrows(gatewaysAry);\r\n});\r\n\r\n$(document).on(\"click\",\"#sInfo\",function(){\r\n    let sensorsAry=datasources.zoneAndassetInfo.latestData().sensors;\r\n   let tableObj=`\r\n   \u003ctable class=\"table\"\u003e\r\n    \u003cthead class=\"thead-light\"\u003e\r\n      \u003ctr\u003e\r\n        \u003cth\u003eName\u003c/th\u003e\r\n        \u003cth\u003eSensorID\u003c/th\u003e\r\n        \u003cth\u003eSensorType\u003c/th\u003e\r\n        \u003cth\u003eBatteryLevel\u003c/th\u003e\r\n        \u003cth\u003eSignalStrength\u003c/th\u003e\r\n        \u003cth\u003eLatestPayload\u003c/th\u003e\r\n        \u003cth\u003eLastActive\u003c/th\u003e\r\n      \u003c/tr\u003e\r\n    \u003c/thead\u003e\r\n    \u003ctbody\u003e\r\n    \u003c/tbody\u003e\r\n  \u003c/table\u003e`;\r\n   \r\n   $(\"#gateways_sensors_info .modal-title\").text(\"Sensors Details\");\r\n$(\"#gateways_sensors_info .modal-body\").html(tableObj);\r\nsensorsrows(sensorsAry);\r\n});\r\n\r\n\r\n\r\nfunction assetTypeById(assetTypeId){\r\nif (datasources.getAssetTypes.lastUpdated) {\r\n    try {\r\n        const assetTypes = datasources.getAssetTypes.latestData().results.payload.DATA;\r\n       assetTypeName = assetTypes.find((t) =\u003e t.item_id == assetTypeId).name\r\n    } catch(e) {\r\n        console.warn('Unable to get asset type name', e);\r\n    }\r\n}\r\n};\r\nlet formSourceObj={};\r\nlet commonObj={\r\n\"dataType\": \"string\",\r\n\"display\": true,\r\n\"inputType\": \"text\",\r\n\"isReadOnly\":true\r\n}\r\nif((this.datasource).hasOwnProperty(\"assets\"))\r\n{\r\n    formTitle=\"Zone Information\";\r\nformSourceObj={\r\ndata: {\r\n    \"Zone Name\":this.datasource.name,\r\n    \"Location\":this.datasource.location_name,\r\n    \"Gateways\":this.datasource.gateways.length,\r\n    \"Sensors\":this.datasource.sensors.length,\r\n    \"Infobtn\":true\r\n},\r\noverrideFieldSettings: {\r\n    \"Zone Name\":{\r\n        ...commonObj,\r\n        \"key\": \"Zone Name\",\r\n        \"name\": \"Zone Name\",\r\n        \"orderIdx\": 1\r\n    },\r\n    \"Location\":{\r\n         ...commonObj,\r\n        \"key\": \"Location\",\r\n        \"name\": \"Location\",\r\n        \"orderIdx\": 2\r\n    },\r\n    \"Gateways\":{\r\n          ...commonObj,\r\n        // \"dataType\": \"string\",\r\n        // \"display\": true,\r\n        // \"inputType\": \"HTML\",\r\n        // \"isReadOnly\":true,\r\n        \"key\": \"Gateways\",\r\n        \"name\": \"Gateways\",\r\n       // \"parser\":{HTML:\"\u003clabel\u003esdvfsd\u003c/label\u003e\u003cinput name='dfcgds' value='5'\u003e\"},\r\n        \"orderIdx\": 3\r\n    },\r\n    \"Sensors\":{\r\n         ...commonObj,\r\n        \"key\": \"Sensors\",\r\n        \"name\": \"Sensors\",\r\n        \"orderIdx\": 4\r\n    },\r\n    \"Infobtn\":{\r\n        \"dataType\": \"bool\",\r\n        \"display\": true,\r\n        \"inputType\": \"HTML\",\r\n        \"isReadOnly\":false,\r\n        \"key\": \"Infobtn\",\r\n        \"name\": \"Infobtn\",\r\n       \"parser\":{HTML:\"\u003cdiv class='btn-group d-flex' role='group'\u003e\u003cbutton class='btn btn-primary btn-sm' data-toggle='modal' data-target='#gateways_sensors_info' id='gInfo'\u003eGateways Info\u003c/button\u003e\u0026nbsp;\u0026nbsp;\u003cbutton class='btn btn-primary btn-sm' data-toggle='modal' data-target='#gateways_sensors_info' id='sInfo'\u003eSensors Info\u003c/button\u003e\u003c/div\u003e\"},\r\n        \"orderIdx\": 5\r\n    },\r\n\r\n}\r\n};\r\n}else{\r\n    formTitle=\"Asset Information\";\r\n    assetTypeId=this.datasource.asset_type_id;\r\n    assetTypeById(assetTypeId);\r\nformSourceObj={\r\ndata: {\r\n    \"Asset Name\":this.datasource.name,\r\n    \"Asset Modal\":this.datasource.location_name,\r\n    \"Asset Type\":assetTypeName,\r\n    \"Primary Employee\":this.datasource.primary_employee,\r\n    \"Last Serviced\":\"\",\r\n    \"Technician Notes\":\"\"\r\n},\r\noverrideFieldSettings: {\r\n    \"Asset Name\":{\r\n       ...commonObj,\r\n        \"key\": \"Asset Name\",\r\n        \"name\": \"Asset Name\",\r\n        \"orderIdx\": 1\r\n    },\r\n    \"Asset Modal\":{\r\n        ...commonObj,\r\n        \"key\": \"Asset Modal\",\r\n        \"name\": \"Asset Modal\",\r\n        \"orderIdx\": 2\r\n    },\r\n    \"Asset Type\":{\r\n         ...commonObj,\r\n        \"key\": \"Asset Type\",\r\n        \"name\": \"Asset Type\",\r\n        \"orderIdx\": 3\r\n    },\r\n    \"Primary Employee\":{\r\n        ...commonObj,\r\n        \"key\": \"Primary Employee\",\r\n        \"name\": \"Primary Employee\",\r\n        \"orderIdx\": 4\r\n    },\r\n     \"Last Serviced\":{\r\n         ...commonObj,\r\n        \"key\": \"Last Serviced\",\r\n        \"name\": \"Last Serviced\",\r\n        \"orderIdx\": 5\r\n    },\r\n    \"Technician Notes\":{\r\n        ...commonObj,\r\n        \"key\": \"Technician Notes\",\r\n        \"name\": \"Technician Notes\",\r\n        \"orderIdx\": 6\r\n    }\r\n}\r\n};\r\n}\r\nthis.model.settings({\r\n...this.model.settings(),\r\nlistTitle: formTitle\r\n})\r\nreturn formSourceObj;"
                        }
                    },
                    "listTitle": "Zone Information",
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "a714b7f2-d634-4f42-bae4-07147a8af507": {
                "externalScripts": [],
                "id": "a714b7f2-d634-4f42-bae4-07147a8af507",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "activeItemBackgroundColor": "#428bca",
                    "activeItemFontColor": "#ffffff",
                    "activeStatusBulletColor": "green",
                    "allowFilters": false,
                    "allowSearch": true,
                    "bulletColor": "#000000",
                    "displayAttribute": "gateway_name",
                    "displayBullets": true,
                    "displayStatusIndicators": false,
                    "enableListAutoSelect": true,
                    "eventTarget": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "2d0bb3bd-46cf-4edd-9a29-d4da346933b2",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "if (this.widget) {\n    datasources.getSensors.sendData({\n        gateway_id: this.widget.gateway_id\n    })\n    return this.widget;\n}"
                        }
                    },
                    "fontColor": "#000000",
                    "inactiveStatusBulletColor": "darkred",
                    "listItemBackgroundColor": "#ffffff",
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "de4a2f56-4983-4f6d-95f8-2dc9b8f23eff",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource.results.payload.DATA;"
                        }
                    },
                    "listTitle": "",
                    "titleColor": "#000000",
                    "trackingColumnName": "item_id"
                },
                "tab": "ede2bdbc-f4ce-4e66-816a-06057704cb74",
                "type": "GROUPING_LIST_WIDGET_COMPONENT"
            },
            "a83809ab-8f04-45e9-ab2b-6b9ca21b549a": {
                "externalScripts": [],
                "id": "a83809ab-8f04-45e9-ab2b-6b9ca21b549a",
                "props": {
                    "addItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "allowAdd": false,
                    "allowDelete": false,
                    "allowExport": true,
                    "allowHighlight": false,
                    "allowSearch": true,
                    "allowUpdate": false,
                    "deleteItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "editCells": {
                        "acknowledge_date": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "8010c5e8-e357-4c9a-b33c-3e415bc13ddb",
                            "label": "Acknowledge date",
                            "name": "acknowledge_date",
                            "orderIdx": 4
                        },
                        "is_Acknowledged": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "d959b92a-786b-4b17-b841-ea1e4d03b8e6",
                            "label": "Acknowledgment Status",
                            "name": "is_Acknowledged",
                            "orderIdx": 1
                        },
                        "is_active": {
                            "dataType": "bool",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "a5246756-2147-41bc-b90b-b033779e8629",
                            "label": "Active",
                            "name": "is_active",
                            "orderIdx": 2
                        },
                        "sent_date": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "a07c66f3-95f7-4e49-82a2-37054462d009",
                            "label": "Sent date",
                            "name": "sent_date",
                            "orderIdx": 0
                        },
                        "target_users": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "5007cd73-d504-4191-b7ec-655b4f4779dd",
                            "label": "Target users",
                            "name": "target_users",
                            "orderIdx": 3
                        }
                    },
                    "enableSorting": true,
                    "evenStripeColor": "#F7F7F7",
                    "fetchGridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "gridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "var theData = {\n    keyColumn: \"item_id\", \n    data: [], \n    columns: datasources.Alerts.getCRUDSchema(), \n    count: 0\n};\n\nif(!this.datasource.getAlertHistory) return theData\n\nlet alerts = this.datasource.getAlertHistory.results.payload.DATA\n\nif(this.datasource.currentAlertConfigId \u0026\u0026 this.datasource.currentAlertConfigId !== 'none') {\n    alerts = alerts.filter(alert =\u003e alert.configuration_id === this.datasource.currentAlertConfigId)\n}\ntheData.data = alerts\n// .map((a) =\u003e ({...a, is_active: true }))\n.map((a) =\u003e ({\n    ...a, \n   is_active: a.is_active ? 'true' : 'false',\n   sent_date:(new Date(a.sent_date)).toLocaleString().replace(\",\",\"\"),\n   acknowledge_date:(new Date(a.acknowledge_date)).toLocaleString().replace(\",\",\"\"),\n   is_Acknowledged:a.acknowledge_date ? 'Acknowledged':'Not Acknowledged'\n    }))\ntheData.count = theData.data.length\n\nreturn theData;"
                        }
                    },
                    "hidePaginationWhenNotNeeded": false,
                    "highlightColor": "#b7cad9",
                    "highlightItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "oddStripeColor": "#FFFFFF",
                    "pageSize": 25,
                    "updateItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    }
                },
                "tab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                "type": "CrudgridWidget"
            },
            "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6": {
                "externalScripts": [],
                "id": "aa4cce86-3da2-4f13-a45a-3bb7ed69bea6",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "d0076a83-4237-4bfa-9fea-19cbe248c81c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eSensors\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth width=\"50\"\u003e\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eAsset\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"sensor-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "\n// edit is sensor_id\n// delete is item_id  :(\nif (!this.datasource.getSensors || !this.datasource.getSensors.results) return\n\nconst listItems = this.datasource.getSensors.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentSensor === data.sensor_id;\n    let sensor_type\n    if(datasources.getSensorTypes.latestData()) {\n      sensor_type = datasources.getSensorTypes.latestData().results.payload.DATA.find(d =\u003e d.item_id === data.sensor_type_id)\n    }\n    let asset\n    if(datasources.getAssets.latestData()) {\n      asset = datasources.getAssets.latestData().results.payload.DATA.find(d =\u003e d.item_id === data.asset_id)\n    }\n    return `\n    \u003ctr class=\"sensor-item selectable-list-item ${selected ? \"selected\" : ''}\" data-item-id=\"${data.sensor_id}\"\u003e\n    ${JSON.stringify(data)}\n    \u003ctd\u003e ${sensor_type ? `\u003cdiv class=\"circle-icon d-float\"\u003e${sensor_type.icon}\u003c/div\u003e` : ''}\n\u003c/td\u003e\n      \u003ctd\u003e\n           ${data.sensor_label}\n      \u003cdiv class=\"text-muted\"\u003e${data.sensor_name}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e${asset ? `\u003cbutton class=\"btn p-0 btn-link asset-link\" data-asset-id=${asset.item_id}\u003e${asset.name}\u003c/button\u003e` : ''}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-sensor\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n\n$(\"#sensor-list\").html(listItems)\n\n\n\nif (!window.hasSetupSensorListListeners) {\n  window.hasSetupSensorListListeners = true\n  $(\"#sensors-list\").html(listItems)\n  $(\"body\").on('click', '.delete-sensor', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this sensor?')) {\n      datasources.deleteSensor.sendData({ sensor_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getSensors.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n        datasources.getOrphanSensorData.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.sensor-item', ({ currentTarget }) =\u003e {\n    datasources.currentSensor.sendData(currentTarget.dataset.itemId)\n  })\n\n  $(\"body\").on('click', '.asset-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/assets`)\n    datasources.currentAssetId.sendData(currentTarget.dataset.assetId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "6540ae2b-4521-4969-93f0-1aa46fda23b7",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "af6bcab9-5234-4eb3-84f2-ff6ffb599efc": {
                "externalScripts": [],
                "id": "af6bcab9-5234-4eb3-84f2-ff6ffb599efc",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "#sensor-table-container thead{\r\n    font-size: 15px;\r\n     font-family: 'bubbler one';\r\n}\r\n#sensor-table-container tbody{\r\n    font-size: 14px;\r\n}",
                            "HTML": "\u003cdiv id=\"sensor-table-container\"\u003e\n  \u003c!-- \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003e#\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eFirst\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eLast\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eHandle\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"row\"\u003e1\u003c/th\u003e\n      \u003ctd\u003eMark\u003c/td\u003e\n      \u003ctd\u003eOtto\u003c/td\u003e\n      \u003ctd\u003e@mdo\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n  \u003c/table\u003e --\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\nconst columns = [{key: 'sensor_id', label: 'Sensor ID'}, {key: 'sensor_name', label: 'Sensor Name'}, {key: 'latest_payload', label: 'Current Reading'}, {key: 'battery_level', label: 'BatteryLevel'}, {key: 'signal_strength', label: 'SignalStrength'}, \n{key: 'last_active', label: 'Reading On', format: (date) =\u003e {\n    try {\n        return new Date(date).toLocaleString();\n    } catch(e) {\n        return date;\n    }\n    \n}}]\n\nconst buildTable = (sensors) =\u003e {\n    const myContainer = $('#sensor-table-container');\n    const table = $('\u003ctable\u003e\u003c/table\u003e');\n    const tHead = $('\u003cthead\u003e\u003c/thead\u003e');\n    const tHeadRow = $('\u003ctr\u003e\u003c/tr\u003e');\n    const tBody = $('\u003ctbody\u003e\u003c/tbody\u003e');\n\n    columns.forEach((c) =\u003e {\n        const tHeadColumn = $('\u003cth scope=\"col\"\u003e\u003c/th\u003e');\n        tHeadColumn.html(c.label);\n        tHeadRow.append(tHeadColumn);\n    })\n    \n    tHead.append(tHeadRow);\n    table.append(tHead);\n    table.append(tBody);\n\n    sensors.forEach((s) =\u003e {\n        const tBodyRow = $('\u003ctr\u003e\u003c/tr\u003e');\n        columns.forEach((c) =\u003e {\n            const td = $('\u003ctd\u003e\u003c/td\u003e');\n            const text = c.format ? c.format(s[c.key]) : s[c.key];\n            if(c.key==\"battery_level\"){\n  if (text \u003e= 50 \u0026\u0026 text \u003c= 100) {\n     \n  td.append(\"\u003ci class='fa fa-battery-full' style='font-size:18px;color:green'\u003e\u003c/i\u003e\u003cbr/\u003e\" +text + \"%\");\n } else if (text \u003e= 26 \u0026\u0026 text \u003c= 49) {\n  td.append(\"\u003ci class='fa fa-battery-half' style='font-size:18px;color:amber'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text + \"%\");\n} else if (text \u003e= 1 \u0026\u0026 text \u003c= 25) {\n  td.append(\"\u003ci class='fa fa-battery-quarter' style='font-size:18px;color:red'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text+ \"%\");\n  } else {\n td.append(\"\u003ci class='fa fa-battery-empty' style='font-size:18px;color:red'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text + \"%\");\n  }\n\n\n    }else if(c.key==\"signal_strength\"){\n\n          if (text \u003e= 50 \u0026\u0026 text \u003c= 100) {\n  td.append(\"\u003ci class='fa fa-signal' style='font-size:18px;color:green'\u003e\u003c/i\u003e\u003cbr/\u003e\" +text + \"%\");\n } else if (text \u003e= 26 \u0026\u0026 text \u003c= 49) {\n td.append(\"\u003ci class='fa fa-signal' style='font-size:18px;color:#FFC200'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text + \"%\");\n} else if (text \u003e= 1 \u0026\u0026 text \u003c= 25) {\n  td.append(\"\u003ci class='fa fa-signal' style='font-size:18px;color:red'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text+ \"%\");\n  } else {\n  td.append(\"\u003ci class='fa fa-signal' style='font-size:18px;color:black'\u003e\u003c/i\u003e\u003cbr/\u003e\" + text + \"%\");\n  }\n\n            }\n            else{\n                td.html(text);\n            }\n          \n            tBodyRow.append(td);\n        })\n        tBody.append(tBodyRow);\n    })\n\n    table.addClass('table table-striped')\n    myContainer.empty();\n    myContainer.append(table);\n}\n\nconst handleSensors = (data) =\u003e {\n    console.log('handle', data);\n    buildTable(data.results.payload.DATA);\n}\n\nif (!window.hasSubscribedToGetSensors) {\n    window.hasSubscribedToGetSensors = true;\n    datasources.getSensors.latestData.subscribe(handleSensors);\n}\n\nif (datasources.getSensors.lastUpdated) {\n    handleSensors(datasources.getSensors.latestData());\n}"
                        }
                    }
                },
                "tab": "90c50b68-ea13-44fa-ae03-530a2a02a0d8",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76": {
                "externalScripts": [],
                "id": "b3dc8f97-515a-4a0c-98af-7fc2f40a8e76",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput accept=\".csv\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            const customer_id = datasources.currentCustomer.latestData().item_id\n\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        customer_id,\n                        battery_level: d.battery_level,\n                        last_active: d.last_active,\n                        latest_payload: d.latest_payload,\n                        sensor_id: d.sensor_id,\n                        sensor_label: d.sensor_label,\n                        gateway_id: d.gateway_id,\n                        location_id: d.location_id,\n                        contact_id: d.contact_id,\n                        asset_id: d.asset_id,\n                        sensor_name: d.sensor_name,\n                        sensor_type_id: d.sensor_type_id,\n                        signal_strength: d.signal_strength,\n                        created_date: d.created_date,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createSensor.sendData({ sensors: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getSensors.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    reader.readAsText(f);\n})\n"
                        }
                    }
                },
                "tab": "6540ae2b-4521-4969-93f0-1aa46fda23b7",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "bbd39a7c-8506-4d6b-8edf-347f9e956ea9": {
                "externalScripts": [],
                "id": "bbd39a7c-8506-4d6b-8edf-347f9e956ea9",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput accept=\".csv\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        customer_id: d.customer_id,\n                        employee_id: d.employee_id,\n                        gateway_description: d.gateway_description,\n                        gateway_id: d.gateway_id,\n                        gateway_label: d.gateway_label,\n                        gateway_name: d.gateway_name,\n                        location_id: d.location_id,\n                        network_id: d.network_id,\n                        notes: d.notes,\n                        signal_strength: d.signal_strength,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createGateway.sendData({ gateways: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getGateways.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    reader.readAsText(f);\n})\n"
                        }
                    }
                },
                "tab": "b782f872-9afb-4d2a-ac3e-c0520c5e2b82",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "bc2ddfa3-9279-46c1-a746-928c91303454": {
                "externalScripts": [],
                "id": "bc2ddfa3-9279-46c1-a746-928c91303454",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "0a4a0e8e-b82e-44a7-ab6e-913b53db865d",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch3 id=\"my-sensor-type-title\"\u003e\n\u003c/h3\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-sensor\" class=\"btn btn-link\"\u003eAdd Sensor\u003c/div\u003e`\n$(\"#my-sensor-type-title\").html(this.datasource ? `Update Sensor Type ${button}` : `Add Sensor Type`)\n\nif(!window.hasAddedSensorTitleListeners) {\n    window.hasAddedSensorTitleListeners = true\n    $('body').on('click', '#switch-to-add-sensor', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentSensorTypeId.sendData('none')\n    })\n}"
                            }
                        }
                    }
                },
                "tab": "72fdad00-7d66-4b05-8d76-5caa9d1df5fb",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "be8b3330-a674-4fa5-bf06-735f248c7028": {
                "externalScripts": [],
                "id": "be8b3330-a674-4fa5-bf06-735f248c7028",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "compactForm": true,
                    "displayColumn": "name",
                    "editColumns": {
                        "asset_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "3f4eeddd-3917-4099-9e3d-68d7e878568d",
                            "label": "Asset",
                            "name": "asset_id",
                            "orderIdx": 1,
                            "widthPercent": 50
                        },
                        "asset_type_id": {
                            "dataType": "string",
                            "display": true,
                            "errorText": "",
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "cfd6c6e6-85c4-45e3-b62f-df232434fa2c",
                            "label": "Asset Type",
                            "name": "asset_type_id",
                            "orderIdx": 2,
                            "required": true,
                            "validationType": "",
                            "widthPercent": 50
                        },
                        "battery_level": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "413f35d8-5b19-49a4-8f7f-4f8dbe8b9919",
                            "label": "Battery Level",
                            "name": "battery_level",
                            "orderIdx": 8,
                            "widthPercent": 50
                        },
                        "customer_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "6e1eceb6-c17e-4c08-a247-d50f786f8e2f",
                            "label": "Customer Name",
                            "name": "customer_id",
                            "orderIdx": 6,
                            "widthPercent": 50
                        },
                        "gateway_id": {
                            "dataType": "int",
                            "display": true,
                            "inputType": "number",
                            "isReadOnly": true,
                            "key": "8f8d1871-62cf-4d0f-badc-aba113bdba1e",
                            "label": "Gateway ID",
                            "name": "gateway_id",
                            "orderIdx": 5
                        },
                        "gateway_label": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "0ba8bd6c-2107-49ac-8941-6b97a8af5171",
                            "label": "Gateway Name",
                            "name": "gateway_label",
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "dropdownOptions": [
                                "technician",
                                "engineer",
                                "manager"
                            ],
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "afd6c6e6-3917-4099-9e3d-68d7e878568d",
                            "label": "Location Name",
                            "name": "location_id",
                            "orderIdx": 3
                        },
                        "signal_strength": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isReadOnly": true,
                            "key": "8b5045eb-8602-48e8-8d07-482cd4395b3d",
                            "label": "Signal Strength",
                            "name": "signal_strength",
                            "orderIdx": 7,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "selectedAssetMetadata",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "5ab20b1b-d4cf-4c0a-a193-63ec6492eb68",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let locationName = this.datasource.location_id;\r\nif (datasources.getLocations.lastUpdated) {\r\n    try {\r\n        const locs = datasources.getLocations.latestData().results.payload.DATA;\r\n        locationName = locs.find((l) =\u003e l.item_id === this.datasource.location_id).name;\r\n\r\n    } catch (e) {\r\n        console.warn('Unable to get location name', e);\r\n    }\r\n}\r\nlet assetName = this.datasource.location_id;\r\nlet asset_type_id;\r\nif (datasources.getAssets.lastUpdated) {\r\n    try {\r\n        const assets = datasources.getAssets.latestData().results.payload.DATA;\r\n        assetName = assets.find((t) =\u003e t.location_id === this.datasource.location_id).name;\r\n        asset_type_id=assets.find((t) =\u003e t.location_id === this.datasource.location_id).asset_type_id;\r\n    } catch(e) {\r\n        console.warn('Unable to get asset type name', e);\r\n    }\r\n}\r\n\r\nlet customerName = this.datasource.customer_id;\r\nif (datasources.currentCustomer.lastUpdated) {\r\n    try {\r\n        customerName = datasources.currentCustomer.latestData().name;\r\n    } catch(e) {\r\n        console.warn('Unable to get current customer name', e);\r\n    }\r\n}\r\nlet assetTypeName; \r\nif (datasources.getAssetTypes.lastUpdated) {\r\n    try {\r\n        const assetTypes = datasources.getAssetTypes.latestData().results.payload.DATA;\r\n        assetTypeName = assetTypes.find((t) =\u003e t.item_id === asset_type_id).name\r\n    } catch(e) {\r\n        console.warn('Unable to get asset type name', e);\r\n    }\r\n}\r\n\r\nreturn {\r\n    data: {\r\n        ...this.datasource,\r\n        asset_id:assetName,\r\n        location_id: locationName,\r\n        asset_type_id: assetTypeName,\r\n        customer_id: customerName\r\n    }\r\n};"
                        }
                    },
                    "listTitle": "Asset Information",
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "4edd96aa-390c-4655-b192-6bf4adb47bfa",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "brand": {
                "externalScripts": [],
                "id": "brand",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".nav-pills .nav-link.active, .nav-pills .show\u003e.nav-link {\n    color: #fff;\n    background-color: #0D62A5;\n}\n.btn-primary {\n    color: #fff;\n    background-color: #0D62A5;\n    border-color: #0D62A5;\n}\n#selectedAssetMetadata .list-title, #selectedAssetMetadata .item-title {\n    margin-bottom: 0 !important;\n}\n#selectedAssetMetadata form, #selectedAssetMetadata form input {\n    font-size: .75rem !important;\n}\n\n#selectedAssetMetadata form div.col-12 {\n    margin-top: 0 !important;\n}\n\ndiv#portal-pane- .card-header {\n    padding: .25rem .75rem;\n    height: 5px;\n    min-height: 30px;\n}\n\n\n/* .field.field-long, .field.field-lat, \n.field.field-location_id,\n.field.field-sensor_id, .field.field-sensor_name,\n.field.field-asset_type_id, .field.field-gateway_id,\n.field.field-network_id, .field.field-employee_id,\n.field.field-first_name, .field.field-last_name,\n.field.field-phone_number, .field.field-email,\n.field.field-password, .field.field-pin,\n.field.field-minimum, .field.field-maximum,\n.field.field-latest_payload, .field.field-last_active\n {\n    width: calc(50% - .5em);\n    display: inline-block;\n}\n .field.field-long, .field.field-sensor_id, .field.field-asset_type_id,\n .field.field-network_id, .field.field-employee_id, .field.field-last_name,\n .field.field-password, .field.field-pin, .field.field-maximum,\n .field.field-last_active,  #sensor-form-widget .field.field-location_id\n {\n    margin-left: 1em; \n } */\n\n.circle-icon {\n    background: #c9c9ca;\n    padding: .3em;\n    border-radius: 100px;\n}\n\n.circle-icon svg {\n    width: 1.5em;\n    height: 1.5em;\n    fill: white !important;\n}\n\n#location-form-widget \u003e div \u003e div, #sensor-form-widget \u003e div \u003e div, #gateway-form-widget \u003e div \u003e div, #my-form-widget \u003e div \u003e div {\n    padding: 0;\n}\n\n.selectable-list-item:hover  {\n    background: aliceblue !important;\n    cursor: pointer;\n}\n\n.selectable-list-item.selected {\n   background:  #cee1f1 !important\n}\n\n.form-fields {\n    margin-top: -2em;\n}\n\n/* stop dashboard form from getting half size */\n#selectedAssetMetadata .field {\n    width: 100%;\n    margin: 0;\n}\n\n#sensors-form {\n    overflow-y: auto;\n}\n\n#sensors-form .input-section {\n    height: 100px;\n}\n\n.ecbsra {\n    max-width: 100vw !important;\n}\n",
                            "HTML": "\u003cdiv\u003e\n  \u003cimg id=\"logoIcon\" src=\"https://corp.ingrammicro.com/getattachment/6838aceb-aa32-4075-9d75-7eb22f0d6bd5/logo-ingram-micro.png.aspx\" style=\"padding-left:8px;height:30px;margin-top: -8px;\"\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n\nconst getCustomerEmployees = (customerId) =\u003e {\n    datasources.getEmployees.sendData({\n        customer_id: customerId\n    })\n}\n\nconst getCustomerLocations = (customerId) =\u003e {\n    datasources.getLocations.sendData({\n        customer_id: customerId\n    })\n}\n\nconst getCustomerAssets = (customerId) =\u003e {\n    datasources.getAssets.sendData({\n        customer_id: customerId\n    })\n}\n\nconst getCustomerAlertTypes = (customerId) =\u003e {\n    return datasources.getAlertTypes.sendData({\n        customer_id: customerId\n    });\n}\n\nconst getCustomerAlertConfigurations = (customerId) =\u003e {\n    console.log('call get customer alert configs', datasources.getAlertConfigurations);\n    return datasources.getAlertConfigurations.sendData({\n        customer_id: customerId\n    })\n}\n\nconst getCustomerAlerts = (customerId) =\u003e {\n    console.log('call getAlerts')\n    datasources.getAlertHistory.sendData({ customer_id: customerId })\n    return datasources.getAlerts.sendData({\n        customer_id: customerId\n    })\n}\n\nconst getAlertInfo = (customerId) =\u003e {\n    getCustomerAlertTypes(customerId)\n        .then(() =\u003e getCustomerAlertConfigurations(customerId)\n            .then(() =\u003e getCustomerAlerts(customerId)))\n}\n\nconst getSensorTypes = () =\u003e {\n    datasources.getSensorTypes.sendData()\n}\n\nconst getSensors = (id) =\u003e {\n    datasources.getSensors.sendData({\n        customer_id: id\n    })\n}\n\nconst getCustomerTests = (id) =\u003e {\n    datasources.getTests.sendData({\n        customer_id: id\n    })\n}\n\nconst getCustomerTestTypes = (id) =\u003e {\n    datasources.getTestTypes.sendData({\n        customer_id: id\n    })\n}\n\nconst getCustomerGateways = (customerId) =\u003e {\n    datasources.getGateways.sendData({\n        customer_id: customerId,\n    }).then((data) =\u003e {\n        if (data) {\n            datasources.customerGateways.sendData(data);\n        }\n    })\n}\n\nconst getCustomerInfo = (id) =\u003e {\n    datasources.getCustomers.sendData({\n        customer_id: id,\n    }).then((data) =\u003e {\n        try {\n            datasources.currentCustomer.sendData(data.results.payload.DATA[0]);\n            getCustomerLocations(id);\n            getCustomerAssets(id);\n            getAlertInfo(id);\n            getCustomerEmployees(id);\n            getSensorTypes();\n            getSensors();\n            getCustomerGateways(id);\n            getCustomerTests(id);\n            getCustomerTestTypes(id);\n        } catch (e) {\n            console.error('Error setting current customer', e);\n        }\n    })\n}\n\nif (!window.hasFetchedCustomerInfo) {\n    window.hasFetchedCustomerInfo = true;\n    CB_PORTAL.ClearBlade.User().getUser((err, data) =\u003e {\n        if (!err) {\n            console.log('got user', data);\n            datasources.currentEmployee.sendData(data);\n            getCustomerInfo(data.customer_id);\n        }\n    })\n}\n\n// needs to be outside of the widgets with their limited width and hide overflow\n$(\"body\").append(\n    ` \n\u003cdiv class=\"modal fade\" id=\"createRuleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"createRuleModalLabel\" aria-hidden=\"true\"\u003e\n\t\u003cdiv class=\"modal-dialog\" role=\"document\"\u003e\n\t\t\u003cdiv class=\"modal-content\"\u003e\n\t\t\t\u003cdiv class=\"modal-header\"\u003e\n\t\t\t\t\u003ch5 class=\"modal-title\" id=\"alert-settings-title\"\u003eModal title\u003c/h5\u003e\n\t\t\t\t\u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\u003e\n          \u003cspan aria-hidden=\"true\"\u003e\u0026times;\u003c/span\u003e\n        \u003c/button\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\u003cdiv class=\"modal-body\" id=\"alert-settings\"\u003e\n\t\t\t\t...\n\t\t\t\u003c/div\u003e\n\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cdiv class=\"modal-footer\"\u003e\n\t\t\t\t\t\u003cbutton type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"\u003eCancel\u003c/button\u003e\n\t\t\t\t\t\u003cbutton type=\"submit\" id=\"submit-btn\" data-dismiss=\"modal\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n\t\t\t\t\u003c/div\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n  `\n)\n\n$(\"#logoIcon\").click(function () {\n    CB_PORTAL.selectPage(\"/Home\");\n})\n\nconst ruleOperators = {\n    GT: 'GT',\n    LT: 'LT',\n    EQ: 'EQ'\n}\n\nconst filterRulesBySensorId = (rules, id) =\u003e {\n    try {\n        for (let i = 0, len = rules.length; i \u003c len; i++) {\n            if (rules[i].sensor_id === id) {\n                return rules[i];\n            }\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nwindow.getRuleForSensorById = (alertConfigs, id) =\u003e {\n    try {\n        for (let i = 0, len = alertConfigs.length; i \u003c len; i++) {\n            const rules = JSON.parse(alertConfigs[i].rules);\n            const sensorRules = filterRulesBySensorId(rules, id);\n            if (sensorRules) {\n                return sensorRules;\n            }\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nwindow.getAlertConfigForSensorById = (id) =\u003e {\n    if (datasources.getAlertConfigurations.lastUpdated) {\n        try {\n            const configs = datasources.getAlertConfigurations.latestData().results.payload.DATA;\n            return getRuleForSensorById(configs, id);\n        } catch (e) {\n            console.warn('Unable to get alert config for sensor with id', id, e);\n        }\n    }\n}\n\nwindow.doAnySensorsCrossThreshold = (sensors = []) =\u003e {\n    try {\n        for (let i = 0, len = sensors.length; i \u003c len; i++) {\n            const rule = window.getAlertConfigForSensorById(sensors[i].sensor_id);\n            if (doesSensorCrossThreshold(rule, sensors[i].latest_payload)) {\n                return true;\n            }\n        }\n    } catch (e) {\n        console.error('Failed to check if sensors cross alert threshold', e);\n        return false;\n    }\n    return false;\n}\n\nwindow.doesSensorCrossThreshold = (rule, value) =\u003e {\n    if (rule) {\n        try {\n            const val = Number(value);\n            const ruleThreshold = Number(rule.value);\n            let crossedThreshold = false;\n            switch (rule.operator) {\n                case ruleOperators.GT:\n                    crossedThreshold = val \u003e ruleThreshold;\n                    break;\n                case ruleOperators.LT:\n                    crossedThreshold = val \u003c ruleThreshold;\n                    break;\n                case ruleOperators.EQ:\n                    crossedThreshold = val === ruleThreshold;\n                    break;\n            }\n            return crossedThreshold;\n        } catch (e) {\n            console.error('Failed to check if sensor crossed threshold', e);\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\n\nwindow.getFillColorForSensor = (rule, value) =\u003e {\n    if (rule) {\n        try {\n            return doesSensorCrossThreshold(rule, value) ? 'red' : 'green';\n        } catch (e) {\n            console.warn('Unable to get fill color for sensor', rule, value, e);\n        }\n    }\n    return 'green';\n}\n\nwindow.parseDataFromSensor = (sensorInfo) =\u003e {\n    switch (sensorInfo.sensorType.data_type) {\n        case 'int':\n            if (sensorInfo.message.sensor_message.dataType === \"Percentage|TemperatureData\") {\n                return Number(sensorInfo.message.sensor_message.dataValue.split('|')[0])\n            } else {\n                return Number(sensorInfo.message.sensor_message.dataValue)\n            }\n        case 'bool':\n            return sensorInfo.message.sensor_message.dataValue === 'True' ? true : false;\n    }\n}\n\nwindow.tryAgain = (checkFn, callback, timeout, maxTries) =\u003e {\n    let numOfTries = 0;\n    const innerTry = () =\u003e {\n        console.log('trying', numOfTries);\n        if (checkFn()) {\n            callback();\n        } else if (numOfTries \u003c maxTries) {\n            numOfTries++;\n            setTimeout(innerTry, timeout);\n        } else {\n            console.error('reached max number of tries');\n        }\n    }\n    innerTry();\n}\n\n//$(\"#foodTestData .ReactTable .crud-row .rt-td:nth-child(2) .text-muted\").css(\"color\",\"green !important\");"
                        }
                    }
                },
                "tab": "HEADER",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "c068e00e-7b55-419c-8cef-a2675aa36c6f": {
                "externalScripts": [],
                "id": "c068e00e-7b55-419c-8cef-a2675aa36c6f",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput accept=\".csv\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            const customer_id = datasources.currentCustomer.latestData().item_id\n\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        asset_type_id: d.asset_type_id,\n                        comments: d.comments,\n                        location_id: d.location_id,\n                        name: d.name,\n                        primary_employee: d.primary_employee,\n                        customer_id\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createAsset.sendData({ assets: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getAssets.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    reader.readAsText(f);\n})\n"
                        }
                    }
                },
                "tab": "e28b4275-d81d-4b77-a339-6ab6d9de0eec",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "c1b98710-a903-4fb9-b3c1-3d3265538da3": {
                "externalScripts": [],
                "id": "c1b98710-a903-4fb9-b3c1-3d3265538da3",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "c79fcbba-882d-4147-b0c1-841b1302784f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"employee-list-title\"\u003eAdd Employee\u003c/h2\u003e",
                                "JavaScript": "$(\"#employee-list-title\").html(\n    (this.datasource.currentEmployeeAdminPage \u0026\u0026 this.datasource.currentEmployeeAdminPage !== 'none') ? `\nUpdate Employee \n\u003cbutton id=\"switch-to-add-employee\" class=\"btn btn-link\"\u003eAdd Employee\u003c/button\u003e\n` : 'Add Employee')\n\n$('#switch-to-add-employee').click(function() {\n    datasources.currentEmployeeAdminPage.sendData(\"none\")\n    // $('.selected').removeClass('selected')\n})\n"
                            }
                        }
                    }
                },
                "tab": "fffcbc96-baf7-44bb-9b72-e499e67c92d5",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "c20cec5e-7974-4c1f-ba9f-ce7c3c91bc8d": {
                "externalScripts": [],
                "id": "c20cec5e-7974-4c1f-ba9f-ce7c3c91bc8d",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#For_Exporting{\n margin-top: 82px;\n}\n",
                            "HTML": "\u003cdiv\u003e\n  \u003cbutton onclick=\"exportTblcsv()\" id=\"For_Exporting\" type=\"button\" class=\"btn btn-info\" \u003e\u003ci class=\"fas fa-download\"\u003e\u003c/i\u003e\u003c/button\u003e\n\u003c/div\u003e",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"statis_tble\";\n     var filename = \"alertsList.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "8f8afc61-d521-4244-b84e-6de6cd008433",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "c225028f-9268-4fa9-9e6f-a1323ea45a7d": {
                "externalScripts": [],
                "id": "c225028f-9268-4fa9-9e6f-a1323ea45a7d",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput text=\"asdf\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "// $(\":file\").filestyle({ input: false, text: \"Upload CSV\" });\n\n$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            const customer_id = datasources.currentCustomer.latestData().item_id\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        customer_id,\n                        name: d.name,\n                        location_type: d.location_type,\n                        icon: d.icon,\n                        boundaries: d.boundaries,\n                        description: d.description,\n                        lat: d.lat,\n                        long: d.long,\n                        address: d.address,\n                        manager_id: d.manager_id,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createLocation.sendData({ locations: js }).then(res =\u003e {\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getLocations.sendData({ customer_id })\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n\n})\n"
                        }
                    }
                },
                "tab": "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "c50121ae-147d-41dc-af70-50fb2661b618": {
                "externalScripts": [],
                "id": "c50121ae-147d-41dc-af70-50fb2661b618",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n  \u003cbutton onclick=\"exportTblcsv()\"  type=\"button\" class=\"btn btn-info\"\u003e Download CSV format\u003c/button\u003e\n   \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e name  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e location \u003c/b\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"7\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "cc12d6a5-6892-4017-88ae-60f487dc0724": {
                "externalScripts": [],
                "id": "cc12d6a5-6892-4017-88ae-60f487dc0724",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "assets": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "key": "a2d31511-fdee-43fa-a23b-f033d4857de3",
                            "label": "Assets",
                            "name": "assets",
                            "orderIdx": 8,
                            "widthPercent": 50
                        },
                        "email": {
                            "dataType": "string",
                            "display": true,
                            "key": "b68abe9d-703e-403c-94ec-e468e41c5f8e",
                            "label": "Email",
                            "name": "email",
                            "options": {
                                "errorText": "Must be a valid email",
                                "validationType": "email"
                            },
                            "orderIdx": 3,
                            "required": true,
                            "widthPercent": 50
                        },
                        "first_name": {
                            "dataType": "string",
                            "display": true,
                            "key": "fd7a4960-6f74-4fed-8421-0cc2ff722f12",
                            "label": "First Name",
                            "name": "first_name",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        },
                        "last_name": {
                            "dataType": "string",
                            "display": true,
                            "key": "ae85f120-ba40-4054-ac4f-59d141b6e2ab",
                            "label": "Last Name",
                            "name": "last_name",
                            "options": {},
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "locations": {
                            "dataType": "string",
                            "display": true,
                            "key": "a345cea9-e33e-465a-8def-518246d96973",
                            "label": "Locations",
                            "name": "locations",
                            "options": {},
                            "orderIdx": 7,
                            "widthPercent": 50
                        },
                        "password": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "password",
                            "key": "e3d78c6a-68a8-445d-83d4-2622e98d3a15",
                            "label": "Password",
                            "name": "password",
                            "options": {},
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "phone_number": {
                            "dataType": "string",
                            "display": true,
                            "key": "a2f57d55-6fe8-4e51-9a70-e369b415f4a8",
                            "label": "Phone Number",
                            "name": "phone_number",
                            "options": {
                                "errorText": "Must be in format (+1 555-555-5555)",
                                "regexValidation": "^\\(\\+\\d{1,3} \\d{3}-\\d{3}-\\d{4}\\)$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 5,
                            "required": true,
                            "widthPercent": 50
                        },
                        "photo": {
                            "dataType": "string",
                            "description": "Url to an image of the employee",
                            "display": true,
                            "key": "c2e62dfb-f1ec-4317-bb66-b48eaedbaba4",
                            "label": "Photo",
                            "name": "photo",
                            "options": {},
                            "orderIdx": 9
                        },
                        "pin": {
                            "dataType": "string",
                            "display": true,
                            "key": "94dcad76-2bc3-4027-bbbf-c5da1900a94c",
                            "label": "PIN",
                            "name": "pin",
                            "options": {
                                "errorText": "Must be exactly 4 numbers",
                                "regexValidation": "^\\d{4}$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 6,
                            "required": true,
                            "widthPercent": 50
                        },
                        "user_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "31c68c08-0c57-4735-8c64-519e3264c131",
                            "name": "user_id",
                            "options": {},
                            "orderIdx": 12
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget) {\n    const { email, password, user_id, ...employee } = this.widget.data;\n    employee.customer_id = datasources.currentCustomer.latestData().item_id\n    employee.locations = JSON.stringify($(\"#locations\").val());\n    const user = {\n        email,\n        ...(password ? { password } : {}), // don't include password if not there might delete\n    }\n    console.log({ employee, user })\n    if (user_id) { // inEdit\n        return getBase64($(\"input#photo\")[0].files[0]).then((photo) =\u003e {\n            employee.photo = photo;\n            datasources.updateEmployee.sendData(\n                {\n                    email: this.widget.data.email,\n                    employee,\n                }).then((res) =\u003e {\n                    datasources.getEmployees.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                    datasources.currentEmployeeAdminPage.sendData('none')\n                })\n        })\n    } else {\n        return getBase64($(\"input#photo\")[0].files[0]).then((photo) =\u003e {\n            employee.photo = photo;\n            datasources.createEmployee.sendData({ employee, user }).then((res) =\u003e {\n                datasources.getEmployees.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentEmployeeAdminPage.sendData(email)\n                setTimeout(() =\u003e {\n                    document.querySelector('.selected').scrollIntoView();\n                }, 100)\n            })\n        })\n    }\n}\n\nfunction getBase64(file) {\n    if (file) {\n       return new Promise((resolve, reject) =\u003e {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () =\u003e resolve(reader.result);\n            reader.onerror = error =\u003e reject(error);\n        }); \n    } else {\n        const currentEmployee = datasources.getEmployees.latestData().results.payload.find(l =\u003e l.item_id === datasources.currentEmployee.latestData()) \n        return new Promise((resolve, reject) =\u003e {\n            if (currentEmployee) {\n                resolve(currentEmployee.photo);\n            } else {\n                resolve('');\n            }\n        });\n    }\n};"
                    },
                    "fontColor": "#000000",
                    "htmlId": "sensor-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "c79fcbba-882d-4147-b0c1-841b1302784f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let data = { \"a\": \"a\", locations: [] }\nlet locations,assets;\nif (this.datasource.currentEmployeeAdminPage \u0026\u0026 this.datasource.currentEmployeeAdminPage !== 'none' \u0026\u0026 this.datasource.getEmployees) {\n    data = {... this.datasource.getEmployees.results.payload.find(d =\u003e d.email === this.datasource.currentEmployeeAdminPage)};\n    data.photo = '';\n    locations = tryParse(data \u0026\u0026 data.locations) || []\n    $('#email').attr('disabled', true)\n} else {\n    $('#email').attr('disabled', false)\n}\n\nconst locationList = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#locations\").replaceWith(`\u003cselect class=\"form-control\" id=\"locations\" multiple\u003e \n    \u003coption value=\" \"\u003e--select--\u003c/option\u003e${locationList.join('')}\n    \u003cselect\u003e`)\n$(\"#locations\").val(locations)\n\n//assets code\nconst assetList = datasources.getAssets.latestData() \u0026\u0026 datasources.getAssets.latestData().results.payload.DATA.map((d) =\u003e (\n   // `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n    `\u003coption value=\"${d.name}\"\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#assets\").replaceWith(`\u003cselect class=\"form-control\" id=\"assets1\" multiple\u003e \n    \u003coption value=\" \"\u003e--select--\u003c/option\u003e${assetList.join('')}\n    \u003cselect\u003e`)\n$(\"#assets1\").val(assets)\n\n$(\"input#photo\").removeClass(\"form-control\").attr(\"type\", \"file\");\nreturn { data }\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        return \n    }\n}"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "fffcbc96-baf7-44bb-9b72-e499e67c92d5",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "d2dced0d-a256-40c6-9386-8ecb7ea170d8": {
                "externalScripts": [],
                "id": "d2dced0d-a256-40c6-9386-8ecb7ea170d8",
                "props": {
                    "addItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "allowAdd": false,
                    "allowDelete": false,
                    "allowExport": false,
                    "allowHighlight": false,
                    "allowSearch": false,
                    "allowUpdate": false,
                    "deleteItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "editCells": {
                        "compliant1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "5b54b235-1e12-4e8a-8fdf-9aa231abb629",
                            "label": "Result",
                            "name": "compliant1",
                            "orderIdx": 2
                        },
                        "customer1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "24b86689-c297-44fb-84e2-0a5df221fd61",
                            "label": "Customer",
                            "name": "customer1",
                            "orderIdx": 1
                        },
                        "end_date1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "0ad19e31-4982-4123-9059-839abb5f3383",
                            "label": "End",
                            "name": "end_date1",
                            "orderIdx": 6
                        },
                        "location1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "e0934292-4bfe-42bc-a942-a93943bd2783",
                            "label": "Location",
                            "name": "location1",
                            "orderIdx": 4
                        },
                        "sensor1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "dd59f15f-681e-4254-ac7f-be28d533588c",
                            "label": "Sensor",
                            "name": "sensor1",
                            "orderIdx": 9
                        },
                        "sensor_payload1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "ee30ebd9-f0a1-4b7f-91ad-1ed34ed4c3e5",
                            "label": "Temperature",
                            "name": "sensor_payload1",
                            "orderIdx": 8
                        },
                        "start_date1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "4148f53f-e073-4238-8ba0-5d212217d93e",
                            "label": "Start",
                            "name": "start_date1",
                            "orderIdx": 5
                        },
                        "test_type1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "8e59e74d-7527-4879-b268-cfb1f2555fab",
                            "label": "Type",
                            "name": "test_type1",
                            "orderIdx": 7
                        },
                        "tester_id1": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "readOnly",
                            "key": "45f2490a-f983-46c7-af88-8c21781c410c",
                            "label": "Tester",
                            "name": "tester_id1",
                            "orderIdx": 3
                        }
                    },
                    "enableSorting": false,
                    "evenStripeColor": "#F7F7F7",
                    "fetchGridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "gridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": ""
                        }
                    },
                    "hidePaginationWhenNotNeeded": false,
                    "highlightColor": "#b7cad9",
                    "highlightItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "oddStripeColor": "#FFFFFF",
                    "pageSize": 25,
                    "updateItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "afd1c8c7-f7dd-4569-8dde-8108fb5c1c43",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    }
                },
                "tab": "264bc588-bf8a-4daa-ba95-5f8b617808c1",
                "type": "CrudgridWidget"
            },
            "d3924192-7c0c-4768-b1d9-0c12e4bf577e": {
                "externalScripts": [],
                "id": "d3924192-7c0c-4768-b1d9-0c12e4bf577e",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eLocations\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n       \u003cth scope=\"col\"\u003e\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eType\u003c/th\u003e\n      \u003cth scope=\"col\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"locations-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if(!this.datasource.getLocations) return\n\nconst listItems = this.datasource.getLocations.results.payload.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentLocation === data.item_id\n    return `\n    \u003ctr class=\"location-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e${data.icon \u0026\u0026 `\u003cimage src=${data.icon} style=\"height:60px;\"/\u003e`}\u003c/td\u003e\n      \u003ctd class=\"location-list-item\" data-item-id=\"${data.item_id}\"\u003e\n      ${data.name}\n      \u003cdiv class=\"text-muted\"\u003e${data.description}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e${data.location_type}\u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-location\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#locations-list\").html(listItems)\n\nif (!window.hasSetupLocationListListeners) {\n  window.hasSetupLocationListListeners = true\n  $(\"#locations-list\").html(listItems)\n  $(\"body\").on('click', '.delete-location', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this location?')) {\n      datasources.deleteLocation.sendData({ location_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getLocations.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.location-item', ({ currentTarget }) =\u003e {\n   // alert(currentTarget.dataset.itemId);\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "1ac76701-cd9e-4f47-b828-ff43b0ebfa9b",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "d64494bb-feb8-43fe-a0c8-c3f3bd147a04": {
                "externalScripts": [],
                "id": "d64494bb-feb8-43fe-a0c8-c3f3bd147a04",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "55d05226-c94d-41ac-979b-b2ff92dd5ffe",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003ch2 id=\"location-list-title\"\u003eCreate Location\u003c/h2\u003e",
                                "JavaScript": "$(\"#location-list-title\").html(\n    (this.datasource \u0026\u0026 this.datasource !== 'none') ? `\nUpdate Location \n\u003cbutton id=\"switch-to-add-location\" class=\"btn btn-link\"\u003eAdd Location\u003c/button\u003e\n` : 'Add Location')\n\n$('#switch-to-add-location').click(function () {\n    datasources.currentLocation.sendData(\"none\")\n})\n"
                            }
                        }
                    }
                },
                "tab": "631a5484-2676-4858-8677-521d87366860",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "d6b2bc5f-0029-4fff-8fde-e653d92724fe": {
                "externalScripts": [],
                "id": "d6b2bc5f-0029-4fff-8fde-e653d92724fe",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".createTestError {\n    color: red;\n    font-weight: bold;\n}\n\n#testInputNotes {\n    height: 150px;\n}\n\n.successTestButton {\n    display: none;\n}\n\n.captureArea {\n    display: none;\n    flex-grow: 1;\n}\n\n.dataBox {\n    background-color: #428BCA;\n    color: white;\n    border-radius: .25rem;\n    padding: 5px;\n}\n\n#captureButton {\n    display: none;\n    background-color: darkred;\n}\n\n#pinEntryArea {\n    display: none;\n}\n\n#pinError {\n    color: darkred;\n    display: none;\n}\n\n",
                            "HTML": "\u003cdiv class=\"d-flex\"\u003e \n  \u003cdiv class=\"beginTestForm\"\u003e\n    \u003cdiv class=\"form-group row\"\u003e\n      \u003clabel for=\"testInputLocation\" class=\"col-sm-4 col-form-label\"\u003eLocation\u003c/label\u003e\n      \u003cdiv class=\"col-sm-8\"\u003e\n        \u003cselect class=\"form-control testInput\" id=\"testInputLocation\"\u003e\u003c/select\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \n    \u003cdiv class=\"form-group row\"\u003e\n      \u003clabel for=\"testInputType\" class=\"col-sm-4 col-form-label\"\u003eFood Type\u003c/label\u003e\n      \u003cdiv class=\"col-sm-8\"\u003e\n        \u003cselect class=\"form-control testInput\" id=\"testInputType\"\u003e\u003c/select\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"form-group row\"\u003e\n      \u003clabel for=\"testInputSensor\" class=\"col-sm-4 col-form-label\"\u003eProbe\u003c/label\u003e\n      \u003cdiv class=\"col-sm-8\"\u003e\n        \u003cselect class=\"form-control testInput\" id=\"testInputSensor\"\u003e\u003c/select\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"form-group row\"\u003e\n      \u003clabel for=\"testInputNotes\" class=\"col-sm-4 col-form-label\"\u003eNotes\u003c/label\u003e\n      \u003cdiv class=\"col-sm-8\"\u003e\n        \u003ctextarea class=\"form-control testInput\" id=\"testInputNotes\"\u003e\u003c/textarea\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n\n    \u003cbutton id=\"beginTestButton\" type=\"submit\" class=\"beginTestButton btn btn-primary w-100\"\u003eBegin Test\u003c/button\u003e\n    \n    \u003cspan class=\"createTestError invisible\"\u003e\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"waitingForData m-auto\"\u003e\n    \u003ch2\u003eBegin test to view data\u003c/h2\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"captureArea align-items-center flex-column ml-5\"\u003e\n    \u003cdiv class=\"liveData w-100\"\u003e\n      \u003cdiv class=\"card text-align-center w-100\" style=\"height: 155px;\"\u003e\n        \u003cdiv class=\"card-body\"\u003e\n          \u003ch5 class=\"card-title\" style=\"text-align: center;\"\u003eTarget(℉)\u003c/h5\u003e\n          \u003cp class=\"card-text\" id=\"targetDataValue\" style=\"text-align: center; font-size: 4rem;\"\u003e_\u003c/p\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"card text-align-center w-100\" style=\"height: 155px;\"\u003e\n        \u003cdiv class=\"card-body\"\u003e\n          \u003ch5 class=\"card-title\" style=\"text-align: center\"\u003eProbe(℉)\u003c/h5\u003e\n          \u003cp class=\"card-text\" id=\"liveDataValue\" style=\"font-size: 4rem; text-align: center;\"\u003e_\u003c/p\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton class=\"successTestButton btn btn-success w-100 mt-3 text-align-center\"\u003eSuccess! View Results\u003c/button\u003e\n    \u003cbutton id=\"captureButton\" class=\"btn btn-primary w-100 mt-3 text-align-center\"\u003eCapture\u003c/button\u003e\n    \u003cdiv id=\"pinEntryArea\"\u003e \n      \u003cdiv class=\"form-group row w-100 mt-3\"\u003e\n        \u003clabel for=\"testPinEntry\" class=\"col-sm-4 col-form-label\"\u003eEnter Pin\u003c/label\u003e\n        \u003cdiv class=\"col-sm-4\"\u003e\n          \u003cinput type=\"password\" class=\"form-control\" id=\"testPinEntry\"\u003e\n        \u003c/div\u003e\n        \u003cbutton id=\"submitPinButton\" class=\"btn btn-primary col-sm-4\"\u003eSave Report\u003c/button\u003e\n      \u003c/div\u003e\n      \u003cspan id=\"pinError\"\u003eIncorrect Pin Entered\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "// Form Creations\ndatasources.getSensorsBySensorType.sendData({ \"sensor_type_id\": '4ebd356c-b35d-4b7d-a2be-2b6854973057'}).then(() =\u003e {\n    let sensors = datasources.getSensorsBySensorType.latestData().results.payload.DATA;\n    const updateSensors = (sens) =\u003e {\n        $('#testInputSensor').empty();\n        let sensorOption = '\u003coption value=\"\" disabled selected hidden\u003eSelect probe...\u003c/option\u003e';\n        for (let i = 0; i \u003c sens.length; i++) {\n            sensorOption += '\u003coption value=\"' + sens[i].item_id + '\"\u003e' + sens[i].sensor_name + '\u003c/option\u003e';\n        }\n        $('#testInputSensor').append(sensorOption);\n    }\n    updateSensors(sensors)\n});\n\nvar types;\nconst updateTypes = (stuff) =\u003e {\n    $('#testInputType').empty();\n    let typeOption = '\u003coption value=\"\" disabled selected hidden\u003eSelect food type...\u003c/option\u003e';\n    for (let i = 0; i \u003c stuff.length; i++) {\n        typeOption += '\u003coption value=\"' + stuff[i].data.item_id + '\"\u003e' + stuff[i].data.name + '\u003c/option\u003e';\n    }\n    $('#testInputType').append(typeOption);\n}\nfunction foodTestresource()\n{\ntypes = datasources.FoodTestTypes.latestData();\nupdateTypes(types);\n}\n\nif(datasources.FoodTestTypes.lastUpdated)\n{\n    foodTestresource();\n}else{\n  datasources.FoodTestTypes.latestData.subscribe(foodTestresource);\n}\n\nvar locations;\nconst updateLocations = (stuff) =\u003e {\n    $('#testInputLocation').empty();\n    let locationOption = '\u003coption value=\"\" disabled selected hidden\u003eSelect location...\u003c/option\u003e';\n    for (let i = 0; i \u003c stuff.length; i++) {\n        locationOption += '\u003coption value=\"' + stuff[i].item_id + '\"\u003e' + stuff[i].name + '\u003c/option\u003e';\n    }\n    $('#testInputLocation').append(locationOption);\n}\nfunction locationsResource(){\n locations = datasources.getLocations.latestData().results.payload.DATA;\n updateLocations(locations);   \n}\nif(datasources.getLocations.lastUpdated)\n{\n    locationsResource();\n}else{\n  datasources.getLocations.latestData.subscribe(locationsResource);\n}\n\n// Executions\nlet test_id;\nlet start_date;\n\n$(\".testInput\").on(\"focus\", function () {\n    $(\".createTestError\").addClass(\"invisible\");\n    $(\".successTestButton\").css(\"display\", \"none\");\n    $('.captureArea').css('display', 'none');\n    $('#liveDataValue').css('color', 'black');\n    $('#captureButton').css('display', 'none');\n    $('#pinEntryArea').css('display', 'none');\n    $('#beginTestButton').text('Begin Test').prop('disabled', false);\n    $('#pinError').css('display', 'none');\n    $('#liveDataValue').text('_');\n})\n\nif (!window.hasSubscribedToTestFormSubmit) {\n    window.hasSubscribedToTestFormSubmit = true;\n    $(\"#beginTestButton\").on(\"click\",(e) =\u003e {\n        e.preventDefault();\n        const sensorId = $(\"select#testInputSensor\").val();\n        datasources.getSensorById.sendData({ \"sensor_id\": sensorId}).then((res) =\u003e {\n            $('#beginTestButton').text('Setting up...').prop(\"disabled\", true);\n            start_date = new Date().toISOString();\n            setupMessaging().then(() =\u003e {\n                window.topicForFoodTest = `monnit-webhook-adapter/${res.results.payload.DATA[0].sensor_id}`\n                $('#beginTestButton').text('Sending data...').prop(\"disabled\", true);\n                $('.waitingForData').css('display', 'none');\n                $('.captureArea').css('display', 'inherit');\n                $('#captureButton').css('display', 'initial');\n                const selectedFoodType = datasources.FoodTestTypes.latestData().find((type) =\u003e type.data.item_id === $('select#testInputType').val()).data;\n                $('#targetDataValue').text(selectedFoodType.minimum + \" - \" + selectedFoodType.maximum);\n                window.messagingObjectForFoodTest.subscribe(window.topicForFoodTest, {}, messageReceived.bind(this));\n            });    \n        })      \n    });\n}\n\nif(!window.hasSubscribedToCaptureButton) {\n    window.hasSubscribedToCaptureButton = true;\n    $('#captureButton').on('click', function (e) {\n        $('#captureButton').css('display', 'none');\n        $('#beginTestButton').text('Test Complete... Enter pin to save')\n        const currentType = datasources.FoodTestTypes.latestData().find((type) =\u003e type.data.item_id === $('#testInputType').val());\n        const currentVal = $('#liveDataValue').text();\n        const newVal = currentVal + ($(\"#liveDataValue\").css('color') === \"rgb(0, 100, 0)\" ? \" (Pass)\" :  \" (Fail)\");\n        debugger;\n        $('#liveDataValue').text(newVal);\n        $('#pinEntryArea').css('display', 'initial');\n        $('#submitPinButton').prop('disabled', true);\n    })\n}\n\n$('#testPinEntry').on('focus', function() {\n    $('#pinError').css('display', 'none');\n    $('#testPinEntry').text('');\n    $('#submitPinButton').prop('disabled', false);\n})\n\nif(!window.hasSubscribedToPinButton) {\n    window.hasSubscribedToPinButton = true;\n    $('#submitPinButton').on('click', function (e) {\n        const employeePin = datasources.currentEmployee.latestData().pin;\n        const inputPin = Number($('input#testPinEntry').val());\n        if (employeePin === inputPin) {\n            const newTest = {\n                \"description\": $(\"input#testInputNotes\").val(),\n                \"location_id\": $(\"select#testInputLocation\").val(),\n                \"tester_id\": datasources.currentEmployee.latestData().email,\n                \"sensor_id\": $(\"select#testInputSensor\").val(),\n                \"type_id\": $(\"select#testInputType\").val(),\n                \"customer_id\": datasources.currentCustomer.latestData().item_id,\n                \"name\": $(\"select#testInputType option:selected\").text() + \"-\" + datasources.currentEmployee.latestData().email,\n                \"sensor_payload\": $('#liveDataValue').text().split(' ')[0],\n                \"start_date\": start_date,\n                \"compliant\": $('#liveDataValue').text().split(' ')[1] === '(Pass)',\n            }\n            datasources.createTest.sendData({ \"test\": newTest }).then((res) =\u003e {\n                if (res.err) {\n                    $('#beginTestButton').text('Begin Test').prop(\"disabled\", false);\n                    $(\".createTestError\").removeClass(\"invisible\").text('Error running test: ' + res.err);\n                } else {\n                    $('#beginTestButton').text('Begin Test').prop(\"disabled\", false);\n                    $(\".beginTestForm\").find(\"input[type=text], textarea, select\").val(\"\");\n                    datasources.getTests.sendData({\n                        customer_id: datasources.currentCustomer.latestData().item_id,\n                    })\n                    test_id = res.results.payload[0].item_id;\n                    $(\".successTestButton\").css('display', 'initial');\n                    $('#pinEntryArea').css('display', 'none');\n                }\n            })\n        } else {\n            $('#pinError').css('display', 'initial');\n            $('#submitPinButton').prop('disabled', true);\n        }\n    })\n}\n\nif (!window.hasSubscribedToSuccessButton) {\n    window.hasSubscribedToSuccessButton = true;\n    $(\".successTestButton\").on(\"click\", function (e) {\n        e.preventDefault();\n        $(\".successTestButton\").css('display', 'none');\n        $('.waitingForData').css('display', 'inherit');\n        $('.captureArea').css('display', 'none');\n        $('#liveDataValue').css('color', 'black');\n        datasources.getTestById.sendData({ test_id }).then((res) =\u003e {\n            datasources.currentTest.sendData(res.results.payload.DATA[0]);\n        })\n    })\n}\n\nconst messageReceived = (data) =\u003e {\n    const obj = JSON.parse(data);\n    const currentType = datasources.FoodTestTypes.latestData().find((type) =\u003e type.data.item_id === $('#testInputType').val());\n    if (currentType.data.minimum \u003c= obj.sensor_message.dataValue \u0026\u0026 currentType.data.maximum \u003e= obj.sensor_message.dataValue) {\n        $('#liveDataValue').css('color', 'darkgreen');\n    } else {\n        $('#liveDataValue').css('color', 'darkred');\n    }\n    $('#liveDataValue').text(obj.sensor_message.dataValue);\n}\n\nconst setupMessaging = () =\u003e {\n    return new Promise((resolve) =\u003e {\n        if (!window.messagingObjectForFoodTest) {\n            window.messagingObjectForFoodTest = CB_PORTAL.ClearBlade.Messaging({ useSSL: true }, resolve);\n            window.foodTestResult = undefined;\n        } else {\n            try {\n                window.messagingObjectForFoodTest.unsubscribe(window.topicForFoodTest, {});\n                $('#liveDataValue').text('_');\n            } catch (e) {\n                console.error('Unable to unsub from topic', e);\n            }\n            resolve();\n        }\n    }) \n}\n"
                        }
                    }
                },
                "tab": "b3491df0-a905-4d4c-934a-90e455e4332a",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "dae2453a-23e9-4007-abbd-a02c87008669": {
                "externalScripts": [],
                "id": "dae2453a-23e9-4007-abbd-a02c87008669",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "asset_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "ebdca789-50f1-4d3c-927d-4725adc23149",
                            "label": "Asset",
                            "name": "asset_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 6,
                            "required": false,
                            "widthPercent": 50
                        },
                        "battery_level": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "0027e97e-4567-4ef5-b311-9f9e24fa724b",
                            "label": "Battery  level",
                            "name": "battery_level",
                            "options": {},
                            "orderIdx": 15
                        },
                        "contact_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "e8ba622c-f850-42e0-b067-55e949e753fd",
                            "label": "Contact ",
                            "name": "contact_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 7,
                            "widthPercent": 50
                        },
                        "gateway_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "d19acb6c-5665-4fea-8863-38120b4626b4",
                            "label": "Gateway",
                            "name": "gateway_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "43bbd5f9-ebd9-4c8c-9d3e-9a4134b89b11",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 17
                        },
                        "last_active": {
                            "dataType": "timestamp",
                            "defaultValue": " ",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "isKeyColumn": false,
                            "isReadOnly": true,
                            "key": "fdb6bc14-c46e-4dc8-87fd-b1d6ef418879",
                            "label": "Last  active",
                            "name": "last_active",
                            "options": {},
                            "orderIdx": 9,
                            "widthPercent": 50
                        },
                        "latest_payload": {
                            "dataType": "string",
                            "display": true,
                            "isReadOnly": true,
                            "key": "3bd615e4-5855-4b99-a4cc-619e7c11997e",
                            "label": "Latest payload",
                            "name": "latest_payload",
                            "options": {},
                            "orderIdx": 8,
                            "widthPercent": 50
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": true,
                            "key": "c67d73b0-73f7-45a5-be00-300f45855718",
                            "label": "Location ",
                            "name": "location_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 5,
                            "smallText": "Determined by Gateway",
                            "widthPercent": 50
                        },
                        "sensor_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "c960b6bb-8896-46ff-b4ad-d30489df301c",
                            "label": "Sensor  ID",
                            "name": "sensor_id",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        },
                        "sensor_label": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "67443551-b327-4415-8e27-e2a254a27dd9",
                            "label": "Sensor  label",
                            "name": "sensor_label",
                            "options": {},
                            "orderIdx": 2,
                            "widthPercent": 50
                        },
                        "sensor_name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "4bb368a9-61b5-46c6-8307-263563c0f80a",
                            "label": "Sensor  name",
                            "name": "sensor_name",
                            "options": {},
                            "orderIdx": 0,
                            "required": true,
                            "widthPercent": 50
                        },
                        "sensor_type_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "67481c17-8c33-4036-9c3d-95473d6d1909",
                            "label": "Sensor  type",
                            "name": "sensor_type_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 3,
                            "required": true,
                            "widthPercent": 50
                        },
                        "signal_strength": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "e6fb6edc-32a1-4063-8716-aaa173335d84",
                            "label": "Signal  strength",
                            "name": "signal_strength",
                            "options": {},
                            "orderIdx": 14
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "\nif (this.widget) {\n    const sensor = {\n        ...this.widget.data,\n        battery_level: JSON.stringify(this.widget.data.battery_level),\n        signal_strength: JSON.stringify(this.widget.data.signal_strength),\n        sensor_id: typeof this.widget.data.sensor_id === 'string' ? this.widget.data.sensor_id : JSON.stringify(this.widget.data.sensor_id),\n        gateway_id: typeof this.widget.data.gateway_id === 'string' ? this.widget.data.gateway_id : JSON.stringify(this.widget.data.gateway_id),\n        // sensor_type_id: JSON.stringify(this.widget.data.sensor_type_id),\n        customer_id: datasources.currentCustomer.latestData().item_id\n    }\n    if (sensor.item_id) {\n        datasources.updateSensor.sendData({ sensor, sensor_id: sensor.item_id }).then((res) =\u003e {\n            datasources.getSensors.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n            datasources.currentSensor.sendData(res.results.payload[0])\n        })\n    } else {\n        datasources.createSensor.sendData({ sensor }).then((res) =\u003e {\n            datasources.getSensors.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n            datasources.getOrphanSensorData.sendData()\n            datasources.currentSensor.sendData(sensor.sensor_id)\n        })\n    }\n\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "sensor-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "d0076a83-4237-4bfa-9fea-19cbe248c81c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let data = { a: 'a' }\nif (this.datasource.currentSensor \u0026\u0026 this.datasource.currentSensor !== 'none') {\n    data = this.datasource.getSensors.results.payload.DATA.find(d =\u003e d.sensor_id === this.datasource.currentSensor)\n    if (data \u0026\u0026 data.last_active === null) {\n        delete data.last_active\n    }\n    $('#sensor_id').attr('disabled', true)\n    $('#sensor_name').attr('disabled', true)\n} else {\n    $('#sensor_id').attr('disabled', false)\n    $('#sensor_name').attr('disabled', false)\n}\n$('#location_id').attr('disabled', true)\n\nif (this.datasource.currentSensor === 'orphan') {\n    if (this.datasource.getOrphanSensorData.results \u0026\u0026 this.datasource.getOrphanSensorData.results.DATA[0]) {\n        data = this.datasource.getOrphanSensorData.results.DATA[0]\n        data.latest_payload = data.sensor_reading;\n        data.last_active = data.reading_time;\n        const gateway = datasources.getGateways.latestData() \u0026\u0026 datasources.getGateways.latestData().results.payload.DATA.find(d =\u003e d.gateway_id == data.gateway_id)\n        data.location_id = gateway \u0026\u0026 gateway.location_id\n        delete data.item_id\n    }\n}\n$('#gateway_id').attr('disabled', false)\n\n\nconst locationList = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#location_id\").html(`\u003coption value=\"\"\u003e\u003c/option\u003e${locationList.join('')}`)\n\n\nconst assetList = datasources.getAssets.latestData() \u0026\u0026 datasources.getAssets.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#asset_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${assetList.join('')}`)\n\n\nconst sensorTypeList = datasources.getSensorTypes.latestData() \u0026\u0026 datasources.getSensorTypes.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n)) || []\n$(\"#sensor_type_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${sensorTypeList.join('')}`)\n\nconst employeeList = datasources.getEmployees.latestData() \u0026\u0026 datasources.getEmployees.latestData().results.payload.map((d) =\u003e (\n    `\u003coption value=${d.email}\u003e${d.first_name} ${d.last_name}\u003c/option\u003e`\n)) || []\n$(\"#contact_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${employeeList.join('')}`)\n\nconst gatewayList = datasources.getGateways.latestData() \u0026\u0026 datasources.getGateways.latestData().results.payload.DATA.map((d) =\u003e (\n    `\u003coption value=${d.gateway_id}\u003e${d.gateway_name}\u003c/option\u003e`\n)) || []\n$(\"#gateway_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${gatewayList.join('')}`)\n\n\nif (!window.hasSetUpOnChange) {\n    window.hasSetUpOnChange = true;\n    $('body').on('change', '#gateway_id', () =\u003e {\n        const gateway_id = $(\"#gateway_id\").val()\n        const gateway = datasources.getGateways.latestData() \u0026\u0026 datasources.getGateways.latestData().results.payload.DATA.find(d =\u003e d.gateway_id == gateway_id)\n        $(\"#location_id\").val(gateway \u0026\u0026 gateway.location_id)\n        const assetList2 = datasources.getAssets.latestData()\n            \u0026\u0026 datasources.getAssets.latestData().results.payload.DATA\n                .filter(d =\u003e {\n                    if (gateway) {\n                        return d.location_id === gateway.location_id\n                    } else {\n                        return true\n                    }\n                })\n                .map((d) =\u003e (\n                    `\u003coption value=${d.item_id}\u003e${d.name}\u003c/option\u003e`\n                )) || []\n        $(\"#asset_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${assetList2.join('')}`)\n    })\n}\n\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "2c4e19ad-405b-434d-a7cf-86daf7af9a5d",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb": {
                "externalScripts": [],
                "id": "df94497a-fd14-4aa9-bc5d-dc23bcc4fffb",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "compactForm": false,
                    "displayColumn": "name",
                    "editColumns": {
                        "endDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "b8cd61ae-6e5c-4803-9d6a-4ffcecfe8955",
                            "label": "End Date",
                            "name": "endDate",
                            "options": {
                                "endDate": "2018-09-12T22:20:44.389Z"
                            },
                            "orderIdx": 2
                        },
                        "startDate": {
                            "dataType": "timestamp",
                            "defaultValue": "",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "7e6089e3-1908-482f-a9c4-2eb9d709b4bc",
                            "label": "Start Date",
                            "name": "startDate",
                            "options": {},
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": "if (this.widget) {\n    console.log('this', this.widget);\n    const start = new Date(this.widget.data.startDate);\n    const end = new Date(this.widget.data.endDate);\n    datasources.sensorHistoryTimeRange.sendData({\n        startDate: start,\n        endDate: end\n    })\n    if (datasources.sensorHistoryIds.lastUpdated \u0026\u0026 datasources.sensorHistoryIds.latestData().length \u003e 0) {\n        datasources.getHistoryForSensors.sendData({\n            sensor_ids: datasources.sensorHistoryIds.latestData(),\n            startTime: start.toISOString(),\n            endTime: end.toISOString()\n        })\n    }\n\n}\nreturn;"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "288123fb-9434-4b9a-a38c-2a03ba5ef522",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "console.log('incoming', this.datasource);\nreturn {data: this.datasource};"
                        }
                    },
                    "listTitle": "",
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "d77a16c7-22b1-40e7-b263-879e5e951ab4",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "e1b051ab-65a8-4235-8af1-aa4a73aec89f": {
                "externalScripts": [],
                "id": "e1b051ab-65a8-4235-8af1-aa4a73aec89f",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {},
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "sensors-form",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "4592a60c-0d95-4221-a020-caa0a9e57c58",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "let objectToProcess;\r\n\r\ndatasources.listOfDoorSensors.sendData(\"NoData\");\r\n$(\"#sensors-form .asset-info\").click(function(){\r\n    let assetsList=datasources.currentZoneAssetsList.latestData();\r\ndatasources.zoneAndassetInfo.sendData(assetsList.filter((a)=\u003ea.item_id == $(this).attr(\"data-assetId\"))[0]);\r\n});\r\n\r\nconst getLabelForSensor = (sensorInfo) =\u003e {\r\n    //alert(JSON.stringify(sensorInfo.sensor));\r\n    return sensorInfo.sensor.sensor_label;\r\n}\r\nlet doorCount;\r\nlet dSesnsorsList;\r\nconst getDoorStatusCount=(sid)=\u003e{\r\n     dSesnsorsList=datasources.listOfDoorSensors.latestData();\r\n     if(dSesnsorsList.indexOf(\".field-\"+sid) \u003c0)\r\n     {\r\n     dSesnsorsList=dSesnsorsList+\",.field-\"+sid;\r\n     //datasources.listOfDoorSensors.sendData(dSesnsorsList);\r\n     }\r\n    $(\".field-\"+sid).addClass(\"doorSensorCss\");\r\nconst eTime = new Date();\r\n    const sTime = new Date();\r\n    sTime.setDate(eTime.getDate() - 1);\r\ndatasources.getHistoryForDoorSensor.sendData({\r\n                    sensor_ids: [sid],\r\n                    startTime: sTime.toISOString(),\r\n                    endTime: eTime.toISOString()\r\n                }).then((result)=\u003e{\r\n                    var readingsAry=result.results.payload;\r\n                     var doorOpenCount=0;\r\n                     readingsAry.forEach(function(readingObj){\r\n                         if(!readingObj[sid+\"_d\"])\r\n                         doorOpenCount++;\r\n                     });\r\n                     //alert(doorOpenCount);\r\n                     doorCount=doorOpenCount;\r\n                     //return doorOpenCount;\r\n                     $(\"#door-open-count-\"+sid).html(\"Door has been opened \"+doorOpenCount+\" Times in last 24 hours\");\r\n                    });\r\n}\r\n\r\n\r\nconst getDataFromSensors = () =\u003e {\r\n    let rtn = {};\r\n     $.each(objectToProcess,function(k,v){\r\n    const sensors = v.sensors;\r\n    Object.keys(sensors).length;\r\n    for (const id in sensors) {\r\n        try {\r\n            rtn = {\r\n                ...rtn,\r\n                [id]: window.parseDataFromSensor(sensors[id])\r\n            }\r\n        } catch (e) {\r\n            console.warn(`Unable to get data for sensor '${id}'`, sensors, e);\r\n        }\r\n    }\r\n    rtn = {\r\n         ...rtn,\r\n         [v.assetDetails.name]:v.assetDetails.name,\r\n         [v.assetDetails.name+\"END\"]:v.assetDetails.name+\"END\"\r\n    };\r\n     });\r\n    return rtn;\r\n}\r\n\r\nconst getWidthPercentForSensors = (count) =\u003e {\r\n    if (count === 1) {\r\n       // return '100';\r\n        return '50';\r\n    } else if (count === 2) {\r\n       //  return '50';\r\n        return '50';\r\n    } else if (count === 3) {\r\n        // return '33';\r\n        return '50';\r\n    } else if (count \u003e= 4) {\r\n        // return '50';\r\n        return '50';\r\n    }\r\n    return '50';\r\n}\r\n\r\nconst getUnitsForSensor = (sensorInfo) =\u003e {\r\n    switch (sensorInfo.sensorType.attributes) {\r\n        case 'degrees':\r\n            return 'º';\r\n        case 'percent':\r\n            return '%';\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst buildAssetFieldParser=(assetName,assetId,numSensors)=\u003e{\r\n    if(numSensors==0)\r\n    {\r\n   var htmlContent=`\u003ch6 class='text-center asset-info' data-assetId='${assetId}'\u003e\u003cb\u003e${assetName}\u003c/b\u003e\u003c/h6\u003e\u003ch6 class='text-center'\u003eNo sensors are connected to this asset\u003c/h6\u003e`;\r\n    }else{\r\n      var htmlContent=`\u003ch6 class='text-center asset-info' data-assetId='${assetId}'\u003e\u003cb\u003e${assetName}\u003c/b\u003e\u003c/h6\u003e`;\r\n    }\r\n     return {\r\n        HTML:htmlContent \r\n     }\r\n}\r\nconst buildBooleanFieldParser = (sensorInfo) =\u003e {\r\n    const value = window.parseDataFromSensor(sensorInfo);\r\n    return {\r\n        HTML: `\u003cspan id=\"door-open-container\"\u003e\r\n        \u003cdiv\u003e\r\n        \u003csmall\u003e\r\n        ${getLabelForSensor(sensorInfo)}\r\n        \u003c/small\u003e\r\n        \u003c/div\u003e\r\n  \u003cdiv\u003e\u003ci class=\"fas ${!value === true ? 'fa-door-open' : 'fa-door-closed'}\" id=\"door-status-icon\"\u003e\u003c/i\u003e\u003c/div\u003e\r\n  \u003cp id=\"door-status-text\"\u003e\u003cb style=\"color:black;\"\u003eStatus:\u003c/b\u003e\r\n    ${!value === true ? 'DOOR OPEN' : 'DOOR CLOSED'}\r\n  \u003c/p\u003e\r\n  \u003cdiv class=\"message-time\"\u003e\r\n  \u003cp style=\"color:black;\"\u003e\u003cb\u003eReading On\u003c/b\u003e\u003c/p\u003e\r\n  \u003csmall\u003e\r\n  ${(new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString()}\r\n  \u003c/small\u003e\r\n  \u003c/div\u003e\r\n  \u003cdiv id=\"door-open-count-${sensorInfo.message.sensor_message.sensorID}\" class='status-count'\u003e\r\n  ${getDoorStatusCount(sensorInfo.message.sensor_message.sensorID)}\r\n  \u003c/div\u003e\r\n\u003c/span\u003e`,\r\n        CSS: '#door-open-container small,#door-status-text,.status-count{ color: grey } #door-open-container .fas{font-size:60px;} .doorSensorCss{width: calc(50% - 1em) !important;float:right !important;}',\r\n        JS: ''\r\n    }\r\n}\r\n\r\nconst messageTimeElem = (sensorInfo) =\u003e {\r\n    const msgTime = $('\u003cspan\u003e\u003c/span\u003e');\r\n    msgTime.addClass('message-time')\r\n    msgTime.text((new Date(sensorInfo.message.sensor_message.messageDate+\" GMT\")).toLocaleString());\r\n    msgTime.css({\r\n        width: '100%',\r\n        'text-align': 'center',\r\n        top: '-13px',\r\n        position: 'relative',\r\n        color: 'rgb(153, 153, 153)',\r\n        'font-size': '.75rem'\r\n    })\r\n    return msgTime;\r\n}\r\n\r\nconst replaceLabel = (sensorElem, sensorInfo) =\u003e {\r\n    window.tryAgain(() =\u003e sensorElem.find('svg text').first().length, () =\u003e {\r\n        sensorElem.find('svg text').first().html(getLabelForSensor(sensorInfo));\r\n    }, 500, 15);\r\n    \r\n}\r\n\r\nconst addInfoToGauge = (sensorInfo) =\u003e {\r\n    try {\r\n        const sensorElem = $(`#sensors-form .field-${sensorInfo.id} .row`);\r\n        // sensorElem.off('click');\r\n        // sensorElem.on('click', () =\u003e {\r\n        //     datasources.currentSensorGauge.sendData(sensorInfo);\r\n        // })\r\n        //sensorElem.addClass('c-pointer')\r\n        sensorElem.find('.message-time').remove();\r\n        const msgTime = messageTimeElem(sensorInfo);\r\n        replaceLabel(sensorElem, sensorInfo);\r\n        sensorElem.append(msgTime);\r\n    } catch (e) {\r\n        console.warn('Unable to append time to sensor gauge', e, sensorInfo);\r\n    }\r\n}\r\n\r\nconst buildFieldForSensor = (sensorInfo, widthPercent,count) =\u003e {\r\n    const name = sensorInfo.id;\r\n    switch (sensorInfo.sensorType.data_type) {\r\n        case 'int':\r\n            const progressColor = window.getFillColorForSensor(sensorInfo.alertConfig, window.parseDataFromSensor(sensorInfo));\r\n            const units = getUnitsForSensor(sensorInfo);\r\n            setTimeout(() =\u003e {\r\n                addInfoToGauge(sensorInfo);\r\n            }, 1500);\r\n            return {\r\n                orderIdx: count, name, dataType: 'number', display: true, key: sensorInfo.id, inputType: 'RADIAL_GAUGE', widthPercent, progressColor, units\r\n            }\r\n        case 'bool':\r\n            return {\r\n                orderIdx: count, name, dataType: 'bool', display: true, key: sensorInfo.id, widthPercent, inputType: 'HTML', parser: buildBooleanFieldParser(sensorInfo)\r\n            }\r\n    }\r\n\r\n}\r\n\r\nconst getFieldSettingsFromSensors = () =\u003e {\r\n    let rtn = {};\r\n     let count=0;\r\n    $.each(objectToProcess,function(k,v){\r\n\r\nlet assetName=v[\"assetDetails\"][\"name\"];\r\nlet assetId=v[\"assetDetails\"][\"item_id\"];\r\nif(!rtn.hasOwnProperty(assetName)){\r\n rtn = {\r\n                ...rtn,\r\n               [assetName]:{\r\n            \"dataType\":\"string\",\r\n            \"display\":true,\r\n            \"inputType\":\"HTML\",\r\n            \"key\":assetName,\r\n            \"name\":assetName,\r\n            \"orderIdx\":count,\r\n            \"parser\":buildAssetFieldParser(assetName,assetId,Object.keys(v.sensors).length),\r\n            \"widthPercent\":\"100\"\r\n                }\r\n            }\r\n          count++;\r\n}\r\n      const sensors = v.sensors;\r\n    const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\r\n    for (const id in sensors) {\r\n        const label = getLabelForSensor(sensors[id]);\r\n        try {\r\n            rtn = {\r\n                ...rtn,\r\n                [id]: buildFieldForSensor(sensors[id], widthPercent,count)\r\n            }\r\n            count++;\r\n        } catch (e) {\r\n            console.warn(`Unable to get field settings for '${id}'`, sensors, e);\r\n        }\r\n    }\r\n    rtn = {\r\n                ...rtn,\r\n               [assetName+\"End\"]:{\r\n            \"dataType\":\"string\",\r\n            \"display\":true,\r\n            \"inputType\":\"HTML\",\r\n            \"key\":assetName+\"End\",\r\n            \"name\":assetName+\"End\",\r\n            \"orderIdx\":count,\r\n            \"parser\":{HTML:\"\u003chr/\u003e\"},\r\n            \"widthPercent\":\"100\"\r\n                }\r\n            }\r\n            count++;\r\n    });\r\n    // const sensors = this.datasource;\r\n    // const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\r\n    // for (const id in sensors) {\r\n    //     const label = getLabelForSensor(sensors[id]);\r\n    //     try {\r\n    //         rtn = {\r\n    //             ...rtn,\r\n    //             [id]: buildFieldForSensor(sensors[id], widthPercent)\r\n    //         }\r\n    //     } catch (e) {\r\n    //         console.warn(`Unable to get field settings for '${id}'`, sensors, e);\r\n    //     }\r\n    // }\r\n    return rtn;\r\n}\r\n\r\n/**\r\n * @type {FormSourceObj}\r\n */\r\nif(!jQuery.isEmptyObject(this.datasource))\r\n{\r\n    let modifiedAssetList={};\r\n    let assetsList=this.datasource;\r\n    let sensorsList=datasources.testDatasourceSensors.latestData();\r\n    $.each(assetsList,function(assetKey,assetVal){\r\n       assetVal[\"sensors\"]={};\r\n        let sList=assetVal[\"assetDetails\"][\"sensors\"];\r\n       $.each(sList,function(i,v){\r\n         assetVal[\"sensors\"][v]=sensorsList[v];\r\n       });\r\n      assetsList.assetKey=assetVal;\r\n    });\r\n    objectToProcess=assetsList;\r\n    // var formSourceObj = {}\r\nvar formSourceObj = {\r\n    // the initial data the form has when loaded\r\n    data: getDataFromSensors(),\r\n\r\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\r\n    // useful for adding dynamic things like dropdown options from a collection\r\n    overrideFieldSettings: getFieldSettingsFromSensors()\r\n};\r\n}else{\r\nvar formSourceObj = {\r\n    // the initial data the form has when loaded\r\n    data: {\"noSensors\":\"No assets associated to zone\"},\r\n\r\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\r\n    // useful for adding dynamic things like dropdown options from a collection\r\n    overrideFieldSettings: {\r\n                       \"noSensors\":{\r\n                        \"dataType\": \"bool\",\r\n                        \"display\": true,\r\n                        \"inputType\": \"HTML\",\r\n                        \"key\": \"noSensors\",\r\n                        \"name\": \"noSensors\",\r\n                        \"parser\":{\"HTML\":\"\u003ch2\u003eNo assets associated to zone\u003c/h2\u003e\"},\r\n                        \"orderIdx\": 1\r\n                        // \"progressColor\": \"red\",\r\n                        // \"units\": \"%\",\r\n                        // \"widthPercent\": \"50\"\r\n                      }\r\n               }\r\n}\r\n}\r\nconsole.log(formSourceObj);\r\ndatasources.listOfDoorSensors.sendData(dSesnsorsList);\r\nreturn formSourceObj"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "0a016572-3d0d-4d49-8d24-3980b705bf90",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "e4858580-7122-492c-bc8b-bfc50ddbf413": {
                "externalScripts": [],
                "id": "e4858580-7122-492c-bc8b-bfc50ddbf413",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "key": "af4e51c1-63fd-4b7e-8196-5141f364daa4",
                            "label": "Description",
                            "name": "description",
                            "options": {},
                            "orderIdx": 3,
                            "widthPercent": 50
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "5542b2f5-7193-41e2-8d5e-60b2b06cc9fc",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 5
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "key": "95ca7dc8-a28d-4bfb-8c85-411532b320c4",
                            "label": "Name",
                            "name": "name",
                            "options": {},
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if(!this.widget) return\n\nif (this.widget.data.item_id) {\n    return datasources.updateAssetType.sendData({ \n        asset_type_id: this.widget.data.item_id, \n        asset_type: this.widget.data }\n    ).then(function (res) {\n        if (res.success) {\n            datasources.getAssetTypes.sendData()\n        } \n        return res\n    })\n} else {\n    return datasources.createAssetType.sendData({ asset_type: this.widget.data }).then(function (res) {\n        if (res.success) {\n            datasources.getAssetTypes.sendData()\n            datasources.currentAssetTypeId.sendData(res.item_id)\n        }\n        return res\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "my-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "0606ca05-2044-49c0-b957-9f45077eb828",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const asset = this.datasource.getAssetTypes \u0026\u0026\n    this.datasource.getAssetTypes.results.payload.DATA.find(s =\u003e s.item_id == this.datasource.currentAssetTypeId) \n\nreturn {\n    data: asset || {\"a\": \"a\"}\n}"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "6ecf5506-8176-46d7-8329-1b33698a5985",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "e9a6f364-5a29-466c-8181-522f9810e187": {
                "externalScripts": [],
                "id": "e9a6f364-5a29-466c-8181-522f9810e187",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "",
                    "editColumns": {
                        "address": {
                            "dataType": "string",
                            "display": true,
                            "key": "58dcccd5-177e-497c-9fde-8601b7ecc8a1",
                            "label": "Address",
                            "name": "address",
                            "options": {},
                            "orderIdx": 6,
                            "widthPercent": 50
                        },
                        "boundaries": {
                            "dataType": "string",
                            "display": false,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "9bf0c227-8655-49ed-8b6e-d1e19c8212ae",
                            "label": "Boundaries",
                            "name": "boundaries",
                            "options": {},
                            "orderIdx": 5,
                            "widthPercent": 50
                        },
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "df97dde5-0721-422c-8270-c5d411615773",
                            "label": "Description",
                            "name": "description",
                            "options": {},
                            "orderIdx": 1,
                            "required": false,
                            "widthPercent": 50
                        },
                        "icon": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "6b791c03-a25e-415a-b41e-33b08f9c3ec0",
                            "label": "Icon",
                            "name": "icon",
                            "options": {},
                            "orderIdx": 8,
                            "widthPercent": 50
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "63ac0a03-104e-4f6b-a7f9-3d78e793a4d4",
                            "name": "item_id",
                            "options": {},
                            "orderIdx": 18
                        },
                        "lat": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "3583407e-7645-469a-a9ad-d47d34a834b5",
                            "label": "Latitude",
                            "name": "lat",
                            "options": {
                                "errorText": "Must be in format: 42.201",
                                "regexValidation": "^[+-]?(([1-8]?[0-9])(\\.[0-9]{1,6})?|90(\\.0{1,6})?)$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 2,
                            "required": true,
                            "widthPercent": 50
                        },
                        "location_type_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "fda1107d-08c5-4cae-a512-d23ec47c7720",
                            "label": "Location  type",
                            "name": "location_type_id",
                            "options": {
                                "dropdownOptions": [
                                    "office",
                                    "convention hall",
                                    "store"
                                ]
                            },
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "long": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "767e13db-8ed8-4779-9e44-faca6325061b",
                            "label": "Longitude",
                            "name": "long",
                            "options": {
                                "errorText": "Must be in format: -80.0123",
                                "regexValidation": "^[+-]?((([1-9]?[0-9]|1[0-7][0-9])(\\.[0-9]{1,6})?)|180(\\.0{1,6})?)$",
                                "validationType": "customRegEx"
                            },
                            "orderIdx": 3,
                            "required": true,
                            "widthPercent": 50
                        },
                        "manager_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "option",
                            "key": "5e80f711-6e9a-4793-9db3-a66dc13b7e0e",
                            "label": "Manager",
                            "name": "manager_id",
                            "options": {
                                "dropdownOptions": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "orderIdx": 7,
                            "widthPercent": 50
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "8ae44a06-8bc9-4308-968a-d94e63237901",
                            "label": "Name",
                            "name": "name",
                            "options": {},
                            "orderIdx": 0,
                            "required": true,
                            "widthPercent": 50
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "if (this.widget) {\n    if (this.widget.data.item_id) { // inEdit\n        return getBase64($(\"input#icon\")[0].files[0]).then((icon) =\u003e {\n            datasources.updateLocation.sendData(\n                {\n                    location_id: this.widget.data.item_id,\n                    location: {\n                        ...this.widget.data,\n                        customer_id: datasources.currentCustomer.latestData().item_id,\n                        icon,\n                    }\n                }\n            ).then(() =\u003e {\n                // $('.field .input-section input').each((i, el) =\u003e console.log($(el).val('')))\n                datasources.getLocations.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentLocation.sendData('none');\n            })\n        })\n    } else {\n        return getBase64($(\"input#icon\")[0].files[0]).then((icon) =\u003e {\n            datasources.createLocation.sendData(\n                {\n                    location: {\n                        ...this.widget.data,\n                        customer_id: datasources.currentCustomer.latestData().item_id,\n                        icon,\n                    }\n                }\n            ).then((res) =\u003e {\n                // $('.field .input-section input').each((i, el) =\u003e console.log($(el).val('')))\n                datasources.getLocations.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n                datasources.currentLocation.sendData(res.results.payload[0])\n            })\n        })\n    }\n}\n\nfunction getBase64(file) {\n    if (file) {\n       return new Promise((resolve, reject) =\u003e {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () =\u003e resolve(reader.result);\n            reader.onerror = error =\u003e reject(error);\n        }); \n    } else {\n        const currentLoc = datasources.getLocations.latestData().results.payload.DATA.find(l =\u003e l.item_id === datasources.currentLocation.latestData()) \n        return new Promise((resolve, reject) =\u003e {\n            if (currentLoc) {\n                resolve(currentLoc.icon);\n            } else {\n                resolve('');\n            }\n        });\n    }\n};"
                    },
                    "fontColor": "#000000",
                    "htmlId": "location-form-widget",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\nlet data = { a: \"A\" }\nif(this.datasource.currentLocation === 'empty') {\n    return { data: { name: '', description: ''}}\n}\nif(this.datasource.currentLocation \u0026\u0026 this.datasource.currentLocation !== 'none') {\n    data = { ...this.datasource.getLocations.results.payload.DATA.find(l =\u003e l.item_id === this.datasource.currentLocation)}\n    data.icon = '';\n}\n\nconst employeeList = datasources.getEmployees.latestData() \u0026\u0026 datasources.getEmployees.latestData().results.payload.map((d) =\u003e (\n    `\u003coption value=${d.email}\u003e${d.first_name} ${d.last_name}\u003c/option\u003e`\n)) || []\n$(\"#manager_id\").html(`\u003coption value=\"\"\u003e-- select --\u003c/option\u003e${employeeList.join('')}`);\n\n$(\"input#icon\").removeClass(\"form-control\").attr(\"type\", \"file\");\n\nreturn { data }"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "631a5484-2676-4858-8677-521d87366860",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "ec39e2ec-2e56-400f-af8d-bf0d854ac3b6": {
                "externalScripts": [],
                "id": "ec39e2ec-2e56-400f-af8d-bf0d854ac3b6",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "fontColor": "#000000",
                    "fontFamily": "sans-serif",
                    "fontSize": 18,
                    "textContent": {
                        "dataType": "STATIC_DATA_TYPE",
                        "value": "Powered by ClearBlade"
                    }
                },
                "tab": "d911bf06-7c9d-4028-94d1-fb2e28525a90",
                "type": "TEXT_WIDGET_COMPONENT"
            },
            "ecd0f391-d4bc-4418-9c8a-aca1b59ac5e4": {
                "externalScripts": [],
                "id": "ecd0f391-d4bc-4418-9c8a-aca1b59ac5e4",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "fontColor": "#000000",
                    "fontFamily": "sans-serif",
                    "fontSize": 18,
                    "textContent": {
                        "dataType": "STATIC_DATA_TYPE",
                        "value": "Powered by ClearBlade"
                    }
                },
                "tab": "082f2116-423a-4045-876e-d3a759f0d0fc",
                "type": "TEXT_WIDGET_COMPONENT"
            },
            "ed6852f6-0019-4d3e-bde4-d87406ce9d2d": {
                "externalScripts": [],
                "id": "ed6852f6-0019-4d3e-bde4-d87406ce9d2d",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput text=\"asdf\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "// $(\":file\").filestyle({ input: false, text: \"Upload CSV\" });\n\n$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        name: d.name,\n                        description: d.description,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createAssetType.sendData({ asset_types: js }).then(res =\u003e {\n                if (res.success === false) {\n                    $('.csv-error').html(res.results)\n                    return\n                }\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getAssetTypes.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n\n})\n"
                        }
                    }
                },
                "tab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "ef365374-e3e8-491b-b04a-cc65d622099e": {
                "externalScripts": [],
                "id": "ef365374-e3e8-491b-b04a-cc65d622099e",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\"  type=\"button\" class=\"btn btn-info\"\u003e Download CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e name  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e attributes \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e description \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e data_type \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e display_name \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e icon \u003c/b\u003e\u003c/td\u003e\n           \u003ctd\u003e\u003cb\u003e is_probe \u003c/b\u003e\u003c/td\u003e\n            \n\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"7\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "4ac516e3-a5c5-48fd-b80e-e48a1dab3e77",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "f7a595bb-97e2-48a8-b1bd-c2f2d18aca25": {
                "externalScripts": [],
                "id": "f7a595bb-97e2-48a8-b1bd-c2f2d18aca25",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#ffffff",
                    "displayColumn": "name",
                    "editColumns": {
                        "endDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "a5bcce53-8a32-4782-a687-726181f0d5ea",
                            "label": "End Date",
                            "name": "endDate",
                            "options": {},
                            "orderIdx": 2,
                            "required": true
                        },
                        "startDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "e6a8ace2-fb35-46c0-b673-2773fc5da8b9",
                            "label": "Start Date",
                            "name": "startDate",
                            "options": {},
                            "orderIdx": 1,
                            "required": true
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "const getLocationAndSensorFromDropdowns = (elem) =\u003e {\n    return {\n        location: elem.find(`.${locationDropdownClass}`).val(),\n        sensor: elem.find(`.${sensorDropdownClass}`).val(),\n    }\n}\nconst errorDiv = $('#interactive-chart-error');\nconst showIncompleteAlert = () =\u003e {\n    errorDiv.empty();\n    errorDiv.append('Please supply values for all parameters');\n}\n\nconst locationDropdownClass = 'location-select';\nconst sensorDropdownClass = 'sensor-select';\nconst paramElems = $('#chart-parameter-container').find('.parameter-select-container').toArray();\nconst params = paramElems.map((p) =\u003e getLocationAndSensorFromDropdowns($(p)));\nif (params.length === 0) {\n    showIncompleteAlert();\n    return;\n}\nfor (let i = 0, len = params.length; i \u003c len; i += 1) {\n    if (!params[i].location || !params[i].sensor) {\n        showIncompleteAlert();\n        return;\n    }\n}\n\nif (this.widget) {\n    errorDiv.empty();\n    const dates = this.widget.data;\n    datasources.getHistoryForSensorsB.sendData({\n        sensor_ids: params.map((p) =\u003e p.sensor),\n        startTime: dates.startDate,\n        endTime: dates.endDate\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "2cb20973-9524-43cc-86ef-dd3c9c1678ae",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "f8a3978d-e433-45e3-8743-cb9439ab8598": {
                "externalScripts": [],
                "id": "f8a3978d-e433-45e3-8743-cb9439ab8598",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "f8530d60-fb6f-4f05-a369-4dd6356135f4",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".underline {\n  text-decoration: underline;\n}\n",
                                "HTML": "\u003cdiv class=\"text-center underline\"\u003e\n  \u003ch2\u003eHTML Widget\u003c/h2\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\n\nconst cgetSensorTypeById = (types, id) =\u003e {\n    return types.filter((t) =\u003e t.item_id === id)[0];\n}\n\nconst cgetSensorSubscription = (topic) =\u003e {\n    return window.sensorSubscriptions.filter((sub) =\u003e sub.topic === topic)[0];\n}\nconst cgetLabelForSensor = (sensorMsg) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.payload.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id === sensorMsg.sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorMsg.sensorName;\n}\n\nconst cgetSensorById = (id) =\u003e {\n    const sensors = datasources.getSensors.latestData().results.payload.DATA;\n    for (let i = 0, len = sensors.length; i \u003c len; i++) {\n        if (sensors[i].sensor_id === id) {\n            return sensors[i];\n        }\n    }\n}\n\nconst cmessageReceived = (msg) =\u003e {\n    let parsedMsg;\n    try {\n        parsedMsg = JSON.parse(msg);\n    } catch (e) {\n        console.error('Failed to parse message', e);\n    }\n    if (parsedMsg \u0026\u0026 parsedMsg.sensor_message.sensorID) {\n        try {\n            const id = parsedMsg.sensor_message.sensorID;\n            const sensor = cgetSensorById(id);\n            const sensorType = cgetSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, sensor.sensor_type_id);\n            const alertConfig = getAlertConfigForSensorById(id);\n            \n            datasources.testDatasourceSensors.sendData({\n                ...datasources.testDatasourceSensors.latestData(),\n                [id]: {\n                    id,\n                    sensorType,\n                    sensor,\n                    message: parsedMsg,\n                    alertConfig\n                }\n            })\n        } catch (e) {\n            console.error('Unable to update testDatasourceSensors', id, sensorType, sensor, e)\n        }\n    }\n}\n\nconst csetupMessaging = () =\u003e {\n    return new Promise((resolve) =\u003e {\n        if (!window.messagingObjectForSensors) {\n            window.sensorSubscriptions = [];\n            window.messagingObjectForSensors = CB_PORTAL.ClearBlade.Messaging({ useSSL: true }, resolve);\n        } else {\n            window.sensorSubscriptions.forEach((sub) =\u003e {\n                try {\n                    window.messagingObjectForSensors.unsubscribe(sub.topic, {});\n                } catch (e) {\n                    console.error('Unable to unsub from topics', e);\n                }\n            })\n\n            window.sensorSubscriptions = [];\n            resolve();\n        }\n    })\n}\n\nconst cmessageHistoryCallback = (err, data) =\u003e {\n    if (!err) {\n        if (data \u0026\u0026 data[0]) {\n            cmessageReceived(data[0].message);\n        }\n    }\n}\n\nconst cresetGauges = () =\u003e {\n    datasources.testDatasourceSensors.sendData({});\n}\n\nconst cupdateGauges = (sensors) =\u003e {\n    cresetGauges();\n\n    sensors.forEach((s) =\u003e {\n        const sensorType = cgetSensorTypeById(datasources.getSensorTypes.latestData().results.payload.DATA, s.sensor_type_id);\n        const topicName = `monnit-webhook-adapter/${s.sensor_id}`;\n\n        window.sensorSubscriptions.push({ topic: topicName });\n        window.messagingObjectForSensors.subscribe(topicName, {}, cmessageReceived);\n        CB_PORTAL.ClearBlade.MessagingStats().getMessageHistory(topicName, new Date().getTime(), 1, cmessageHistoryCallback)\n    })\n}\nfunction cfilterSensors(data)\n{\n    let sensors;\n    let probType=\"4ebd356c-b35d-4b7d-a2be-2b6854973057\";\n    try {\n        sensors = data.sensors;\n        sensors = sensors.filter((s)=\u003es.sensor_type_id != probType);\n        //let sensorsAry=sensors.map((sensor)=\u003e{if(sensor.sensor_type_id != probType) return sensor});\n       // sensors=sensorsAry;\n       console.log(sensors);\n    } catch (e) {\n        console.error('error parsing sensors after selecting asset', e);\n    }\n    if (sensors \u0026\u0026 Array.isArray(sensors)) {\n      \n        // update the history line chart\n        try {\n            datasources.sensorHistoryIds.sendData(sensors.map((s) =\u003e s.sensor_id))\n            if (datasources.sensorHistoryTimeRange.lastUpdated) {\n                const timeRange = datasources.sensorHistoryTimeRange.latestData();\n                datasources.getHistoryForSensors.sendData({\n                    sensor_ids: datasources.sensorHistoryIds.latestData(),\n                    startTime: timeRange.startDate.toISOString(),\n                    endTime: timeRange.endDate.toISOString()\n                })\n            }\n        } catch (e) {\n            console.error('error parsing sensors after selecting asset', e);\n        }\n        csetupMessaging().then(() =\u003e {\n            // update the 'latest data' gauges\n            try {\n                cupdateGauges(sensors);\n            } catch (e) {\n                console.error('error updating gauges', e);\n            }\n        })\n    }\n}\nvar cZAObj=this.datasource;\n$.each(cZAObj,function(index,value){\n    if(!datasources.assetDetails.lastUpdated)\n       datasources.assetDetails.sendData({});\n    var assetdetailsObj={};\n    var sensorsArray=[];\n    if(value.sensors.length\u003e0){\n        var sObj=value.sensors;\n     $.each(sObj,function(i,v){\n          if(!(v.sensor_type_id ==\"4ebd356c-b35d-4b7d-a2be-2b6854973057\"))\n        sensorsArray.push(v.sensor_id);\n    });\n         cfilterSensors(value);\n    }\n    value.sensors=sensorsArray;\n//     assetdetailsObj[value.name]={\"assetDetails\":value};\n//     assetdetailsObj[value.name].assetDetails.sensors=sensorsArray;\n   var latestDataObj=datasources.assetDetails.latestData();\n   latestDataObj[value.name]={\"assetDetails\":value};\n    datasources.assetDetails.sendData(latestDataObj);\n\n});\n\n\n\n\n\n//  $(\"#zoneAssetsTable tbody tr:first-child\").click();"
                            }
                        }
                    }
                },
                "tab": "28b2df06-0971-47e4-b4e0-86bea5364d50",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "f9914973-f658-449d-9045-4957562fdf5d": {
                "externalScripts": [],
                "id": "f9914973-f658-449d-9045-4957562fdf5d",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": ".csv-upload {\n    float: right;\n    text-align: right;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}",
                            "HTML": "\u003cdiv class=\"upload-btn-wrapper csv-upload\"\u003e\n  \u003cbutton class=\"btn btn-info\" id=\"upload-csv-btn\"\u003eUpload CSV\u003c/button\u003e\n  \u003cinput text=\"asdf\" type=\"file\" id=\"upload-csv\"\u003e\n  \u003cdiv class=\"csv-error text-danger\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"csv-success text-success\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "// $(\":file\").filestyle({ input: false, text: \"Upload CSV\" });\n\n$('input[type=file]').change(function (eve) {\n    var t = $(this).val();\n    var reader = new FileReader();\n    var f = eve.target.files[0]\n\n    // Closure to capture the file information.\n    reader.onload = (function (theFile) {\n        $('.csv-error').html('')\n        $('.csv-success').html('')\n        return function (e) {\n            let js = $.csv.toObjects(e.target.result)\n            // remove empty objects\n            js = js.filter(d =\u003e Object.values(d).find(el =\u003e el !== ''))\n                .map(d =\u003e (\n                    {\n                        name: d.name,\n                        description: d.description,\n                    }\n                ))\n            CB_PORTAL.Loader.waitFor(datasources.createAssetType.sendData({ asset_types: js }).then(res =\u003e {\n                if (res.success === false) {\n                    $('.csv-error').html(res.results)\n                    return\n                }\n                if (res.results.err) {\n                    $('.csv-error').html(res.results.message)\n                } else {\n                    $('.csv-success').html(\"Successfully Uploaded\")\n                    datasources.getAssetTypes.sendData()\n                }\n            }), 'upload-csv-btn')\n        };\n    })(f);\n\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n\n})\n"
                        }
                    }
                },
                "tab": "53d33460-9251-45c1-8776-e7859bb1b6f2",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "fc8724f3-0dc0-4529-8a62-e5cd979738bc": {
                "externalScripts": [],
                "id": "fc8724f3-0dc0-4529-8a62-e5cd979738bc",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#idfor_attachedsensors{\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n",
                            "HTML": "\u003cdiv class=\"text-center \"\u003e\n  \u003ch4 id=\"idfor_attachedsensors\"\u003eAttached Sensors\u003c/h4\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n"
                        }
                    }
                },
                "tab": "90c50b68-ea13-44fa-ae03-530a2a02a0d8",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "ff9fb924-64d5-42d4-a1e9-5dc1e4bfa022": {
                "externalScripts": [],
                "id": "ff9fb924-64d5-42d4-a1e9-5dc1e4bfa022",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".underline {\n  text-decoration: underline;\n}\n#samp_table{\n  margin-top: 1ch\n}\n#demo{\n margin-top: 1ch\n}\n.blank_row\n{\n    height: 30px !important; /* overwrites any other rules */\n    background-color: #FFFFFF;\n}",
                            "HTML": "\u003cdiv class=\"container\"\u003e\n\n  \u003cbutton onclick=\"exportTblcsv()\" type=\"button\" class=\"btn btn-info\" \u003eDownload    CSV format\u003c/button\u003e\n \n  \u003cdiv id=\"demo\" class=\"collapse\"\u003e\nthe CSV File have to be in this format \n\u003ctable class='table-bordered' id=\"samp_table\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cb\u003e asset_type_id  \u003c/b\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cb\u003e comments \u003c/b\u003e\u003c/td\u003e\n       \u003ctd\u003e\u003cb\u003e location_id \u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003e\u003cb\u003e name \u003c/b\u003e\u003c/td\u003e\n         \u003ctd\u003e\u003cb\u003e primary_employee \u003c/b\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cb\u003e customer_id \u003c/b\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n \u003ctr class=\"blank_row\"\u003e\n    \u003ctd colspan=\"6\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n$(function(){\n window.exportTblcsv=function(){\n  var tableID = \"samp_table\";\n     var filename = \"fomat.csv\";\n     var csv = [];\n     var tableSelect = document.getElementById(tableID);\n var rows = tableSelect.querySelectorAll(\"table tr\");\n    for (var i = 0; i \u003c rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll(\"td, th\");        \n        for (var j = 0; j \u003c cols.length; j++) \n            row.push(cols[j].innerText);        \n        csv.push(row.join(\",\"));        \n    }\n     downloadCSV(csv.join(\"\\n\"), filename);\n  } \n     function downloadCSV(csv, filename) {\n     var csvFile;\n     var downloadLink;\n    csvFile = new Blob([csv], {type: \"text/csv\"});\n    downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n}\n  });\n"
                        }
                    }
                },
                "tab": "e28b4275-d81d-4b77-a339-6ab6d9de0eec",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "flyoutTitle": {
                "externalScripts": [],
                "id": "flyoutTitle",
                "props": {
                    "HAS_UNIQUE_STYLE": true,
                    "fontColor": "#fff",
                    "fontFamily": "Helvetica",
                    "fontSize": 30,
                    "textContent": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "value": "return 'Smart Refrigerator'"
                    }
                },
                "tab": "",
                "type": "TEXT_WIDGET_COMPONENT"
            },
            "title": {
                "externalScripts": [],
                "id": "title",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".headerTitle1{\n    font-family: Lato,sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n        color: #47485A\n}\n.headerTitle2{\n    font-family: Lato,sans-serif;\n    font-size: 24px;\n    font-weight: thin;\n        color: #47485A\n}\n#selectedAssetMetadata .form-inline,#selectedAssetMetadata1{\n    display:none;\n}\n\n#alerts-time-filter .form-fields,#alerts-time-filter .form-inline,#foodtestktable .form-fields , #foodtestktable .form-inline{\n    display:inline-block;\n}\n#foodtestktable button{\n    margin-top:50px;\n}\n#foodtestktable form{\n    margin-top:-85px;\n}\n/* #foodTestData .ReactTable .rt-tbody .rt-tr-group .rt-td:nth-child(2) .input-section span{color:red !important;} */\n#zone-and-asset-info .form-inline,#sensors-form .form-inline{\n    display:none !important;\n}\n#zone-and-asset-info form,#zone-and-asset-info form input{\n    font-size: 0.75rem !important;\n}\n.showSensors{\n  /* visibility: visible; */\n  display: block;\n}\n.hideSensors{\n   /* visibility: hidden; */\n   display: none;\n}\n\n.asset-info{\n    color:coral;\n}\n#Gateways,#Sensors{\n    color:cornflowerblue;\n    cursor: pointer;\n}",
                            "HTML": "\u003cdiv id=\"header-title-container1\"\u003e\n  \u003cspan class=\"headerTitle1\"\u003eSmart\u003c/span\u003e\u003cspan class=\"headerTitle2\"\u003eRefrigeration\u003c/span\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\nconst container = $('#header-title-container');\ncontainer.text('Smart Refrigeration');\nwindow.onhashchange = (hashArg) =\u003e {\n    const hash = window.location.hash;\n    if (CB_PORTAL.getPathParams() \u0026\u0026 CB_PORTAL.getPathParams().TestDetail) {\n        const id = CB_PORTAL.getPathParams().TestDetail;\n        datasources.getTests.sendData({ \"test_id\": id }).then((res) =\u003e {\n            container.text(res.results.payload.DATA[0].name)\n        })\n    }\n    const customer_id = datasources.currentCustomer.latestData().item_id;\n\n    // Hacky fix for forms with dynamic dropdowns no appearing if gone to with browser back\n    const newHash = hashArg.newURL.split('#')[1] \u0026\u0026 hashArg.newURL.split('#')[1].toLowerCase()\n    const oldHash = hashArg.oldURL.split('#')[1] \u0026\u0026 hashArg.oldURL.split('#')[1].toLowerCase()\n    if (newHash === '/assets') {\n        const currentAssetId = datasources.currentAssetId.latestData();\n        datasources.currentAssetId.sendData('none')\n        setTimeout(() =\u003e {\n            datasources.currentAssetId.sendData(currentAssetId)\n        }, 0)\n    }\n    if (newHash === '/sensors') {\n        const currentSensor = datasources.currentSensor.latestData();\n        datasources.currentSensor.sendData('none')\n        datasources.getSensors.sendData({ customer_id })\n        setTimeout(() =\u003e {\n            datasources.currentSensor.sendData(currentSensor)\n        }, 0)\n    }\n    if (newHash === '/gateways') {\n        const currentGatewayId = datasources.currentGatewayId.latestData();\n        datasources.currentGatewayId.sendData('none')\n        setTimeout(() =\u003e {\n            datasources.currentGatewayId.sendData(currentGatewayId)\n        }, 0)\n    }\n    if (newHash === '/employees') {\n        const currentEmployeeAdminPage = datasources.currentEmployeeAdminPage.latestData();\n        datasources.currentEmployeeAdminPage.sendData('none')\n        setTimeout(() =\u003e {\n            datasources.currentEmployeeAdminPage.sendData(currentEmployeeAdminPage)\n        }, 0)\n    }\n\n    if (oldHash === '/alertconfig') {\n        // reset data if it's messed up by location sensor searches\n        datasources.getSensors.sendData({ customer_id })\n        datasources.getAssets.sendData({ customer_id })\n    }\n\n    datasources.getAlertConfigurations.sendData({\n        customer_id,\n    })\n}\nfunction checkTestResults()\n{\nif($(\"#foodTestData .ReactTable .rt-tbody .rt-tr-group .rt-td:nth-child(2) .input-section span\").is(':visible'))\n{\n$(\"#foodTestData .ReactTable .rt-tbody .rt-tr-group .rt-td:nth-child(2) .input-section .text-muted:contains('FAIL')\").css({\"color\":\"red !important\"});\n$(\"#foodTestData .ReactTable .rt-tbody .rt-tr-group .rt-td:nth-child(2) .input-section .text-muted:contains('PASS')\").css({\"color\":\"green !important\"});\n}else{\nsetTimeout(checkTestResults, 60000);\n}\n}\n$(function(){\n   checkTestResults();\n});\n\nvar gsInfo=`\u003cdiv class=\"modal\" id=\"gateways_sensors_info\"\u003e\n  \u003cdiv class=\"modal-dialog modal-lg\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003c!-- Modal Header --\u003e\n      \u003cdiv class=\"modal-header\"\u003e\n        \u003ch4 class=\"modal-title\"\u003eModal Heading\u003c/h4\u003e\n        \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\"\u003e\u0026times;\u003c/button\u003e\n      \u003c/div\u003e\n\n      \u003c!-- Modal body --\u003e\n      \u003cdiv class=\"modal-body\"\u003e\n        Modal body..\n      \u003c/div\u003e\n\n      \u003c!-- Modal footer --\u003e\n      \u003cdiv class=\"modal-footer\"\u003e\n        \u003cbutton type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"\u003eClose\u003c/button\u003e\n      \u003c/div\u003e\n\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e`;\n$(\"body\").append(gsInfo);\n\n\n"
                        }
                    }
                },
                "tab": "HEADER",
                "type": "HTML_WIDGET_COMPONENT"
            }
        }
    },
    "description": "",
    "last_updated": "03 Jan 19 12:16 UTC",
    "name": "Portal_For_Modifications",
    "system_key": "aebed3b90bcabac4e7c6eef5b9e601",
    "type": "custom_v2"
}